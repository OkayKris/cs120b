
glcd_test_now_that_i_understand.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  00002a0c  00002aa0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000220  008001ea  008001ea  00002b8a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002b8a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002bbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002f0  00000000  00000000  00002c00  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ec6  00000000  00000000  00002ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3c  00000000  00000000  00005db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002c26  00000000  00000000  000068f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bb0  00000000  00000000  00009518  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000cea  00000000  00000000  0000a0c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000018f1  00000000  00000000  0000adb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000348  00000000  00000000  0000c6a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
       2:	00 00       	nop
       4:	52 c1       	rjmp	.+676    	; 0x2aa <__bad_interrupt>
       6:	00 00       	nop
       8:	50 c1       	rjmp	.+672    	; 0x2aa <__bad_interrupt>
       a:	00 00       	nop
       c:	4e c1       	rjmp	.+668    	; 0x2aa <__bad_interrupt>
       e:	00 00       	nop
      10:	4c c1       	rjmp	.+664    	; 0x2aa <__bad_interrupt>
      12:	00 00       	nop
      14:	4a c1       	rjmp	.+660    	; 0x2aa <__bad_interrupt>
      16:	00 00       	nop
      18:	48 c1       	rjmp	.+656    	; 0x2aa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	46 c1       	rjmp	.+652    	; 0x2aa <__bad_interrupt>
      1e:	00 00       	nop
      20:	44 c1       	rjmp	.+648    	; 0x2aa <__bad_interrupt>
      22:	00 00       	nop
      24:	42 c1       	rjmp	.+644    	; 0x2aa <__bad_interrupt>
      26:	00 00       	nop
      28:	40 c1       	rjmp	.+640    	; 0x2aa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3e c1       	rjmp	.+636    	; 0x2aa <__bad_interrupt>
      2e:	00 00       	nop
      30:	3c c1       	rjmp	.+632    	; 0x2aa <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 44 08 	jmp	0x1088	; 0x1088 <__vector_13>
      38:	38 c1       	rjmp	.+624    	; 0x2aa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	36 c1       	rjmp	.+620    	; 0x2aa <__bad_interrupt>
      3e:	00 00       	nop
      40:	34 c1       	rjmp	.+616    	; 0x2aa <__bad_interrupt>
      42:	00 00       	nop
      44:	32 c1       	rjmp	.+612    	; 0x2aa <__bad_interrupt>
      46:	00 00       	nop
      48:	30 c1       	rjmp	.+608    	; 0x2aa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2e c1       	rjmp	.+604    	; 0x2aa <__bad_interrupt>
      4e:	00 00       	nop
      50:	2c c1       	rjmp	.+600    	; 0x2aa <__bad_interrupt>
      52:	00 00       	nop
      54:	2a c1       	rjmp	.+596    	; 0x2aa <__bad_interrupt>
      56:	00 00       	nop
      58:	28 c1       	rjmp	.+592    	; 0x2aa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	26 c1       	rjmp	.+588    	; 0x2aa <__bad_interrupt>
      5e:	00 00       	nop
      60:	24 c1       	rjmp	.+584    	; 0x2aa <__bad_interrupt>
      62:	00 00       	nop
      64:	22 c1       	rjmp	.+580    	; 0x2aa <__bad_interrupt>
      66:	00 00       	nop
      68:	20 c1       	rjmp	.+576    	; 0x2aa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1e c1       	rjmp	.+572    	; 0x2aa <__bad_interrupt>
      6e:	00 00       	nop
      70:	1c c1       	rjmp	.+568    	; 0x2aa <__bad_interrupt>
      72:	00 00       	nop
      74:	1a c1       	rjmp	.+564    	; 0x2aa <__bad_interrupt>
      76:	00 00       	nop
      78:	18 c1       	rjmp	.+560    	; 0x2aa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	16 c1       	rjmp	.+556    	; 0x2aa <__bad_interrupt>
      7e:	00 00       	nop
      80:	14 c1       	rjmp	.+552    	; 0x2aa <__bad_interrupt>
      82:	00 00       	nop
      84:	12 c1       	rjmp	.+548    	; 0x2aa <__bad_interrupt>
      86:	00 00       	nop
      88:	10 c1       	rjmp	.+544    	; 0x2aa <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	00 00       	nop
      8e:	00 00       	nop
      90:	00 00       	nop
      92:	00 5f       	subi	r16, 0xF0	; 240
      94:	00 00       	nop
      96:	00 07       	cpc	r16, r16
      98:	00 07       	cpc	r16, r16
      9a:	00 14       	cp	r0, r0
      9c:	7f 14       	cp	r7, r15
      9e:	7f 14       	cp	r7, r15
      a0:	24 2a       	or	r2, r20
      a2:	7f 2a       	or	r7, r31
      a4:	12 23       	and	r17, r18
      a6:	13 08       	sbc	r1, r3
      a8:	64 62       	ori	r22, 0x24	; 36
      aa:	36 49       	sbci	r19, 0x96	; 150
      ac:	55 22       	and	r5, r21
      ae:	50 00       	.word	0x0050	; ????
      b0:	05 03       	mulsu	r16, r21
      b2:	00 00       	nop
      b4:	00 1c       	adc	r0, r0
      b6:	22 41       	sbci	r18, 0x12	; 18
      b8:	00 00       	nop
      ba:	41 22       	and	r4, r17
      bc:	1c 00       	.word	0x001c	; ????
      be:	08 2a       	or	r0, r24
      c0:	1c 2a       	or	r1, r28
      c2:	08 08       	sbc	r0, r8
      c4:	08 3e       	cpi	r16, 0xE8	; 232
      c6:	08 08       	sbc	r0, r8
      c8:	00 50       	subi	r16, 0x00	; 0
      ca:	30 00       	.word	0x0030	; ????
      cc:	00 08       	sbc	r0, r0
      ce:	08 08       	sbc	r0, r8
      d0:	08 08       	sbc	r0, r8
      d2:	00 60       	ori	r16, 0x00	; 0
      d4:	60 00       	.word	0x0060	; ????
      d6:	00 20       	and	r0, r0
      d8:	10 08       	sbc	r1, r0
      da:	04 02       	muls	r16, r20
      dc:	3e 51       	subi	r19, 0x1E	; 30
      de:	49 45       	sbci	r20, 0x59	; 89
      e0:	3e 00       	.word	0x003e	; ????
      e2:	42 7f       	andi	r20, 0xF2	; 242
      e4:	40 00       	.word	0x0040	; ????
      e6:	42 61       	ori	r20, 0x12	; 18
      e8:	51 49       	sbci	r21, 0x91	; 145
      ea:	46 21       	and	r20, r6
      ec:	41 45       	sbci	r20, 0x51	; 81
      ee:	4b 31       	cpi	r20, 0x1B	; 27
      f0:	18 14       	cp	r1, r8
      f2:	12 7f       	andi	r17, 0xF2	; 242
      f4:	10 27       	eor	r17, r16
      f6:	45 45       	sbci	r20, 0x55	; 85
      f8:	45 39       	cpi	r20, 0x95	; 149
      fa:	3c 4a       	sbci	r19, 0xAC	; 172
      fc:	49 49       	sbci	r20, 0x99	; 153
      fe:	30 01       	movw	r6, r0
     100:	71 09       	sbc	r23, r1
     102:	05 03       	mulsu	r16, r21
     104:	36 49       	sbci	r19, 0x96	; 150
     106:	49 49       	sbci	r20, 0x99	; 153
     108:	36 06       	cpc	r3, r22
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	29 1e       	adc	r2, r25
     10e:	00 36       	cpi	r16, 0x60	; 96
     110:	36 00       	.word	0x0036	; ????
     112:	00 00       	nop
     114:	56 36       	cpi	r21, 0x66	; 102
     116:	00 00       	nop
     118:	00 08       	sbc	r0, r0
     11a:	14 22       	and	r1, r20
     11c:	41 14       	cp	r4, r1
     11e:	14 14       	cp	r1, r4
     120:	14 14       	cp	r1, r4
     122:	41 22       	and	r4, r17
     124:	14 08       	sbc	r1, r4
     126:	00 02       	muls	r16, r16
     128:	01 51       	subi	r16, 0x11	; 17
     12a:	09 06       	cpc	r0, r25
     12c:	32 49       	sbci	r19, 0x92	; 146
     12e:	79 41       	sbci	r23, 0x19	; 25
     130:	3e 7e       	andi	r19, 0xEE	; 238
     132:	11 11       	cpse	r17, r1
     134:	11 7e       	andi	r17, 0xE1	; 225
     136:	7f 49       	sbci	r23, 0x9F	; 159
     138:	49 49       	sbci	r20, 0x99	; 153
     13a:	36 3e       	cpi	r19, 0xE6	; 230
     13c:	41 41       	sbci	r20, 0x11	; 17
     13e:	41 22       	and	r4, r17
     140:	7f 41       	sbci	r23, 0x1F	; 31
     142:	41 22       	and	r4, r17
     144:	1c 7f       	andi	r17, 0xFC	; 252
     146:	49 49       	sbci	r20, 0x99	; 153
     148:	49 41       	sbci	r20, 0x19	; 25
     14a:	7f 09       	sbc	r23, r15
     14c:	09 01       	movw	r0, r18
     14e:	01 3e       	cpi	r16, 0xE1	; 225
     150:	41 41       	sbci	r20, 0x11	; 17
     152:	51 32       	cpi	r21, 0x21	; 33
     154:	7f 08       	sbc	r7, r15
     156:	08 08       	sbc	r0, r8
     158:	7f 00       	.word	0x007f	; ????
     15a:	41 7f       	andi	r20, 0xF1	; 241
     15c:	41 00       	.word	0x0041	; ????
     15e:	20 40       	sbci	r18, 0x00	; 0
     160:	41 3f       	cpi	r20, 0xF1	; 241
     162:	01 7f       	andi	r16, 0xF1	; 241
     164:	08 14       	cp	r0, r8
     166:	22 41       	sbci	r18, 0x12	; 18
     168:	7f 40       	sbci	r23, 0x0F	; 15
     16a:	40 40       	sbci	r20, 0x00	; 0
     16c:	40 7f       	andi	r20, 0xF0	; 240
     16e:	02 04       	cpc	r0, r2
     170:	02 7f       	andi	r16, 0xF2	; 242
     172:	7f 04       	cpc	r7, r15
     174:	08 10       	cpse	r0, r8
     176:	7f 3e       	cpi	r23, 0xEF	; 239
     178:	41 41       	sbci	r20, 0x11	; 17
     17a:	41 3e       	cpi	r20, 0xE1	; 225
     17c:	7f 09       	sbc	r23, r15
     17e:	09 09       	sbc	r16, r9
     180:	06 3e       	cpi	r16, 0xE6	; 230
     182:	41 51       	subi	r20, 0x11	; 17
     184:	21 5e       	subi	r18, 0xE1	; 225
     186:	7f 09       	sbc	r23, r15
     188:	19 29       	or	r17, r9
     18a:	46 46       	sbci	r20, 0x66	; 102
     18c:	49 49       	sbci	r20, 0x99	; 153
     18e:	49 31       	cpi	r20, 0x19	; 25
     190:	01 01       	movw	r0, r2
     192:	7f 01       	movw	r14, r30
     194:	01 3f       	cpi	r16, 0xF1	; 241
     196:	40 40       	sbci	r20, 0x00	; 0
     198:	40 3f       	cpi	r20, 0xF0	; 240
     19a:	1f 20       	and	r1, r15
     19c:	40 20       	and	r4, r0
     19e:	1f 7f       	andi	r17, 0xFF	; 255
     1a0:	20 18       	sub	r2, r0
     1a2:	20 7f       	andi	r18, 0xF0	; 240
     1a4:	63 14       	cp	r6, r3
     1a6:	08 14       	cp	r0, r8
     1a8:	63 03       	mulsu	r22, r19
     1aa:	04 78       	andi	r16, 0x84	; 132
     1ac:	04 03       	mulsu	r16, r20
     1ae:	61 51       	subi	r22, 0x11	; 17
     1b0:	49 45       	sbci	r20, 0x59	; 89
     1b2:	43 00       	.word	0x0043	; ????
     1b4:	00 7f       	andi	r16, 0xF0	; 240
     1b6:	41 41       	sbci	r20, 0x11	; 17
     1b8:	02 04       	cpc	r0, r2
     1ba:	08 10       	cpse	r0, r8
     1bc:	20 41       	sbci	r18, 0x10	; 16
     1be:	41 7f       	andi	r20, 0xF1	; 241
     1c0:	00 00       	nop
     1c2:	04 02       	muls	r16, r20
     1c4:	01 02       	muls	r16, r17
     1c6:	04 40       	sbci	r16, 0x04	; 4
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	40 40       	sbci	r20, 0x00	; 0
     1cc:	00 01       	movw	r0, r0
     1ce:	02 04       	cpc	r0, r2
     1d0:	00 20       	and	r0, r0
     1d2:	54 54       	subi	r21, 0x44	; 68
     1d4:	54 78       	andi	r21, 0x84	; 132
     1d6:	7f 48       	sbci	r23, 0x8F	; 143
     1d8:	44 44       	sbci	r20, 0x44	; 68
     1da:	38 38       	cpi	r19, 0x88	; 136
     1dc:	44 44       	sbci	r20, 0x44	; 68
     1de:	44 20       	and	r4, r4
     1e0:	38 44       	sbci	r19, 0x48	; 72
     1e2:	44 48       	sbci	r20, 0x84	; 132
     1e4:	7f 38       	cpi	r23, 0x8F	; 143
     1e6:	54 54       	subi	r21, 0x44	; 68
     1e8:	54 18       	sub	r5, r4
     1ea:	08 7e       	andi	r16, 0xE8	; 232
     1ec:	09 01       	movw	r0, r18
     1ee:	02 08       	sbc	r0, r2
     1f0:	14 54       	subi	r17, 0x44	; 68
     1f2:	54 3c       	cpi	r21, 0xC4	; 196
     1f4:	7f 08       	sbc	r7, r15
     1f6:	04 04       	cpc	r0, r4
     1f8:	78 00       	.word	0x0078	; ????
     1fa:	44 7d       	andi	r20, 0xD4	; 212
     1fc:	40 00       	.word	0x0040	; ????
     1fe:	20 40       	sbci	r18, 0x00	; 0
     200:	44 3d       	cpi	r20, 0xD4	; 212
     202:	00 00       	nop
     204:	7f 10       	cpse	r7, r15
     206:	28 44       	sbci	r18, 0x48	; 72
     208:	00 41       	sbci	r16, 0x10	; 16
     20a:	7f 40       	sbci	r23, 0x0F	; 15
     20c:	00 7c       	andi	r16, 0xC0	; 192
     20e:	04 18       	sub	r0, r4
     210:	04 78       	andi	r16, 0x84	; 132
     212:	7c 08       	sbc	r7, r12
     214:	04 04       	cpc	r0, r4
     216:	78 38       	cpi	r23, 0x88	; 136
     218:	44 44       	sbci	r20, 0x44	; 68
     21a:	44 38       	cpi	r20, 0x84	; 132
     21c:	7c 14       	cp	r7, r12
     21e:	14 14       	cp	r1, r4
     220:	08 08       	sbc	r0, r8
     222:	14 14       	cp	r1, r4
     224:	18 7c       	andi	r17, 0xC8	; 200
     226:	7c 08       	sbc	r7, r12
     228:	04 04       	cpc	r0, r4
     22a:	08 48       	sbci	r16, 0x88	; 136
     22c:	54 54       	subi	r21, 0x44	; 68
     22e:	54 20       	and	r5, r4
     230:	04 3f       	cpi	r16, 0xF4	; 244
     232:	44 40       	sbci	r20, 0x04	; 4
     234:	20 3c       	cpi	r18, 0xC0	; 192
     236:	40 40       	sbci	r20, 0x00	; 0
     238:	20 7c       	andi	r18, 0xC0	; 192
     23a:	1c 20       	and	r1, r12
     23c:	40 20       	and	r4, r0
     23e:	1c 3c       	cpi	r17, 0xCC	; 204
     240:	40 30       	cpi	r20, 0x00	; 0
     242:	40 3c       	cpi	r20, 0xC0	; 192
     244:	44 28       	or	r4, r4
     246:	10 28       	or	r1, r0
     248:	44 0c       	add	r4, r4
     24a:	50 50       	subi	r21, 0x00	; 0
     24c:	50 3c       	cpi	r21, 0xC0	; 192
     24e:	44 64       	ori	r20, 0x44	; 68
     250:	54 4c       	sbci	r21, 0xC4	; 196
     252:	44 00       	.word	0x0044	; ????
     254:	08 36       	cpi	r16, 0x68	; 104
     256:	41 00       	.word	0x0041	; ????
     258:	00 00       	nop
     25a:	7f 00       	.word	0x007f	; ????
     25c:	00 00       	nop
     25e:	41 36       	cpi	r20, 0x61	; 97
     260:	08 00       	.word	0x0008	; ????
     262:	08 08       	sbc	r0, r8
     264:	2a 1c       	adc	r2, r10
     266:	08 08       	sbc	r0, r8
     268:	1c 2a       	or	r1, r28
     26a:	08 08       	sbc	r0, r8

0000026c <__ctors_end>:
     26c:	11 24       	eor	r1, r1
     26e:	1f be       	out	0x3f, r1	; 63
     270:	cf ef       	ldi	r28, 0xFF	; 255
     272:	d0 e4       	ldi	r29, 0x40	; 64
     274:	de bf       	out	0x3e, r29	; 62
     276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
     278:	11 e0       	ldi	r17, 0x01	; 1
     27a:	a0 e0       	ldi	r26, 0x00	; 0
     27c:	b1 e0       	ldi	r27, 0x01	; 1
     27e:	ec e0       	ldi	r30, 0x0C	; 12
     280:	fa e2       	ldi	r31, 0x2A	; 42
     282:	00 e0       	ldi	r16, 0x00	; 0
     284:	0b bf       	out	0x3b, r16	; 59
     286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
     288:	07 90       	elpm	r0, Z+
     28a:	0d 92       	st	X+, r0
     28c:	aa 3e       	cpi	r26, 0xEA	; 234
     28e:	b1 07       	cpc	r27, r17
     290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
     292:	24 e0       	ldi	r18, 0x04	; 4
     294:	aa ee       	ldi	r26, 0xEA	; 234
     296:	b1 e0       	ldi	r27, 0x01	; 1
     298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
     29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
     29c:	aa 30       	cpi	r26, 0x0A	; 10
     29e:	b2 07       	cpc	r27, r18
     2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
     2a2:	0e 94 42 12 	call	0x2484	; 0x2484 <main>
     2a6:	0c 94 04 15 	jmp	0x2a08	; 0x2a08 <_exit>

000002aa <__bad_interrupt>:
     2aa:	aa ce       	rjmp	.-684    	; 0x0 <__vectors>

000002ac <time>:
     2ac:	fc 01       	movw	r30, r24
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	f8 94       	cli
     2b2:	60 91 06 04 	lds	r22, 0x0406	; 0x800406 <__system_time>
     2b6:	70 91 07 04 	lds	r23, 0x0407	; 0x800407 <__system_time+0x1>
     2ba:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__system_time+0x2>
     2be:	90 91 09 04 	lds	r25, 0x0409	; 0x800409 <__system_time+0x3>
     2c2:	0f be       	out	0x3f, r0	; 63
     2c4:	30 97       	sbiw	r30, 0x00	; 0
     2c6:	21 f0       	breq	.+8      	; 0x2d0 <time+0x24>
     2c8:	60 83       	st	Z, r22
     2ca:	71 83       	std	Z+1, r23	; 0x01
     2cc:	82 83       	std	Z+2, r24	; 0x02
     2ce:	93 83       	std	Z+3, r25	; 0x03
     2d0:	08 95       	ret

000002d2 <LCD_ClearScreen>:
	LCD_DisplayString(1, "Score: ");
	LCD_Cursor(20);
	LCD_WriteData(4);
	LCD_Cursor(22);
	LCD_WriteData(4);
}
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	cd b7       	in	r28, 0x3d	; 61
     2d8:	de b7       	in	r29, 0x3e	; 62
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	1a d0       	rcall	.+52     	; 0x312 <LCD_WriteCommand>
     2de:	00 00       	nop
     2e0:	df 91       	pop	r29
     2e2:	cf 91       	pop	r28
     2e4:	08 95       	ret

000002e6 <LCD_init>:
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	cd b7       	in	r28, 0x3d	; 61
     2ec:	de b7       	in	r29, 0x3e	; 62
     2ee:	84 e6       	ldi	r24, 0x64	; 100
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	ac d0       	rcall	.+344    	; 0x44c <delay_ms>
     2f4:	88 e3       	ldi	r24, 0x38	; 56
     2f6:	0d d0       	rcall	.+26     	; 0x312 <LCD_WriteCommand>
     2f8:	86 e0       	ldi	r24, 0x06	; 6
     2fa:	0b d0       	rcall	.+22     	; 0x312 <LCD_WriteCommand>
     2fc:	8f e0       	ldi	r24, 0x0F	; 15
     2fe:	09 d0       	rcall	.+18     	; 0x312 <LCD_WriteCommand>
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	07 d0       	rcall	.+14     	; 0x312 <LCD_WriteCommand>
     304:	8a e0       	ldi	r24, 0x0A	; 10
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	a1 d0       	rcall	.+322    	; 0x44c <delay_ms>
     30a:	00 00       	nop
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	08 95       	ret

00000312 <LCD_WriteCommand>:
     312:	cf 93       	push	r28
     314:	df 93       	push	r29
     316:	1f 92       	push	r1
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	89 83       	std	Y+1, r24	; 0x01
     31e:	8b e2       	ldi	r24, 0x2B	; 43
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	2b e2       	ldi	r18, 0x2B	; 43
     324:	30 e0       	ldi	r19, 0x00	; 0
     326:	f9 01       	movw	r30, r18
     328:	20 81       	ld	r18, Z
     32a:	2f 7b       	andi	r18, 0xBF	; 191
     32c:	fc 01       	movw	r30, r24
     32e:	20 83       	st	Z, r18
     330:	88 e2       	ldi	r24, 0x28	; 40
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	29 81       	ldd	r18, Y+1	; 0x01
     336:	fc 01       	movw	r30, r24
     338:	20 83       	st	Z, r18
     33a:	8b e2       	ldi	r24, 0x2B	; 43
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	2b e2       	ldi	r18, 0x2B	; 43
     340:	30 e0       	ldi	r19, 0x00	; 0
     342:	f9 01       	movw	r30, r18
     344:	20 81       	ld	r18, Z
     346:	20 68       	ori	r18, 0x80	; 128
     348:	fc 01       	movw	r30, r24
     34a:	20 83       	st	Z, r18
     34c:	00 00       	nop
     34e:	8b e2       	ldi	r24, 0x2B	; 43
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	2b e2       	ldi	r18, 0x2B	; 43
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	f9 01       	movw	r30, r18
     358:	20 81       	ld	r18, Z
     35a:	2f 77       	andi	r18, 0x7F	; 127
     35c:	fc 01       	movw	r30, r24
     35e:	20 83       	st	Z, r18
     360:	82 e0       	ldi	r24, 0x02	; 2
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	73 d0       	rcall	.+230    	; 0x44c <delay_ms>
     366:	00 00       	nop
     368:	0f 90       	pop	r0
     36a:	df 91       	pop	r29
     36c:	cf 91       	pop	r28
     36e:	08 95       	ret

00000370 <LCD_WriteData>:
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	1f 92       	push	r1
     376:	cd b7       	in	r28, 0x3d	; 61
     378:	de b7       	in	r29, 0x3e	; 62
     37a:	89 83       	std	Y+1, r24	; 0x01
     37c:	8b e2       	ldi	r24, 0x2B	; 43
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	2b e2       	ldi	r18, 0x2B	; 43
     382:	30 e0       	ldi	r19, 0x00	; 0
     384:	f9 01       	movw	r30, r18
     386:	20 81       	ld	r18, Z
     388:	20 64       	ori	r18, 0x40	; 64
     38a:	fc 01       	movw	r30, r24
     38c:	20 83       	st	Z, r18
     38e:	88 e2       	ldi	r24, 0x28	; 40
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	29 81       	ldd	r18, Y+1	; 0x01
     394:	fc 01       	movw	r30, r24
     396:	20 83       	st	Z, r18
     398:	8b e2       	ldi	r24, 0x2B	; 43
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	2b e2       	ldi	r18, 0x2B	; 43
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	f9 01       	movw	r30, r18
     3a2:	20 81       	ld	r18, Z
     3a4:	20 68       	ori	r18, 0x80	; 128
     3a6:	fc 01       	movw	r30, r24
     3a8:	20 83       	st	Z, r18
     3aa:	00 00       	nop
     3ac:	8b e2       	ldi	r24, 0x2B	; 43
     3ae:	90 e0       	ldi	r25, 0x00	; 0
     3b0:	2b e2       	ldi	r18, 0x2B	; 43
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	f9 01       	movw	r30, r18
     3b6:	20 81       	ld	r18, Z
     3b8:	2f 77       	andi	r18, 0x7F	; 127
     3ba:	fc 01       	movw	r30, r24
     3bc:	20 83       	st	Z, r18
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	44 d0       	rcall	.+136    	; 0x44c <delay_ms>
     3c4:	00 00       	nop
     3c6:	0f 90       	pop	r0
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <LCD_DisplayString>:
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	00 d0       	rcall	.+0      	; 0x3d4 <LCD_DisplayString+0x6>
     3d4:	00 d0       	rcall	.+0      	; 0x3d6 <LCD_DisplayString+0x8>
     3d6:	cd b7       	in	r28, 0x3d	; 61
     3d8:	de b7       	in	r29, 0x3e	; 62
     3da:	8a 83       	std	Y+2, r24	; 0x02
     3dc:	7c 83       	std	Y+4, r23	; 0x04
     3de:	6b 83       	std	Y+3, r22	; 0x03
     3e0:	78 df       	rcall	.-272    	; 0x2d2 <LCD_ClearScreen>
     3e2:	8a 81       	ldd	r24, Y+2	; 0x02
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	0f c0       	rjmp	.+30     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3e8:	89 81       	ldd	r24, Y+1	; 0x01
     3ea:	91 e0       	ldi	r25, 0x01	; 1
     3ec:	98 0f       	add	r25, r24
     3ee:	99 83       	std	Y+1, r25	; 0x01
     3f0:	18 d0       	rcall	.+48     	; 0x422 <LCD_Cursor>
     3f2:	8b 81       	ldd	r24, Y+3	; 0x03
     3f4:	9c 81       	ldd	r25, Y+4	; 0x04
     3f6:	9c 01       	movw	r18, r24
     3f8:	2f 5f       	subi	r18, 0xFF	; 255
     3fa:	3f 4f       	sbci	r19, 0xFF	; 255
     3fc:	3c 83       	std	Y+4, r19	; 0x04
     3fe:	2b 83       	std	Y+3, r18	; 0x03
     400:	fc 01       	movw	r30, r24
     402:	80 81       	ld	r24, Z
     404:	b5 df       	rcall	.-150    	; 0x370 <LCD_WriteData>
     406:	8b 81       	ldd	r24, Y+3	; 0x03
     408:	9c 81       	ldd	r25, Y+4	; 0x04
     40a:	fc 01       	movw	r30, r24
     40c:	80 81       	ld	r24, Z
     40e:	88 23       	and	r24, r24
     410:	59 f7       	brne	.-42     	; 0x3e8 <LCD_DisplayString+0x1a>
     412:	00 00       	nop
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	df 91       	pop	r29
     41e:	cf 91       	pop	r28
     420:	08 95       	ret

00000422 <LCD_Cursor>:
     422:	cf 93       	push	r28
     424:	df 93       	push	r29
     426:	1f 92       	push	r1
     428:	cd b7       	in	r28, 0x3d	; 61
     42a:	de b7       	in	r29, 0x3e	; 62
     42c:	89 83       	std	Y+1, r24	; 0x01
     42e:	89 81       	ldd	r24, Y+1	; 0x01
     430:	81 31       	cpi	r24, 0x11	; 17
     432:	20 f4       	brcc	.+8      	; 0x43c <LCD_Cursor+0x1a>
     434:	89 81       	ldd	r24, Y+1	; 0x01
     436:	81 58       	subi	r24, 0x81	; 129
     438:	6c df       	rcall	.-296    	; 0x312 <LCD_WriteCommand>
     43a:	03 c0       	rjmp	.+6      	; 0x442 <LCD_Cursor+0x20>
     43c:	89 81       	ldd	r24, Y+1	; 0x01
     43e:	81 55       	subi	r24, 0x51	; 81
     440:	68 df       	rcall	.-304    	; 0x312 <LCD_WriteCommand>
     442:	00 00       	nop
     444:	0f 90       	pop	r0
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <delay_ms>:
     44c:	cf 93       	push	r28
     44e:	df 93       	push	r29
     450:	00 d0       	rcall	.+0      	; 0x452 <delay_ms+0x6>
     452:	00 d0       	rcall	.+0      	; 0x454 <delay_ms+0x8>
     454:	00 d0       	rcall	.+0      	; 0x456 <delay_ms+0xa>
     456:	cd b7       	in	r28, 0x3d	; 61
     458:	de b7       	in	r29, 0x3e	; 62
     45a:	9e 83       	std	Y+6, r25	; 0x06
     45c:	8d 83       	std	Y+5, r24	; 0x05
     45e:	1a 82       	std	Y+2, r1	; 0x02
     460:	19 82       	std	Y+1, r1	; 0x01
     462:	13 c0       	rjmp	.+38     	; 0x48a <delay_ms+0x3e>
     464:	1c 82       	std	Y+4, r1	; 0x04
     466:	1b 82       	std	Y+3, r1	; 0x03
     468:	06 c0       	rjmp	.+12     	; 0x476 <delay_ms+0x2a>
     46a:	00 00       	nop
     46c:	8b 81       	ldd	r24, Y+3	; 0x03
     46e:	9c 81       	ldd	r25, Y+4	; 0x04
     470:	01 96       	adiw	r24, 0x01	; 1
     472:	9c 83       	std	Y+4, r25	; 0x04
     474:	8b 83       	std	Y+3, r24	; 0x03
     476:	8b 81       	ldd	r24, Y+3	; 0x03
     478:	9c 81       	ldd	r25, Y+4	; 0x04
     47a:	87 30       	cpi	r24, 0x07	; 7
     47c:	93 40       	sbci	r25, 0x03	; 3
     47e:	ac f3       	brlt	.-22     	; 0x46a <delay_ms+0x1e>
     480:	89 81       	ldd	r24, Y+1	; 0x01
     482:	9a 81       	ldd	r25, Y+2	; 0x02
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	9a 83       	std	Y+2, r25	; 0x02
     488:	89 83       	std	Y+1, r24	; 0x01
     48a:	29 81       	ldd	r18, Y+1	; 0x01
     48c:	3a 81       	ldd	r19, Y+2	; 0x02
     48e:	8d 81       	ldd	r24, Y+5	; 0x05
     490:	9e 81       	ldd	r25, Y+6	; 0x06
     492:	28 17       	cp	r18, r24
     494:	39 07       	cpc	r19, r25
     496:	34 f3       	brlt	.-52     	; 0x464 <delay_ms+0x18>
     498:	00 00       	nop
     49a:	26 96       	adiw	r28, 0x06	; 6
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	f8 94       	cli
     4a0:	de bf       	out	0x3e, r29	; 62
     4a2:	0f be       	out	0x3f, r0	; 63
     4a4:	cd bf       	out	0x3d, r28	; 61
     4a6:	df 91       	pop	r29
     4a8:	cf 91       	pop	r28
     4aa:	08 95       	ret

000004ac <LCD_Custom_Char>:
     4ac:	cf 93       	push	r28
     4ae:	df 93       	push	r29
     4b0:	00 d0       	rcall	.+0      	; 0x4b2 <LCD_Custom_Char+0x6>
     4b2:	00 d0       	rcall	.+0      	; 0x4b4 <LCD_Custom_Char+0x8>
     4b4:	cd b7       	in	r28, 0x3d	; 61
     4b6:	de b7       	in	r29, 0x3e	; 62
     4b8:	8a 83       	std	Y+2, r24	; 0x02
     4ba:	7c 83       	std	Y+4, r23	; 0x04
     4bc:	6b 83       	std	Y+3, r22	; 0x03
     4be:	8a 81       	ldd	r24, Y+2	; 0x02
     4c0:	88 30       	cpi	r24, 0x08	; 8
     4c2:	d0 f4       	brcc	.+52     	; 0x4f8 <LCD_Custom_Char+0x4c>
     4c4:	8a 81       	ldd	r24, Y+2	; 0x02
     4c6:	88 2f       	mov	r24, r24
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	08 96       	adiw	r24, 0x08	; 8
     4cc:	88 0f       	add	r24, r24
     4ce:	88 0f       	add	r24, r24
     4d0:	88 0f       	add	r24, r24
     4d2:	1f df       	rcall	.-450    	; 0x312 <LCD_WriteCommand>
     4d4:	19 82       	std	Y+1, r1	; 0x01
     4d6:	0d c0       	rjmp	.+26     	; 0x4f2 <LCD_Custom_Char+0x46>
     4d8:	89 81       	ldd	r24, Y+1	; 0x01
     4da:	88 2f       	mov	r24, r24
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	2b 81       	ldd	r18, Y+3	; 0x03
     4e0:	3c 81       	ldd	r19, Y+4	; 0x04
     4e2:	82 0f       	add	r24, r18
     4e4:	93 1f       	adc	r25, r19
     4e6:	fc 01       	movw	r30, r24
     4e8:	80 81       	ld	r24, Z
     4ea:	42 df       	rcall	.-380    	; 0x370 <LCD_WriteData>
     4ec:	89 81       	ldd	r24, Y+1	; 0x01
     4ee:	8f 5f       	subi	r24, 0xFF	; 255
     4f0:	89 83       	std	Y+1, r24	; 0x01
     4f2:	89 81       	ldd	r24, Y+1	; 0x01
     4f4:	88 30       	cpi	r24, 0x08	; 8
     4f6:	80 f3       	brcs	.-32     	; 0x4d8 <LCD_Custom_Char+0x2c>
     4f8:	00 00       	nop
     4fa:	0f 90       	pop	r0
     4fc:	0f 90       	pop	r0
     4fe:	0f 90       	pop	r0
     500:	0f 90       	pop	r0
     502:	df 91       	pop	r29
     504:	cf 91       	pop	r28
     506:	08 95       	ret

00000508 <glcd_init>:
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	cd b7       	in	r28, 0x3d	; 61
     50e:	de b7       	in	r29, 0x3e	; 62
     510:	84 e2       	ldi	r24, 0x24	; 36
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	24 e2       	ldi	r18, 0x24	; 36
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	f9 01       	movw	r30, r18
     51a:	20 81       	ld	r18, Z
     51c:	20 61       	ori	r18, 0x10	; 16
     51e:	fc 01       	movw	r30, r24
     520:	20 83       	st	Z, r18
     522:	84 e2       	ldi	r24, 0x24	; 36
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	24 e2       	ldi	r18, 0x24	; 36
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	f9 01       	movw	r30, r18
     52c:	20 81       	ld	r18, Z
     52e:	20 62       	ori	r18, 0x20	; 32
     530:	fc 01       	movw	r30, r24
     532:	20 83       	st	Z, r18
     534:	84 e2       	ldi	r24, 0x24	; 36
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	24 e2       	ldi	r18, 0x24	; 36
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	f9 01       	movw	r30, r18
     53e:	20 81       	ld	r18, Z
     540:	20 61       	ori	r18, 0x10	; 16
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18
     546:	84 e2       	ldi	r24, 0x24	; 36
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	24 e2       	ldi	r18, 0x24	; 36
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	f9 01       	movw	r30, r18
     550:	20 81       	ld	r18, Z
     552:	20 68       	ori	r18, 0x80	; 128
     554:	fc 01       	movw	r30, r24
     556:	20 83       	st	Z, r18
     558:	84 e2       	ldi	r24, 0x24	; 36
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	24 e2       	ldi	r18, 0x24	; 36
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	f9 01       	movw	r30, r18
     562:	20 81       	ld	r18, Z
     564:	20 61       	ori	r18, 0x10	; 16
     566:	fc 01       	movw	r30, r24
     568:	20 83       	st	Z, r18
     56a:	84 e2       	ldi	r24, 0x24	; 36
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	24 e2       	ldi	r18, 0x24	; 36
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	f9 01       	movw	r30, r18
     574:	20 81       	ld	r18, Z
     576:	22 60       	ori	r18, 0x02	; 2
     578:	fc 01       	movw	r30, r24
     57a:	20 83       	st	Z, r18
     57c:	84 e2       	ldi	r24, 0x24	; 36
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	24 e2       	ldi	r18, 0x24	; 36
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	f9 01       	movw	r30, r18
     586:	20 81       	ld	r18, Z
     588:	21 60       	ori	r18, 0x01	; 1
     58a:	fc 01       	movw	r30, r24
     58c:	20 83       	st	Z, r18
     58e:	85 e2       	ldi	r24, 0x25	; 37
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	25 e2       	ldi	r18, 0x25	; 37
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	f9 01       	movw	r30, r18
     598:	20 81       	ld	r18, Z
     59a:	20 61       	ori	r18, 0x10	; 16
     59c:	fc 01       	movw	r30, r24
     59e:	20 83       	st	Z, r18
     5a0:	8c e4       	ldi	r24, 0x4C	; 76
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	20 e5       	ldi	r18, 0x50	; 80
     5a6:	fc 01       	movw	r30, r24
     5a8:	20 83       	st	Z, r18
     5aa:	8d e4       	ldi	r24, 0x4D	; 77
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	fc 01       	movw	r30, r24
     5b0:	10 82       	st	Z, r1
     5b2:	97 d1       	rcall	.+814    	; 0x8e2 <glcd_PCD8544_init>
     5b4:	65 ef       	ldi	r22, 0xF5	; 245
     5b6:	71 e0       	ldi	r23, 0x01	; 1
     5b8:	89 ef       	ldi	r24, 0xF9	; 249
     5ba:	91 e0       	ldi	r25, 0x01	; 1
     5bc:	5c d2       	rcall	.+1208   	; 0xa76 <glcd_select_screen>
     5be:	2c d2       	rcall	.+1112   	; 0xa18 <glcd_clear>
     5c0:	00 00       	nop
     5c2:	df 91       	pop	r29
     5c4:	cf 91       	pop	r28
     5c6:	08 95       	ret

000005c8 <glcd_spi_write>:
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	1f 92       	push	r1
     5ce:	cd b7       	in	r28, 0x3d	; 61
     5d0:	de b7       	in	r29, 0x3e	; 62
     5d2:	89 83       	std	Y+1, r24	; 0x01
     5d4:	85 e2       	ldi	r24, 0x25	; 37
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	25 e2       	ldi	r18, 0x25	; 37
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	f9 01       	movw	r30, r18
     5de:	20 81       	ld	r18, Z
     5e0:	2f 7e       	andi	r18, 0xEF	; 239
     5e2:	fc 01       	movw	r30, r24
     5e4:	20 83       	st	Z, r18
     5e6:	8e e4       	ldi	r24, 0x4E	; 78
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	29 81       	ldd	r18, Y+1	; 0x01
     5ec:	fc 01       	movw	r30, r24
     5ee:	20 83       	st	Z, r18
     5f0:	00 00       	nop
     5f2:	8d e4       	ldi	r24, 0x4D	; 77
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	fc 01       	movw	r30, r24
     5f8:	80 81       	ld	r24, Z
     5fa:	88 23       	and	r24, r24
     5fc:	d4 f7       	brge	.-12     	; 0x5f2 <glcd_spi_write+0x2a>
     5fe:	85 e2       	ldi	r24, 0x25	; 37
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	25 e2       	ldi	r18, 0x25	; 37
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	f9 01       	movw	r30, r18
     608:	20 81       	ld	r18, Z
     60a:	20 61       	ori	r18, 0x10	; 16
     60c:	fc 01       	movw	r30, r24
     60e:	20 83       	st	Z, r18
     610:	00 00       	nop
     612:	0f 90       	pop	r0
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	08 95       	ret

0000061a <glcd_reset>:
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	cd b7       	in	r28, 0x3d	; 61
     620:	de b7       	in	r29, 0x3e	; 62
     622:	2e 97       	sbiw	r28, 0x0e	; 14
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	85 e2       	ldi	r24, 0x25	; 37
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	25 e2       	ldi	r18, 0x25	; 37
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	f9 01       	movw	r30, r18
     638:	20 81       	ld	r18, Z
     63a:	2f 7e       	andi	r18, 0xEF	; 239
     63c:	fc 01       	movw	r30, r24
     63e:	20 83       	st	Z, r18
     640:	85 e2       	ldi	r24, 0x25	; 37
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	25 e2       	ldi	r18, 0x25	; 37
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	f9 01       	movw	r30, r18
     64a:	20 81       	ld	r18, Z
     64c:	2e 7f       	andi	r18, 0xFE	; 254
     64e:	fc 01       	movw	r30, r24
     650:	20 83       	st	Z, r18
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	a0 e8       	ldi	r26, 0x80	; 128
     658:	bf e3       	ldi	r27, 0x3F	; 63
     65a:	89 83       	std	Y+1, r24	; 0x01
     65c:	9a 83       	std	Y+2, r25	; 0x02
     65e:	ab 83       	std	Y+3, r26	; 0x03
     660:	bc 83       	std	Y+4, r27	; 0x04
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
     666:	4a e7       	ldi	r20, 0x7A	; 122
     668:	53 e4       	ldi	r21, 0x43	; 67
     66a:	69 81       	ldd	r22, Y+1	; 0x01
     66c:	7a 81       	ldd	r23, Y+2	; 0x02
     66e:	8b 81       	ldd	r24, Y+3	; 0x03
     670:	9c 81       	ldd	r25, Y+4	; 0x04
     672:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
     676:	dc 01       	movw	r26, r24
     678:	cb 01       	movw	r24, r22
     67a:	8d 83       	std	Y+5, r24	; 0x05
     67c:	9e 83       	std	Y+6, r25	; 0x06
     67e:	af 83       	std	Y+7, r26	; 0x07
     680:	b8 87       	std	Y+8, r27	; 0x08
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	40 e8       	ldi	r20, 0x80	; 128
     688:	5f e3       	ldi	r21, 0x3F	; 63
     68a:	6d 81       	ldd	r22, Y+5	; 0x05
     68c:	7e 81       	ldd	r23, Y+6	; 0x06
     68e:	8f 81       	ldd	r24, Y+7	; 0x07
     690:	98 85       	ldd	r25, Y+8	; 0x08
     692:	0e 94 b6 12 	call	0x256c	; 0x256c <__cmpsf2>
     696:	88 23       	and	r24, r24
     698:	2c f4       	brge	.+10     	; 0x6a4 <glcd_reset+0x8a>
     69a:	81 e0       	ldi	r24, 0x01	; 1
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	9a 87       	std	Y+10, r25	; 0x0a
     6a0:	89 87       	std	Y+9, r24	; 0x09
     6a2:	3f c0       	rjmp	.+126    	; 0x722 <glcd_reset+0x108>
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	3f ef       	ldi	r19, 0xFF	; 255
     6a8:	4f e7       	ldi	r20, 0x7F	; 127
     6aa:	57 e4       	ldi	r21, 0x47	; 71
     6ac:	6d 81       	ldd	r22, Y+5	; 0x05
     6ae:	7e 81       	ldd	r23, Y+6	; 0x06
     6b0:	8f 81       	ldd	r24, Y+7	; 0x07
     6b2:	98 85       	ldd	r25, Y+8	; 0x08
     6b4:	0e 94 33 13 	call	0x2666	; 0x2666 <__gesf2>
     6b8:	18 16       	cp	r1, r24
     6ba:	4c f5       	brge	.+82     	; 0x70e <glcd_reset+0xf4>
     6bc:	20 e0       	ldi	r18, 0x00	; 0
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	40 e2       	ldi	r20, 0x20	; 32
     6c2:	51 e4       	ldi	r21, 0x41	; 65
     6c4:	69 81       	ldd	r22, Y+1	; 0x01
     6c6:	7a 81       	ldd	r23, Y+2	; 0x02
     6c8:	8b 81       	ldd	r24, Y+3	; 0x03
     6ca:	9c 81       	ldd	r25, Y+4	; 0x04
     6cc:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
     6d0:	dc 01       	movw	r26, r24
     6d2:	cb 01       	movw	r24, r22
     6d4:	bc 01       	movw	r22, r24
     6d6:	cd 01       	movw	r24, r26
     6d8:	0e 94 ba 12 	call	0x2574	; 0x2574 <__fixunssfsi>
     6dc:	dc 01       	movw	r26, r24
     6de:	cb 01       	movw	r24, r22
     6e0:	9a 87       	std	Y+10, r25	; 0x0a
     6e2:	89 87       	std	Y+9, r24	; 0x09
     6e4:	0f c0       	rjmp	.+30     	; 0x704 <glcd_reset+0xea>
     6e6:	89 e1       	ldi	r24, 0x19	; 25
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	9c 87       	std	Y+12, r25	; 0x0c
     6ec:	8b 87       	std	Y+11, r24	; 0x0b
     6ee:	8b 85       	ldd	r24, Y+11	; 0x0b
     6f0:	9c 85       	ldd	r25, Y+12	; 0x0c
     6f2:	01 97       	sbiw	r24, 0x01	; 1
     6f4:	f1 f7       	brne	.-4      	; 0x6f2 <glcd_reset+0xd8>
     6f6:	9c 87       	std	Y+12, r25	; 0x0c
     6f8:	8b 87       	std	Y+11, r24	; 0x0b
     6fa:	89 85       	ldd	r24, Y+9	; 0x09
     6fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     6fe:	01 97       	sbiw	r24, 0x01	; 1
     700:	9a 87       	std	Y+10, r25	; 0x0a
     702:	89 87       	std	Y+9, r24	; 0x09
     704:	89 85       	ldd	r24, Y+9	; 0x09
     706:	9a 85       	ldd	r25, Y+10	; 0x0a
     708:	89 2b       	or	r24, r25
     70a:	69 f7       	brne	.-38     	; 0x6e6 <glcd_reset+0xcc>
     70c:	14 c0       	rjmp	.+40     	; 0x736 <glcd_reset+0x11c>
     70e:	6d 81       	ldd	r22, Y+5	; 0x05
     710:	7e 81       	ldd	r23, Y+6	; 0x06
     712:	8f 81       	ldd	r24, Y+7	; 0x07
     714:	98 85       	ldd	r25, Y+8	; 0x08
     716:	0e 94 ba 12 	call	0x2574	; 0x2574 <__fixunssfsi>
     71a:	dc 01       	movw	r26, r24
     71c:	cb 01       	movw	r24, r22
     71e:	9a 87       	std	Y+10, r25	; 0x0a
     720:	89 87       	std	Y+9, r24	; 0x09
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	9a 85       	ldd	r25, Y+10	; 0x0a
     726:	9e 87       	std	Y+14, r25	; 0x0e
     728:	8d 87       	std	Y+13, r24	; 0x0d
     72a:	8d 85       	ldd	r24, Y+13	; 0x0d
     72c:	9e 85       	ldd	r25, Y+14	; 0x0e
     72e:	01 97       	sbiw	r24, 0x01	; 1
     730:	f1 f7       	brne	.-4      	; 0x72e <glcd_reset+0x114>
     732:	9e 87       	std	Y+14, r25	; 0x0e
     734:	8d 87       	std	Y+13, r24	; 0x0d
     736:	85 e2       	ldi	r24, 0x25	; 37
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	25 e2       	ldi	r18, 0x25	; 37
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	f9 01       	movw	r30, r18
     740:	20 81       	ld	r18, Z
     742:	21 60       	ori	r18, 0x01	; 1
     744:	fc 01       	movw	r30, r24
     746:	20 83       	st	Z, r18
     748:	85 e2       	ldi	r24, 0x25	; 37
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	25 e2       	ldi	r18, 0x25	; 37
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	f9 01       	movw	r30, r18
     752:	20 81       	ld	r18, Z
     754:	20 61       	ori	r18, 0x10	; 16
     756:	fc 01       	movw	r30, r24
     758:	20 83       	st	Z, r18
     75a:	00 00       	nop
     75c:	2e 96       	adiw	r28, 0x0e	; 14
     75e:	0f b6       	in	r0, 0x3f	; 63
     760:	f8 94       	cli
     762:	de bf       	out	0x3e, r29	; 62
     764:	0f be       	out	0x3f, r0	; 63
     766:	cd bf       	out	0x3d, r28	; 61
     768:	df 91       	pop	r29
     76a:	cf 91       	pop	r28
     76c:	08 95       	ret

0000076e <glcd_command>:
     76e:	cf 93       	push	r28
     770:	df 93       	push	r29
     772:	1f 92       	push	r1
     774:	cd b7       	in	r28, 0x3d	; 61
     776:	de b7       	in	r29, 0x3e	; 62
     778:	89 83       	std	Y+1, r24	; 0x01
     77a:	85 e2       	ldi	r24, 0x25	; 37
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	25 e2       	ldi	r18, 0x25	; 37
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	f9 01       	movw	r30, r18
     784:	20 81       	ld	r18, Z
     786:	2d 7f       	andi	r18, 0xFD	; 253
     788:	fc 01       	movw	r30, r24
     78a:	20 83       	st	Z, r18
     78c:	89 81       	ldd	r24, Y+1	; 0x01
     78e:	1c df       	rcall	.-456    	; 0x5c8 <glcd_spi_write>
     790:	00 00       	nop
     792:	0f 90       	pop	r0
     794:	df 91       	pop	r29
     796:	cf 91       	pop	r28
     798:	08 95       	ret

0000079a <glcd_data>:
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	1f 92       	push	r1
     7a0:	cd b7       	in	r28, 0x3d	; 61
     7a2:	de b7       	in	r29, 0x3e	; 62
     7a4:	89 83       	std	Y+1, r24	; 0x01
     7a6:	85 e2       	ldi	r24, 0x25	; 37
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	25 e2       	ldi	r18, 0x25	; 37
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	f9 01       	movw	r30, r18
     7b0:	20 81       	ld	r18, Z
     7b2:	22 60       	ori	r18, 0x02	; 2
     7b4:	fc 01       	movw	r30, r24
     7b6:	20 83       	st	Z, r18
     7b8:	89 81       	ldd	r24, Y+1	; 0x01
     7ba:	06 df       	rcall	.-500    	; 0x5c8 <glcd_spi_write>
     7bc:	00 00       	nop
     7be:	0f 90       	pop	r0
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	08 95       	ret

000007c6 <glcd_set_contrast>:
     7c6:	cf 93       	push	r28
     7c8:	df 93       	push	r29
     7ca:	1f 92       	push	r1
     7cc:	cd b7       	in	r28, 0x3d	; 61
     7ce:	de b7       	in	r29, 0x3e	; 62
     7d0:	89 83       	std	Y+1, r24	; 0x01
     7d2:	81 e2       	ldi	r24, 0x21	; 33
     7d4:	cc df       	rcall	.-104    	; 0x76e <glcd_command>
     7d6:	89 81       	ldd	r24, Y+1	; 0x01
     7d8:	80 68       	ori	r24, 0x80	; 128
     7da:	c9 df       	rcall	.-110    	; 0x76e <glcd_command>
     7dc:	80 e2       	ldi	r24, 0x20	; 32
     7de:	c7 df       	rcall	.-114    	; 0x76e <glcd_command>
     7e0:	8c e0       	ldi	r24, 0x0C	; 12
     7e2:	c5 df       	rcall	.-118    	; 0x76e <glcd_command>
     7e4:	00 00       	nop
     7e6:	0f 90       	pop	r0
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	08 95       	ret

000007ee <glcd_write>:
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	00 d0       	rcall	.+0      	; 0x7f4 <glcd_write+0x6>
     7f4:	cd b7       	in	r28, 0x3d	; 61
     7f6:	de b7       	in	r29, 0x3e	; 62
     7f8:	19 82       	std	Y+1, r1	; 0x01
     7fa:	66 c0       	rjmp	.+204    	; 0x8c8 <glcd_write+0xda>
     7fc:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     800:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     804:	fc 01       	movw	r30, r24
     806:	81 81       	ldd	r24, Z+1	; 0x01
     808:	28 2f       	mov	r18, r24
     80a:	30 e0       	ldi	r19, 0x00	; 0
     80c:	89 81       	ldd	r24, Y+1	; 0x01
     80e:	88 2f       	mov	r24, r24
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	88 0f       	add	r24, r24
     816:	99 1f       	adc	r25, r25
     818:	88 0f       	add	r24, r24
     81a:	99 1f       	adc	r25, r25
     81c:	88 0f       	add	r24, r24
     81e:	99 1f       	adc	r25, r25
     820:	28 17       	cp	r18, r24
     822:	39 07       	cpc	r19, r25
     824:	0c f0       	brlt	.+2      	; 0x828 <glcd_write+0x3a>
     826:	4c c0       	rjmp	.+152    	; 0x8c0 <glcd_write+0xd2>
     828:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     82c:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     830:	fc 01       	movw	r30, r24
     832:	83 81       	ldd	r24, Z+3	; 0x03
     834:	28 2f       	mov	r18, r24
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	89 81       	ldd	r24, Y+1	; 0x01
     83a:	88 2f       	mov	r24, r24
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	88 0f       	add	r24, r24
     840:	99 1f       	adc	r25, r25
     842:	88 0f       	add	r24, r24
     844:	99 1f       	adc	r25, r25
     846:	88 0f       	add	r24, r24
     848:	99 1f       	adc	r25, r25
     84a:	28 17       	cp	r18, r24
     84c:	39 07       	cpc	r19, r25
     84e:	0c f4       	brge	.+2      	; 0x852 <glcd_write+0x64>
     850:	40 c0       	rjmp	.+128    	; 0x8d2 <glcd_write+0xe4>
     852:	89 81       	ldd	r24, Y+1	; 0x01
     854:	80 64       	ori	r24, 0x40	; 64
     856:	8b df       	rcall	.-234    	; 0x76e <glcd_command>
     858:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     85c:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     860:	fc 01       	movw	r30, r24
     862:	80 81       	ld	r24, Z
     864:	80 68       	ori	r24, 0x80	; 128
     866:	83 df       	rcall	.-250    	; 0x76e <glcd_command>
     868:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     86c:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     870:	fc 01       	movw	r30, r24
     872:	80 81       	ld	r24, Z
     874:	8a 83       	std	Y+2, r24	; 0x02
     876:	1a c0       	rjmp	.+52     	; 0x8ac <glcd_write+0xbe>
     878:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <glcd_buffer_selected>
     87c:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <glcd_buffer_selected+0x1>
     880:	29 81       	ldd	r18, Y+1	; 0x01
     882:	22 2f       	mov	r18, r18
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	64 e5       	ldi	r22, 0x54	; 84
     888:	62 9f       	mul	r22, r18
     88a:	a0 01       	movw	r20, r0
     88c:	63 9f       	mul	r22, r19
     88e:	50 0d       	add	r21, r0
     890:	11 24       	eor	r1, r1
     892:	2a 81       	ldd	r18, Y+2	; 0x02
     894:	22 2f       	mov	r18, r18
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	24 0f       	add	r18, r20
     89a:	35 1f       	adc	r19, r21
     89c:	82 0f       	add	r24, r18
     89e:	93 1f       	adc	r25, r19
     8a0:	fc 01       	movw	r30, r24
     8a2:	80 81       	ld	r24, Z
     8a4:	7a df       	rcall	.-268    	; 0x79a <glcd_data>
     8a6:	8a 81       	ldd	r24, Y+2	; 0x02
     8a8:	8f 5f       	subi	r24, 0xFF	; 255
     8aa:	8a 83       	std	Y+2, r24	; 0x02
     8ac:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     8b0:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     8b4:	fc 01       	movw	r30, r24
     8b6:	92 81       	ldd	r25, Z+2	; 0x02
     8b8:	8a 81       	ldd	r24, Y+2	; 0x02
     8ba:	98 17       	cp	r25, r24
     8bc:	e8 f6       	brcc	.-70     	; 0x878 <glcd_write+0x8a>
     8be:	01 c0       	rjmp	.+2      	; 0x8c2 <glcd_write+0xd4>
     8c0:	00 00       	nop
     8c2:	89 81       	ldd	r24, Y+1	; 0x01
     8c4:	8f 5f       	subi	r24, 0xFF	; 255
     8c6:	89 83       	std	Y+1, r24	; 0x01
     8c8:	89 81       	ldd	r24, Y+1	; 0x01
     8ca:	86 30       	cpi	r24, 0x06	; 6
     8cc:	08 f4       	brcc	.+2      	; 0x8d0 <glcd_write+0xe2>
     8ce:	96 cf       	rjmp	.-212    	; 0x7fc <glcd_write+0xe>
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <glcd_write+0xe6>
     8d2:	00 00       	nop
     8d4:	7f d0       	rcall	.+254    	; 0x9d4 <glcd_reset_bbox>
     8d6:	00 00       	nop
     8d8:	0f 90       	pop	r0
     8da:	0f 90       	pop	r0
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	08 95       	ret

000008e2 <glcd_PCD8544_init>:
     8e2:	cf 93       	push	r28
     8e4:	df 93       	push	r29
     8e6:	cd b7       	in	r28, 0x3d	; 61
     8e8:	de b7       	in	r29, 0x3e	; 62
     8ea:	97 de       	rcall	.-722    	; 0x61a <glcd_reset>
     8ec:	81 e2       	ldi	r24, 0x21	; 33
     8ee:	3f df       	rcall	.-386    	; 0x76e <glcd_command>
     8f0:	82 e1       	ldi	r24, 0x12	; 18
     8f2:	3d df       	rcall	.-390    	; 0x76e <glcd_command>
     8f4:	80 ed       	ldi	r24, 0xD0	; 208
     8f6:	3b df       	rcall	.-394    	; 0x76e <glcd_command>
     8f8:	80 e2       	ldi	r24, 0x20	; 32
     8fa:	39 df       	rcall	.-398    	; 0x76e <glcd_command>
     8fc:	8c e0       	ldi	r24, 0x0C	; 12
     8fe:	37 df       	rcall	.-402    	; 0x76e <glcd_command>
     900:	00 00       	nop
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	08 95       	ret

00000908 <glcd_update_bbox>:
     908:	cf 93       	push	r28
     90a:	df 93       	push	r29
     90c:	00 d0       	rcall	.+0      	; 0x90e <glcd_update_bbox+0x6>
     90e:	00 d0       	rcall	.+0      	; 0x910 <glcd_update_bbox+0x8>
     910:	cd b7       	in	r28, 0x3d	; 61
     912:	de b7       	in	r29, 0x3e	; 62
     914:	89 83       	std	Y+1, r24	; 0x01
     916:	6a 83       	std	Y+2, r22	; 0x02
     918:	4b 83       	std	Y+3, r20	; 0x03
     91a:	2c 83       	std	Y+4, r18	; 0x04
     91c:	89 81       	ldd	r24, Y+1	; 0x01
     91e:	84 35       	cpi	r24, 0x54	; 84
     920:	10 f0       	brcs	.+4      	; 0x926 <glcd_update_bbox+0x1e>
     922:	83 e5       	ldi	r24, 0x53	; 83
     924:	89 83       	std	Y+1, r24	; 0x01
     926:	8b 81       	ldd	r24, Y+3	; 0x03
     928:	84 35       	cpi	r24, 0x54	; 84
     92a:	10 f0       	brcs	.+4      	; 0x930 <glcd_update_bbox+0x28>
     92c:	83 e5       	ldi	r24, 0x53	; 83
     92e:	8b 83       	std	Y+3, r24	; 0x03
     930:	8a 81       	ldd	r24, Y+2	; 0x02
     932:	80 33       	cpi	r24, 0x30	; 48
     934:	10 f0       	brcs	.+4      	; 0x93a <glcd_update_bbox+0x32>
     936:	8f e2       	ldi	r24, 0x2F	; 47
     938:	8a 83       	std	Y+2, r24	; 0x02
     93a:	8c 81       	ldd	r24, Y+4	; 0x04
     93c:	80 33       	cpi	r24, 0x30	; 48
     93e:	10 f0       	brcs	.+4      	; 0x944 <glcd_update_bbox+0x3c>
     940:	8f e2       	ldi	r24, 0x2F	; 47
     942:	8c 83       	std	Y+4, r24	; 0x04
     944:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     948:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     94c:	fc 01       	movw	r30, r24
     94e:	90 81       	ld	r25, Z
     950:	89 81       	ldd	r24, Y+1	; 0x01
     952:	89 17       	cp	r24, r25
     954:	38 f4       	brcc	.+14     	; 0x964 <glcd_update_bbox+0x5c>
     956:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     95a:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     95e:	29 81       	ldd	r18, Y+1	; 0x01
     960:	fc 01       	movw	r30, r24
     962:	20 83       	st	Z, r18
     964:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     968:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     96c:	fc 01       	movw	r30, r24
     96e:	92 81       	ldd	r25, Z+2	; 0x02
     970:	8b 81       	ldd	r24, Y+3	; 0x03
     972:	98 17       	cp	r25, r24
     974:	38 f4       	brcc	.+14     	; 0x984 <glcd_update_bbox+0x7c>
     976:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     97a:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     97e:	2b 81       	ldd	r18, Y+3	; 0x03
     980:	fc 01       	movw	r30, r24
     982:	22 83       	std	Z+2, r18	; 0x02
     984:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     988:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     98c:	fc 01       	movw	r30, r24
     98e:	91 81       	ldd	r25, Z+1	; 0x01
     990:	8a 81       	ldd	r24, Y+2	; 0x02
     992:	89 17       	cp	r24, r25
     994:	38 f4       	brcc	.+14     	; 0x9a4 <glcd_update_bbox+0x9c>
     996:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     99a:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     99e:	2a 81       	ldd	r18, Y+2	; 0x02
     9a0:	fc 01       	movw	r30, r24
     9a2:	21 83       	std	Z+1, r18	; 0x01
     9a4:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     9a8:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     9ac:	fc 01       	movw	r30, r24
     9ae:	93 81       	ldd	r25, Z+3	; 0x03
     9b0:	8c 81       	ldd	r24, Y+4	; 0x04
     9b2:	98 17       	cp	r25, r24
     9b4:	38 f4       	brcc	.+14     	; 0x9c4 <glcd_update_bbox+0xbc>
     9b6:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     9ba:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     9be:	2c 81       	ldd	r18, Y+4	; 0x04
     9c0:	fc 01       	movw	r30, r24
     9c2:	23 83       	std	Z+3, r18	; 0x03
     9c4:	00 00       	nop
     9c6:	0f 90       	pop	r0
     9c8:	0f 90       	pop	r0
     9ca:	0f 90       	pop	r0
     9cc:	0f 90       	pop	r0
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	08 95       	ret

000009d4 <glcd_reset_bbox>:
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	cd b7       	in	r28, 0x3d	; 61
     9da:	de b7       	in	r29, 0x3e	; 62
     9dc:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     9e0:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     9e4:	23 e5       	ldi	r18, 0x53	; 83
     9e6:	fc 01       	movw	r30, r24
     9e8:	20 83       	st	Z, r18
     9ea:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     9ee:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     9f2:	fc 01       	movw	r30, r24
     9f4:	12 82       	std	Z+2, r1	; 0x02
     9f6:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     9fa:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     9fe:	2f e2       	ldi	r18, 0x2F	; 47
     a00:	fc 01       	movw	r30, r24
     a02:	21 83       	std	Z+1, r18	; 0x01
     a04:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <glcd_bbox_selected>
     a08:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <glcd_bbox_selected+0x1>
     a0c:	fc 01       	movw	r30, r24
     a0e:	13 82       	std	Z+3, r1	; 0x03
     a10:	00 00       	nop
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	08 95       	ret

00000a18 <glcd_clear>:
     a18:	cf 93       	push	r28
     a1a:	df 93       	push	r29
     a1c:	cd b7       	in	r28, 0x3d	; 61
     a1e:	de b7       	in	r29, 0x3e	; 62
     a20:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <glcd_buffer_selected>
     a24:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <glcd_buffer_selected+0x1>
     a28:	48 ef       	ldi	r20, 0xF8	; 248
     a2a:	51 e0       	ldi	r21, 0x01	; 1
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	0e 94 3e 14 	call	0x287c	; 0x287c <memset>
     a34:	2f e2       	ldi	r18, 0x2F	; 47
     a36:	43 e5       	ldi	r20, 0x53	; 83
     a38:	60 e0       	ldi	r22, 0x00	; 0
     a3a:	80 e0       	ldi	r24, 0x00	; 0
     a3c:	65 df       	rcall	.-310    	; 0x908 <glcd_update_bbox>
     a3e:	d7 de       	rcall	.-594    	; 0x7ee <glcd_write>
     a40:	00 00       	nop
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	08 95       	ret

00000a48 <glcd_clear_buffer>:
     a48:	cf 93       	push	r28
     a4a:	df 93       	push	r29
     a4c:	cd b7       	in	r28, 0x3d	; 61
     a4e:	de b7       	in	r29, 0x3e	; 62
     a50:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <glcd_buffer_selected>
     a54:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <glcd_buffer_selected+0x1>
     a58:	48 ef       	ldi	r20, 0xF8	; 248
     a5a:	51 e0       	ldi	r21, 0x01	; 1
     a5c:	60 e0       	ldi	r22, 0x00	; 0
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	0e 94 3e 14 	call	0x287c	; 0x287c <memset>
     a64:	2f e2       	ldi	r18, 0x2F	; 47
     a66:	43 e5       	ldi	r20, 0x53	; 83
     a68:	60 e0       	ldi	r22, 0x00	; 0
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	4d df       	rcall	.-358    	; 0x908 <glcd_update_bbox>
     a6e:	00 00       	nop
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	08 95       	ret

00000a76 <glcd_select_screen>:
     a76:	cf 93       	push	r28
     a78:	df 93       	push	r29
     a7a:	00 d0       	rcall	.+0      	; 0xa7c <glcd_select_screen+0x6>
     a7c:	00 d0       	rcall	.+0      	; 0xa7e <glcd_select_screen+0x8>
     a7e:	cd b7       	in	r28, 0x3d	; 61
     a80:	de b7       	in	r29, 0x3e	; 62
     a82:	9a 83       	std	Y+2, r25	; 0x02
     a84:	89 83       	std	Y+1, r24	; 0x01
     a86:	7c 83       	std	Y+4, r23	; 0x04
     a88:	6b 83       	std	Y+3, r22	; 0x03
     a8a:	89 81       	ldd	r24, Y+1	; 0x01
     a8c:	9a 81       	ldd	r25, Y+2	; 0x02
     a8e:	90 93 f2 03 	sts	0x03F2, r25	; 0x8003f2 <glcd_buffer_selected+0x1>
     a92:	80 93 f1 03 	sts	0x03F1, r24	; 0x8003f1 <glcd_buffer_selected>
     a96:	8b 81       	ldd	r24, Y+3	; 0x03
     a98:	9c 81       	ldd	r25, Y+4	; 0x04
     a9a:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <glcd_bbox_selected+0x1>
     a9e:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <glcd_bbox_selected>
     aa2:	00 00       	nop
     aa4:	0f 90       	pop	r0
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	df 91       	pop	r29
     aae:	cf 91       	pop	r28
     ab0:	08 95       	ret

00000ab2 <glcd_tiny_set_font>:
     ab2:	0f 93       	push	r16
     ab4:	cf 93       	push	r28
     ab6:	df 93       	push	r29
     ab8:	00 d0       	rcall	.+0      	; 0xaba <glcd_tiny_set_font+0x8>
     aba:	00 d0       	rcall	.+0      	; 0xabc <glcd_tiny_set_font+0xa>
     abc:	00 d0       	rcall	.+0      	; 0xabe <glcd_tiny_set_font+0xc>
     abe:	cd b7       	in	r28, 0x3d	; 61
     ac0:	de b7       	in	r29, 0x3e	; 62
     ac2:	9a 83       	std	Y+2, r25	; 0x02
     ac4:	89 83       	std	Y+1, r24	; 0x01
     ac6:	6b 83       	std	Y+3, r22	; 0x03
     ac8:	4c 83       	std	Y+4, r20	; 0x04
     aca:	2d 83       	std	Y+5, r18	; 0x05
     acc:	0e 83       	std	Y+6, r16	; 0x06
     ace:	89 81       	ldd	r24, Y+1	; 0x01
     ad0:	9a 81       	ldd	r25, Y+2	; 0x02
     ad2:	90 93 f8 03 	sts	0x03F8, r25	; 0x8003f8 <font_current+0x1>
     ad6:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <font_current>
     ada:	8b 81       	ldd	r24, Y+3	; 0x03
     adc:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <font_current+0x2>
     ae0:	8c 81       	ldd	r24, Y+4	; 0x04
     ae2:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <font_current+0x3>
     ae6:	8d 81       	ldd	r24, Y+5	; 0x05
     ae8:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <font_current+0x4>
     aec:	8e 81       	ldd	r24, Y+6	; 0x06
     aee:	80 93 fc 03 	sts	0x03FC, r24	; 0x8003fc <font_current+0x5>
     af2:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <font_current+0x7>
     af6:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <font_current+0x6>
     afa:	00 00       	nop
     afc:	26 96       	adiw	r28, 0x06	; 6
     afe:	0f b6       	in	r0, 0x3f	; 63
     b00:	f8 94       	cli
     b02:	de bf       	out	0x3e, r29	; 62
     b04:	0f be       	out	0x3f, r0	; 63
     b06:	cd bf       	out	0x3d, r28	; 61
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	0f 91       	pop	r16
     b0e:	08 95       	ret

00000b10 <glcd_tiny_draw_char>:
     b10:	cf 93       	push	r28
     b12:	df 93       	push	r29
     b14:	cd b7       	in	r28, 0x3d	; 61
     b16:	de b7       	in	r29, 0x3e	; 62
     b18:	27 97       	sbiw	r28, 0x07	; 7
     b1a:	0f b6       	in	r0, 0x3f	; 63
     b1c:	f8 94       	cli
     b1e:	de bf       	out	0x3e, r29	; 62
     b20:	0f be       	out	0x3f, r0	; 63
     b22:	cd bf       	out	0x3d, r28	; 61
     b24:	8d 83       	std	Y+5, r24	; 0x05
     b26:	6e 83       	std	Y+6, r22	; 0x06
     b28:	4f 83       	std	Y+7, r20	; 0x07
     b2a:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <font_current+0x3>
     b2e:	88 30       	cpi	r24, 0x08	; 8
     b30:	08 f0       	brcs	.+2      	; 0xb34 <glcd_tiny_draw_char+0x24>
     b32:	9a c0       	rjmp	.+308    	; 0xc68 <glcd_tiny_draw_char+0x158>
     b34:	90 91 fb 03 	lds	r25, 0x03FB	; 0x8003fb <font_current+0x4>
     b38:	8f 81       	ldd	r24, Y+7	; 0x07
     b3a:	89 17       	cp	r24, r25
     b3c:	28 f0       	brcs	.+10     	; 0xb48 <glcd_tiny_draw_char+0x38>
     b3e:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <font_current+0x5>
     b42:	8f 81       	ldd	r24, Y+7	; 0x07
     b44:	98 17       	cp	r25, r24
     b46:	10 f4       	brcc	.+4      	; 0xb4c <glcd_tiny_draw_char+0x3c>
     b48:	8e e2       	ldi	r24, 0x2E	; 46
     b4a:	8f 83       	std	Y+7, r24	; 0x07
     b4c:	8e 81       	ldd	r24, Y+6	; 0x06
     b4e:	28 2f       	mov	r18, r24
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <font_current+0x3>
     b56:	88 2f       	mov	r24, r24
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	ac 01       	movw	r20, r24
     b5c:	4f 5f       	subi	r20, 0xFF	; 255
     b5e:	5f 4f       	sbci	r21, 0xFF	; 255
     b60:	80 e3       	ldi	r24, 0x30	; 48
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	ba 01       	movw	r22, r20
     b66:	0e 94 c2 13 	call	0x2784	; 0x2784 <__divmodhi4>
     b6a:	cb 01       	movw	r24, r22
     b6c:	28 17       	cp	r18, r24
     b6e:	39 07       	cpc	r19, r25
     b70:	0c f0       	brlt	.+2      	; 0xb74 <glcd_tiny_draw_char+0x64>
     b72:	7c c0       	rjmp	.+248    	; 0xc6c <glcd_tiny_draw_char+0x15c>
     b74:	8d 81       	ldd	r24, Y+5	; 0x05
     b76:	28 2f       	mov	r18, r24
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <font_current+0x2>
     b7e:	88 2f       	mov	r24, r24
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	82 0f       	add	r24, r18
     b84:	93 1f       	adc	r25, r19
     b86:	84 35       	cpi	r24, 0x54	; 84
     b88:	91 05       	cpc	r25, r1
     b8a:	0c f0       	brlt	.+2      	; 0xb8e <glcd_tiny_draw_char+0x7e>
     b8c:	71 c0       	rjmp	.+226    	; 0xc70 <glcd_tiny_draw_char+0x160>
     b8e:	8e 81       	ldd	r24, Y+6	; 0x06
     b90:	88 2f       	mov	r24, r24
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	01 96       	adiw	r24, 0x01	; 1
     b96:	28 2f       	mov	r18, r24
     b98:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <font_current+0x3>
     b9c:	88 2f       	mov	r24, r24
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	01 96       	adiw	r24, 0x01	; 1
     ba2:	28 9f       	mul	r18, r24
     ba4:	20 2d       	mov	r18, r0
     ba6:	11 24       	eor	r1, r1
     ba8:	90 91 f9 03 	lds	r25, 0x03F9	; 0x8003f9 <font_current+0x2>
     bac:	8d 81       	ldd	r24, Y+5	; 0x05
     bae:	39 2f       	mov	r19, r25
     bb0:	38 0f       	add	r19, r24
     bb2:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <font_current+0x3>
     bb6:	88 2f       	mov	r24, r24
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	01 96       	adiw	r24, 0x01	; 1
     bbc:	98 2f       	mov	r25, r24
     bbe:	8e 81       	ldd	r24, Y+6	; 0x06
     bc0:	98 9f       	mul	r25, r24
     bc2:	80 2d       	mov	r24, r0
     bc4:	11 24       	eor	r1, r1
     bc6:	43 2f       	mov	r20, r19
     bc8:	68 2f       	mov	r22, r24
     bca:	8d 81       	ldd	r24, Y+5	; 0x05
     bcc:	9d de       	rcall	.-710    	; 0x908 <glcd_update_bbox>
     bce:	19 82       	std	Y+1, r1	; 0x01
     bd0:	44 c0       	rjmp	.+136    	; 0xc5a <glcd_tiny_draw_char+0x14a>
     bd2:	80 91 f1 03 	lds	r24, 0x03F1	; 0x8003f1 <glcd_buffer_selected>
     bd6:	90 91 f2 03 	lds	r25, 0x03F2	; 0x8003f2 <glcd_buffer_selected+0x1>
     bda:	2d 81       	ldd	r18, Y+5	; 0x05
     bdc:	42 2f       	mov	r20, r18
     bde:	50 e0       	ldi	r21, 0x00	; 0
     be0:	2e 81       	ldd	r18, Y+6	; 0x06
     be2:	62 2f       	mov	r22, r18
     be4:	70 e0       	ldi	r23, 0x00	; 0
     be6:	e4 e5       	ldi	r30, 0x54	; 84
     be8:	e6 9f       	mul	r30, r22
     bea:	90 01       	movw	r18, r0
     bec:	e7 9f       	mul	r30, r23
     bee:	30 0d       	add	r19, r0
     bf0:	11 24       	eor	r1, r1
     bf2:	24 0f       	add	r18, r20
     bf4:	35 1f       	adc	r19, r21
     bf6:	82 0f       	add	r24, r18
     bf8:	93 1f       	adc	r25, r19
     bfa:	40 91 f7 03 	lds	r20, 0x03F7	; 0x8003f7 <font_current>
     bfe:	50 91 f8 03 	lds	r21, 0x03F8	; 0x8003f8 <font_current+0x1>
     c02:	2f 81       	ldd	r18, Y+7	; 0x07
     c04:	62 2f       	mov	r22, r18
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	20 91 fb 03 	lds	r18, 0x03FB	; 0x8003fb <font_current+0x4>
     c0c:	22 2f       	mov	r18, r18
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	62 1b       	sub	r22, r18
     c12:	73 0b       	sbc	r23, r19
     c14:	20 91 f9 03 	lds	r18, 0x03F9	; 0x8003f9 <font_current+0x2>
     c18:	22 2f       	mov	r18, r18
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	62 9f       	mul	r22, r18
     c1e:	f0 01       	movw	r30, r0
     c20:	63 9f       	mul	r22, r19
     c22:	f0 0d       	add	r31, r0
     c24:	72 9f       	mul	r23, r18
     c26:	f0 0d       	add	r31, r0
     c28:	11 24       	eor	r1, r1
     c2a:	bf 01       	movw	r22, r30
     c2c:	29 81       	ldd	r18, Y+1	; 0x01
     c2e:	22 2f       	mov	r18, r18
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	26 0f       	add	r18, r22
     c34:	37 1f       	adc	r19, r23
     c36:	24 0f       	add	r18, r20
     c38:	35 1f       	adc	r19, r21
     c3a:	3b 83       	std	Y+3, r19	; 0x03
     c3c:	2a 83       	std	Y+2, r18	; 0x02
     c3e:	2a 81       	ldd	r18, Y+2	; 0x02
     c40:	3b 81       	ldd	r19, Y+3	; 0x03
     c42:	f9 01       	movw	r30, r18
     c44:	24 91       	lpm	r18, Z
     c46:	2c 83       	std	Y+4, r18	; 0x04
     c48:	2c 81       	ldd	r18, Y+4	; 0x04
     c4a:	fc 01       	movw	r30, r24
     c4c:	20 83       	st	Z, r18
     c4e:	8d 81       	ldd	r24, Y+5	; 0x05
     c50:	8f 5f       	subi	r24, 0xFF	; 255
     c52:	8d 83       	std	Y+5, r24	; 0x05
     c54:	89 81       	ldd	r24, Y+1	; 0x01
     c56:	8f 5f       	subi	r24, 0xFF	; 255
     c58:	89 83       	std	Y+1, r24	; 0x01
     c5a:	90 91 f9 03 	lds	r25, 0x03F9	; 0x8003f9 <font_current+0x2>
     c5e:	89 81       	ldd	r24, Y+1	; 0x01
     c60:	89 17       	cp	r24, r25
     c62:	08 f4       	brcc	.+2      	; 0xc66 <glcd_tiny_draw_char+0x156>
     c64:	b6 cf       	rjmp	.-148    	; 0xbd2 <glcd_tiny_draw_char+0xc2>
     c66:	05 c0       	rjmp	.+10     	; 0xc72 <glcd_tiny_draw_char+0x162>
     c68:	00 00       	nop
     c6a:	03 c0       	rjmp	.+6      	; 0xc72 <glcd_tiny_draw_char+0x162>
     c6c:	00 00       	nop
     c6e:	01 c0       	rjmp	.+2      	; 0xc72 <glcd_tiny_draw_char+0x162>
     c70:	00 00       	nop
     c72:	27 96       	adiw	r28, 0x07	; 7
     c74:	0f b6       	in	r0, 0x3f	; 63
     c76:	f8 94       	cli
     c78:	de bf       	out	0x3e, r29	; 62
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	cd bf       	out	0x3d, r28	; 61
     c7e:	df 91       	pop	r29
     c80:	cf 91       	pop	r28
     c82:	08 95       	ret

00000c84 <glcd_tiny_draw_string>:
     c84:	cf 93       	push	r28
     c86:	df 93       	push	r29
     c88:	00 d0       	rcall	.+0      	; 0xc8a <glcd_tiny_draw_string+0x6>
     c8a:	00 d0       	rcall	.+0      	; 0xc8c <glcd_tiny_draw_string+0x8>
     c8c:	cd b7       	in	r28, 0x3d	; 61
     c8e:	de b7       	in	r29, 0x3e	; 62
     c90:	89 83       	std	Y+1, r24	; 0x01
     c92:	6a 83       	std	Y+2, r22	; 0x02
     c94:	5c 83       	std	Y+4, r21	; 0x04
     c96:	4b 83       	std	Y+3, r20	; 0x03
     c98:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <font_current+0x3>
     c9c:	88 30       	cpi	r24, 0x08	; 8
     c9e:	08 f0       	brcs	.+2      	; 0xca2 <glcd_tiny_draw_string+0x1e>
     ca0:	3f c0       	rjmp	.+126    	; 0xd20 <glcd_tiny_draw_string+0x9c>
     ca2:	37 c0       	rjmp	.+110    	; 0xd12 <glcd_tiny_draw_string+0x8e>
     ca4:	8b 81       	ldd	r24, Y+3	; 0x03
     ca6:	9c 81       	ldd	r25, Y+4	; 0x04
     ca8:	9c 01       	movw	r18, r24
     caa:	2f 5f       	subi	r18, 0xFF	; 255
     cac:	3f 4f       	sbci	r19, 0xFF	; 255
     cae:	3c 83       	std	Y+4, r19	; 0x04
     cb0:	2b 83       	std	Y+3, r18	; 0x03
     cb2:	fc 01       	movw	r30, r24
     cb4:	80 81       	ld	r24, Z
     cb6:	48 2f       	mov	r20, r24
     cb8:	6a 81       	ldd	r22, Y+2	; 0x02
     cba:	89 81       	ldd	r24, Y+1	; 0x01
     cbc:	29 df       	rcall	.-430    	; 0xb10 <glcd_tiny_draw_char>
     cbe:	90 91 f9 03 	lds	r25, 0x03F9	; 0x8003f9 <font_current+0x2>
     cc2:	89 81       	ldd	r24, Y+1	; 0x01
     cc4:	89 0f       	add	r24, r25
     cc6:	8f 5f       	subi	r24, 0xFF	; 255
     cc8:	89 83       	std	Y+1, r24	; 0x01
     cca:	89 81       	ldd	r24, Y+1	; 0x01
     ccc:	28 2f       	mov	r18, r24
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	80 91 f9 03 	lds	r24, 0x03F9	; 0x8003f9 <font_current+0x2>
     cd4:	88 2f       	mov	r24, r24
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	82 0f       	add	r24, r18
     cda:	93 1f       	adc	r25, r19
     cdc:	01 96       	adiw	r24, 0x01	; 1
     cde:	85 35       	cpi	r24, 0x55	; 85
     ce0:	91 05       	cpc	r25, r1
     ce2:	24 f0       	brlt	.+8      	; 0xcec <glcd_tiny_draw_string+0x68>
     ce4:	19 82       	std	Y+1, r1	; 0x01
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	8f 5f       	subi	r24, 0xFF	; 255
     cea:	8a 83       	std	Y+2, r24	; 0x02
     cec:	8a 81       	ldd	r24, Y+2	; 0x02
     cee:	28 2f       	mov	r18, r24
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <font_current+0x3>
     cf6:	88 2f       	mov	r24, r24
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	ac 01       	movw	r20, r24
     cfc:	4f 5f       	subi	r20, 0xFF	; 255
     cfe:	5f 4f       	sbci	r21, 0xFF	; 255
     d00:	80 e3       	ldi	r24, 0x30	; 48
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	ba 01       	movw	r22, r20
     d06:	0e 94 c2 13 	call	0x2784	; 0x2784 <__divmodhi4>
     d0a:	cb 01       	movw	r24, r22
     d0c:	28 17       	cp	r18, r24
     d0e:	39 07       	cpc	r19, r25
     d10:	4c f4       	brge	.+18     	; 0xd24 <glcd_tiny_draw_string+0xa0>
     d12:	8b 81       	ldd	r24, Y+3	; 0x03
     d14:	9c 81       	ldd	r25, Y+4	; 0x04
     d16:	fc 01       	movw	r30, r24
     d18:	80 81       	ld	r24, Z
     d1a:	88 23       	and	r24, r24
     d1c:	19 f6       	brne	.-122    	; 0xca4 <glcd_tiny_draw_string+0x20>
     d1e:	03 c0       	rjmp	.+6      	; 0xd26 <glcd_tiny_draw_string+0xa2>
     d20:	00 00       	nop
     d22:	01 c0       	rjmp	.+2      	; 0xd26 <glcd_tiny_draw_string+0xa2>
     d24:	00 00       	nop
     d26:	0f 90       	pop	r0
     d28:	0f 90       	pop	r0
     d2a:	0f 90       	pop	r0
     d2c:	0f 90       	pop	r0
     d2e:	df 91       	pop	r29
     d30:	cf 91       	pop	r28
     d32:	08 95       	ret

00000d34 <glcd_set_pixel>:
     d34:	cf 93       	push	r28
     d36:	df 93       	push	r29
     d38:	00 d0       	rcall	.+0      	; 0xd3a <glcd_set_pixel+0x6>
     d3a:	1f 92       	push	r1
     d3c:	cd b7       	in	r28, 0x3d	; 61
     d3e:	de b7       	in	r29, 0x3e	; 62
     d40:	89 83       	std	Y+1, r24	; 0x01
     d42:	6a 83       	std	Y+2, r22	; 0x02
     d44:	4b 83       	std	Y+3, r20	; 0x03
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	84 35       	cpi	r24, 0x54	; 84
     d4a:	08 f0       	brcs	.+2      	; 0xd4e <glcd_set_pixel+0x1a>
     d4c:	7b c0       	rjmp	.+246    	; 0xe44 <glcd_set_pixel+0x110>
     d4e:	8a 81       	ldd	r24, Y+2	; 0x02
     d50:	80 33       	cpi	r24, 0x30	; 48
     d52:	08 f0       	brcs	.+2      	; 0xd56 <glcd_set_pixel+0x22>
     d54:	77 c0       	rjmp	.+238    	; 0xe44 <glcd_set_pixel+0x110>
     d56:	8b 81       	ldd	r24, Y+3	; 0x03
     d58:	88 23       	and	r24, r24
     d5a:	b9 f1       	breq	.+110    	; 0xdca <glcd_set_pixel+0x96>
     d5c:	89 81       	ldd	r24, Y+1	; 0x01
     d5e:	28 2f       	mov	r18, r24
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	8a 81       	ldd	r24, Y+2	; 0x02
     d64:	68 2f       	mov	r22, r24
     d66:	66 95       	lsr	r22
     d68:	66 95       	lsr	r22
     d6a:	66 95       	lsr	r22
     d6c:	46 2f       	mov	r20, r22
     d6e:	50 e0       	ldi	r21, 0x00	; 0
     d70:	74 e5       	ldi	r23, 0x54	; 84
     d72:	74 9f       	mul	r23, r20
     d74:	c0 01       	movw	r24, r0
     d76:	75 9f       	mul	r23, r21
     d78:	90 0d       	add	r25, r0
     d7a:	11 24       	eor	r1, r1
     d7c:	82 0f       	add	r24, r18
     d7e:	93 1f       	adc	r25, r19
     d80:	29 81       	ldd	r18, Y+1	; 0x01
     d82:	42 2f       	mov	r20, r18
     d84:	50 e0       	ldi	r21, 0x00	; 0
     d86:	66 2f       	mov	r22, r22
     d88:	70 e0       	ldi	r23, 0x00	; 0
     d8a:	e4 e5       	ldi	r30, 0x54	; 84
     d8c:	e6 9f       	mul	r30, r22
     d8e:	90 01       	movw	r18, r0
     d90:	e7 9f       	mul	r30, r23
     d92:	30 0d       	add	r19, r0
     d94:	11 24       	eor	r1, r1
     d96:	24 0f       	add	r18, r20
     d98:	35 1f       	adc	r19, r21
     d9a:	27 50       	subi	r18, 0x07	; 7
     d9c:	3e 4f       	sbci	r19, 0xFE	; 254
     d9e:	f9 01       	movw	r30, r18
     da0:	20 81       	ld	r18, Z
     da2:	62 2f       	mov	r22, r18
     da4:	2a 81       	ldd	r18, Y+2	; 0x02
     da6:	22 2f       	mov	r18, r18
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	a9 01       	movw	r20, r18
     dac:	47 70       	andi	r20, 0x07	; 7
     dae:	55 27       	eor	r21, r21
     db0:	21 e0       	ldi	r18, 0x01	; 1
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	02 c0       	rjmp	.+4      	; 0xdba <glcd_set_pixel+0x86>
     db6:	22 0f       	add	r18, r18
     db8:	33 1f       	adc	r19, r19
     dba:	4a 95       	dec	r20
     dbc:	e2 f7       	brpl	.-8      	; 0xdb6 <glcd_set_pixel+0x82>
     dbe:	26 2b       	or	r18, r22
     dc0:	87 50       	subi	r24, 0x07	; 7
     dc2:	9e 4f       	sbci	r25, 0xFE	; 254
     dc4:	fc 01       	movw	r30, r24
     dc6:	20 83       	st	Z, r18
     dc8:	37 c0       	rjmp	.+110    	; 0xe38 <glcd_set_pixel+0x104>
     dca:	89 81       	ldd	r24, Y+1	; 0x01
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	8a 81       	ldd	r24, Y+2	; 0x02
     dd2:	68 2f       	mov	r22, r24
     dd4:	66 95       	lsr	r22
     dd6:	66 95       	lsr	r22
     dd8:	66 95       	lsr	r22
     dda:	46 2f       	mov	r20, r22
     ddc:	50 e0       	ldi	r21, 0x00	; 0
     dde:	74 e5       	ldi	r23, 0x54	; 84
     de0:	74 9f       	mul	r23, r20
     de2:	c0 01       	movw	r24, r0
     de4:	75 9f       	mul	r23, r21
     de6:	90 0d       	add	r25, r0
     de8:	11 24       	eor	r1, r1
     dea:	82 0f       	add	r24, r18
     dec:	93 1f       	adc	r25, r19
     dee:	29 81       	ldd	r18, Y+1	; 0x01
     df0:	42 2f       	mov	r20, r18
     df2:	50 e0       	ldi	r21, 0x00	; 0
     df4:	66 2f       	mov	r22, r22
     df6:	70 e0       	ldi	r23, 0x00	; 0
     df8:	e4 e5       	ldi	r30, 0x54	; 84
     dfa:	e6 9f       	mul	r30, r22
     dfc:	90 01       	movw	r18, r0
     dfe:	e7 9f       	mul	r30, r23
     e00:	30 0d       	add	r19, r0
     e02:	11 24       	eor	r1, r1
     e04:	24 0f       	add	r18, r20
     e06:	35 1f       	adc	r19, r21
     e08:	27 50       	subi	r18, 0x07	; 7
     e0a:	3e 4f       	sbci	r19, 0xFE	; 254
     e0c:	f9 01       	movw	r30, r18
     e0e:	20 81       	ld	r18, Z
     e10:	62 2f       	mov	r22, r18
     e12:	2a 81       	ldd	r18, Y+2	; 0x02
     e14:	22 2f       	mov	r18, r18
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	a9 01       	movw	r20, r18
     e1a:	47 70       	andi	r20, 0x07	; 7
     e1c:	55 27       	eor	r21, r21
     e1e:	21 e0       	ldi	r18, 0x01	; 1
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <glcd_set_pixel+0xf4>
     e24:	22 0f       	add	r18, r18
     e26:	33 1f       	adc	r19, r19
     e28:	4a 95       	dec	r20
     e2a:	e2 f7       	brpl	.-8      	; 0xe24 <glcd_set_pixel+0xf0>
     e2c:	20 95       	com	r18
     e2e:	26 23       	and	r18, r22
     e30:	87 50       	subi	r24, 0x07	; 7
     e32:	9e 4f       	sbci	r25, 0xFE	; 254
     e34:	fc 01       	movw	r30, r24
     e36:	20 83       	st	Z, r18
     e38:	2a 81       	ldd	r18, Y+2	; 0x02
     e3a:	49 81       	ldd	r20, Y+1	; 0x01
     e3c:	6a 81       	ldd	r22, Y+2	; 0x02
     e3e:	89 81       	ldd	r24, Y+1	; 0x01
     e40:	63 dd       	rcall	.-1338   	; 0x908 <glcd_update_bbox>
     e42:	01 c0       	rjmp	.+2      	; 0xe46 <glcd_set_pixel+0x112>
     e44:	00 00       	nop
     e46:	0f 90       	pop	r0
     e48:	0f 90       	pop	r0
     e4a:	0f 90       	pop	r0
     e4c:	df 91       	pop	r29
     e4e:	cf 91       	pop	r28
     e50:	08 95       	ret

00000e52 <glcd_draw_line>:
     e52:	0f 93       	push	r16
     e54:	cf 93       	push	r28
     e56:	df 93       	push	r29
     e58:	cd b7       	in	r28, 0x3d	; 61
     e5a:	de b7       	in	r29, 0x3e	; 62
     e5c:	2e 97       	sbiw	r28, 0x0e	; 14
     e5e:	0f b6       	in	r0, 0x3f	; 63
     e60:	f8 94       	cli
     e62:	de bf       	out	0x3e, r29	; 62
     e64:	0f be       	out	0x3f, r0	; 63
     e66:	cd bf       	out	0x3d, r28	; 61
     e68:	8a 87       	std	Y+10, r24	; 0x0a
     e6a:	6b 87       	std	Y+11, r22	; 0x0b
     e6c:	4c 87       	std	Y+12, r20	; 0x0c
     e6e:	2d 87       	std	Y+13, r18	; 0x0d
     e70:	0e 87       	std	Y+14, r16	; 0x0e
     e72:	8d 85       	ldd	r24, Y+13	; 0x0d
     e74:	28 2f       	mov	r18, r24
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	8b 85       	ldd	r24, Y+11	; 0x0b
     e7a:	88 2f       	mov	r24, r24
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	a9 01       	movw	r20, r18
     e80:	48 1b       	sub	r20, r24
     e82:	59 0b       	sbc	r21, r25
     e84:	ca 01       	movw	r24, r20
     e86:	99 23       	and	r25, r25
     e88:	1c f4       	brge	.+6      	; 0xe90 <glcd_draw_line+0x3e>
     e8a:	91 95       	neg	r25
     e8c:	81 95       	neg	r24
     e8e:	91 09       	sbc	r25, r1
     e90:	ac 01       	movw	r20, r24
     e92:	8c 85       	ldd	r24, Y+12	; 0x0c
     e94:	28 2f       	mov	r18, r24
     e96:	30 e0       	ldi	r19, 0x00	; 0
     e98:	8a 85       	ldd	r24, Y+10	; 0x0a
     e9a:	88 2f       	mov	r24, r24
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	b9 01       	movw	r22, r18
     ea0:	68 1b       	sub	r22, r24
     ea2:	79 0b       	sbc	r23, r25
     ea4:	cb 01       	movw	r24, r22
     ea6:	99 23       	and	r25, r25
     ea8:	1c f4       	brge	.+6      	; 0xeb0 <glcd_draw_line+0x5e>
     eaa:	91 95       	neg	r25
     eac:	81 95       	neg	r24
     eae:	91 09       	sbc	r25, r1
     eb0:	21 e0       	ldi	r18, 0x01	; 1
     eb2:	84 17       	cp	r24, r20
     eb4:	95 07       	cpc	r25, r21
     eb6:	0c f0       	brlt	.+2      	; 0xeba <glcd_draw_line+0x68>
     eb8:	20 e0       	ldi	r18, 0x00	; 0
     eba:	2b 83       	std	Y+3, r18	; 0x03
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	88 23       	and	r24, r24
     ec0:	61 f0       	breq	.+24     	; 0xeda <glcd_draw_line+0x88>
     ec2:	8a 85       	ldd	r24, Y+10	; 0x0a
     ec4:	8c 83       	std	Y+4, r24	; 0x04
     ec6:	8b 85       	ldd	r24, Y+11	; 0x0b
     ec8:	8a 87       	std	Y+10, r24	; 0x0a
     eca:	8c 81       	ldd	r24, Y+4	; 0x04
     ecc:	8b 87       	std	Y+11, r24	; 0x0b
     ece:	8c 85       	ldd	r24, Y+12	; 0x0c
     ed0:	8d 83       	std	Y+5, r24	; 0x05
     ed2:	8d 85       	ldd	r24, Y+13	; 0x0d
     ed4:	8c 87       	std	Y+12, r24	; 0x0c
     ed6:	8d 81       	ldd	r24, Y+5	; 0x05
     ed8:	8d 87       	std	Y+13, r24	; 0x0d
     eda:	9a 85       	ldd	r25, Y+10	; 0x0a
     edc:	8c 85       	ldd	r24, Y+12	; 0x0c
     ede:	89 17       	cp	r24, r25
     ee0:	60 f4       	brcc	.+24     	; 0xefa <glcd_draw_line+0xa8>
     ee2:	8a 85       	ldd	r24, Y+10	; 0x0a
     ee4:	8e 83       	std	Y+6, r24	; 0x06
     ee6:	8c 85       	ldd	r24, Y+12	; 0x0c
     ee8:	8a 87       	std	Y+10, r24	; 0x0a
     eea:	8e 81       	ldd	r24, Y+6	; 0x06
     eec:	8c 87       	std	Y+12, r24	; 0x0c
     eee:	8b 85       	ldd	r24, Y+11	; 0x0b
     ef0:	8f 83       	std	Y+7, r24	; 0x07
     ef2:	8d 85       	ldd	r24, Y+13	; 0x0d
     ef4:	8b 87       	std	Y+11, r24	; 0x0b
     ef6:	8f 81       	ldd	r24, Y+7	; 0x07
     ef8:	8d 87       	std	Y+13, r24	; 0x0d
     efa:	2d 85       	ldd	r18, Y+13	; 0x0d
     efc:	4c 85       	ldd	r20, Y+12	; 0x0c
     efe:	6b 85       	ldd	r22, Y+11	; 0x0b
     f00:	8a 85       	ldd	r24, Y+10	; 0x0a
     f02:	02 dd       	rcall	.-1532   	; 0x908 <glcd_update_bbox>
     f04:	9c 85       	ldd	r25, Y+12	; 0x0c
     f06:	8a 85       	ldd	r24, Y+10	; 0x0a
     f08:	79 2f       	mov	r23, r25
     f0a:	78 1b       	sub	r23, r24
     f0c:	87 2f       	mov	r24, r23
     f0e:	88 87       	std	Y+8, r24	; 0x08
     f10:	8d 85       	ldd	r24, Y+13	; 0x0d
     f12:	28 2f       	mov	r18, r24
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	8b 85       	ldd	r24, Y+11	; 0x0b
     f18:	88 2f       	mov	r24, r24
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	a9 01       	movw	r20, r18
     f1e:	48 1b       	sub	r20, r24
     f20:	59 0b       	sbc	r21, r25
     f22:	ca 01       	movw	r24, r20
     f24:	99 23       	and	r25, r25
     f26:	1c f4       	brge	.+6      	; 0xf2e <glcd_draw_line+0xdc>
     f28:	91 95       	neg	r25
     f2a:	81 95       	neg	r24
     f2c:	91 09       	sbc	r25, r1
     f2e:	89 87       	std	Y+9, r24	; 0x09
     f30:	88 85       	ldd	r24, Y+8	; 0x08
     f32:	86 95       	lsr	r24
     f34:	89 83       	std	Y+1, r24	; 0x01
     f36:	9b 85       	ldd	r25, Y+11	; 0x0b
     f38:	8d 85       	ldd	r24, Y+13	; 0x0d
     f3a:	98 17       	cp	r25, r24
     f3c:	18 f4       	brcc	.+6      	; 0xf44 <glcd_draw_line+0xf2>
     f3e:	81 e0       	ldi	r24, 0x01	; 1
     f40:	8a 83       	std	Y+2, r24	; 0x02
     f42:	23 c0       	rjmp	.+70     	; 0xf8a <glcd_draw_line+0x138>
     f44:	8f ef       	ldi	r24, 0xFF	; 255
     f46:	8a 83       	std	Y+2, r24	; 0x02
     f48:	20 c0       	rjmp	.+64     	; 0xf8a <glcd_draw_line+0x138>
     f4a:	8b 81       	ldd	r24, Y+3	; 0x03
     f4c:	88 23       	and	r24, r24
     f4e:	29 f0       	breq	.+10     	; 0xf5a <glcd_draw_line+0x108>
     f50:	4e 85       	ldd	r20, Y+14	; 0x0e
     f52:	6a 85       	ldd	r22, Y+10	; 0x0a
     f54:	8b 85       	ldd	r24, Y+11	; 0x0b
     f56:	ee de       	rcall	.-548    	; 0xd34 <glcd_set_pixel>
     f58:	04 c0       	rjmp	.+8      	; 0xf62 <glcd_draw_line+0x110>
     f5a:	4e 85       	ldd	r20, Y+14	; 0x0e
     f5c:	6b 85       	ldd	r22, Y+11	; 0x0b
     f5e:	8a 85       	ldd	r24, Y+10	; 0x0a
     f60:	e9 de       	rcall	.-558    	; 0xd34 <glcd_set_pixel>
     f62:	99 81       	ldd	r25, Y+1	; 0x01
     f64:	89 85       	ldd	r24, Y+9	; 0x09
     f66:	59 2f       	mov	r21, r25
     f68:	58 1b       	sub	r21, r24
     f6a:	85 2f       	mov	r24, r21
     f6c:	89 83       	std	Y+1, r24	; 0x01
     f6e:	89 81       	ldd	r24, Y+1	; 0x01
     f70:	88 23       	and	r24, r24
     f72:	44 f4       	brge	.+16     	; 0xf84 <glcd_draw_line+0x132>
     f74:	8a 81       	ldd	r24, Y+2	; 0x02
     f76:	9b 85       	ldd	r25, Y+11	; 0x0b
     f78:	89 0f       	add	r24, r25
     f7a:	8b 87       	std	Y+11, r24	; 0x0b
     f7c:	99 81       	ldd	r25, Y+1	; 0x01
     f7e:	88 85       	ldd	r24, Y+8	; 0x08
     f80:	89 0f       	add	r24, r25
     f82:	89 83       	std	Y+1, r24	; 0x01
     f84:	8a 85       	ldd	r24, Y+10	; 0x0a
     f86:	8f 5f       	subi	r24, 0xFF	; 255
     f88:	8a 87       	std	Y+10, r24	; 0x0a
     f8a:	9a 85       	ldd	r25, Y+10	; 0x0a
     f8c:	8c 85       	ldd	r24, Y+12	; 0x0c
     f8e:	89 17       	cp	r24, r25
     f90:	e0 f6       	brcc	.-72     	; 0xf4a <glcd_draw_line+0xf8>
     f92:	00 00       	nop
     f94:	2e 96       	adiw	r28, 0x0e	; 14
     f96:	0f b6       	in	r0, 0x3f	; 63
     f98:	f8 94       	cli
     f9a:	de bf       	out	0x3e, r29	; 62
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	cd bf       	out	0x3d, r28	; 61
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	0f 91       	pop	r16
     fa6:	08 95       	ret

00000fa8 <TimerSet>:
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	00 d0       	rcall	.+0      	; 0xfae <TimerSet+0x6>
     fae:	00 d0       	rcall	.+0      	; 0xfb0 <TimerSet+0x8>
     fb0:	cd b7       	in	r28, 0x3d	; 61
     fb2:	de b7       	in	r29, 0x3e	; 62
     fb4:	69 83       	std	Y+1, r22	; 0x01
     fb6:	7a 83       	std	Y+2, r23	; 0x02
     fb8:	8b 83       	std	Y+3, r24	; 0x03
     fba:	9c 83       	std	Y+4, r25	; 0x04
     fbc:	89 81       	ldd	r24, Y+1	; 0x01
     fbe:	9a 81       	ldd	r25, Y+2	; 0x02
     fc0:	ab 81       	ldd	r26, Y+3	; 0x03
     fc2:	bc 81       	ldd	r27, Y+4	; 0x04
     fc4:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <_avr_timer_M>
     fc8:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <_avr_timer_M+0x1>
     fcc:	a0 93 2e 01 	sts	0x012E, r26	; 0x80012e <_avr_timer_M+0x2>
     fd0:	b0 93 2f 01 	sts	0x012F, r27	; 0x80012f <_avr_timer_M+0x3>
     fd4:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_avr_timer_M>
     fd8:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <_avr_timer_M+0x1>
     fdc:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <_avr_timer_M+0x2>
     fe0:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <_avr_timer_M+0x3>
     fe4:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <_avr_timer_cntcurr>
     fe8:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <_avr_timer_cntcurr+0x1>
     fec:	a0 93 ed 01 	sts	0x01ED, r26	; 0x8001ed <_avr_timer_cntcurr+0x2>
     ff0:	b0 93 ee 01 	sts	0x01EE, r27	; 0x8001ee <_avr_timer_cntcurr+0x3>
     ff4:	00 00       	nop
     ff6:	0f 90       	pop	r0
     ff8:	0f 90       	pop	r0
     ffa:	0f 90       	pop	r0
     ffc:	0f 90       	pop	r0
     ffe:	df 91       	pop	r29
    1000:	cf 91       	pop	r28
    1002:	08 95       	ret

00001004 <TimerOn>:
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	cd b7       	in	r28, 0x3d	; 61
    100a:	de b7       	in	r29, 0x3e	; 62
    100c:	81 e8       	ldi	r24, 0x81	; 129
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	2b e0       	ldi	r18, 0x0B	; 11
    1012:	fc 01       	movw	r30, r24
    1014:	20 83       	st	Z, r18
    1016:	88 e8       	ldi	r24, 0x88	; 136
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	2d e7       	ldi	r18, 0x7D	; 125
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	fc 01       	movw	r30, r24
    1020:	31 83       	std	Z+1, r19	; 0x01
    1022:	20 83       	st	Z, r18
    1024:	8f e6       	ldi	r24, 0x6F	; 111
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	22 e0       	ldi	r18, 0x02	; 2
    102a:	fc 01       	movw	r30, r24
    102c:	20 83       	st	Z, r18
    102e:	84 e8       	ldi	r24, 0x84	; 132
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	fc 01       	movw	r30, r24
    1034:	11 82       	std	Z+1, r1	; 0x01
    1036:	10 82       	st	Z, r1
    1038:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_avr_timer_M>
    103c:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <_avr_timer_M+0x1>
    1040:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <_avr_timer_M+0x2>
    1044:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <_avr_timer_M+0x3>
    1048:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <_avr_timer_cntcurr>
    104c:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <_avr_timer_cntcurr+0x1>
    1050:	a0 93 ed 01 	sts	0x01ED, r26	; 0x8001ed <_avr_timer_cntcurr+0x2>
    1054:	b0 93 ee 01 	sts	0x01EE, r27	; 0x8001ee <_avr_timer_cntcurr+0x3>
    1058:	8f e5       	ldi	r24, 0x5F	; 95
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	2f e5       	ldi	r18, 0x5F	; 95
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	f9 01       	movw	r30, r18
    1062:	20 81       	ld	r18, Z
    1064:	20 68       	ori	r18, 0x80	; 128
    1066:	fc 01       	movw	r30, r24
    1068:	20 83       	st	Z, r18
    106a:	00 00       	nop
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	08 95       	ret

00001072 <TimerISR>:
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	cd b7       	in	r28, 0x3d	; 61
    1078:	de b7       	in	r29, 0x3e	; 62
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <__data_end>
    1080:	00 00       	nop
    1082:	df 91       	pop	r29
    1084:	cf 91       	pop	r28
    1086:	08 95       	ret

00001088 <__vector_13>:
    1088:	1f 92       	push	r1
    108a:	0f 92       	push	r0
    108c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1090:	0f 92       	push	r0
    1092:	11 24       	eor	r1, r1
    1094:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    1098:	0f 92       	push	r0
    109a:	2f 93       	push	r18
    109c:	3f 93       	push	r19
    109e:	4f 93       	push	r20
    10a0:	5f 93       	push	r21
    10a2:	6f 93       	push	r22
    10a4:	7f 93       	push	r23
    10a6:	8f 93       	push	r24
    10a8:	9f 93       	push	r25
    10aa:	af 93       	push	r26
    10ac:	bf 93       	push	r27
    10ae:	ef 93       	push	r30
    10b0:	ff 93       	push	r31
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	cd b7       	in	r28, 0x3d	; 61
    10b8:	de b7       	in	r29, 0x3e	; 62
    10ba:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <_avr_timer_cntcurr>
    10be:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <_avr_timer_cntcurr+0x1>
    10c2:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <_avr_timer_cntcurr+0x2>
    10c6:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <_avr_timer_cntcurr+0x3>
    10ca:	01 97       	sbiw	r24, 0x01	; 1
    10cc:	a1 09       	sbc	r26, r1
    10ce:	b1 09       	sbc	r27, r1
    10d0:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <_avr_timer_cntcurr>
    10d4:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <_avr_timer_cntcurr+0x1>
    10d8:	a0 93 ed 01 	sts	0x01ED, r26	; 0x8001ed <_avr_timer_cntcurr+0x2>
    10dc:	b0 93 ee 01 	sts	0x01EE, r27	; 0x8001ee <_avr_timer_cntcurr+0x3>
    10e0:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <_avr_timer_cntcurr>
    10e4:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <_avr_timer_cntcurr+0x1>
    10e8:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <_avr_timer_cntcurr+0x2>
    10ec:	b0 91 ee 01 	lds	r27, 0x01EE	; 0x8001ee <_avr_timer_cntcurr+0x3>
    10f0:	89 2b       	or	r24, r25
    10f2:	8a 2b       	or	r24, r26
    10f4:	8b 2b       	or	r24, r27
    10f6:	89 f4       	brne	.+34     	; 0x111a <__vector_13+0x92>
    10f8:	bc df       	rcall	.-136    	; 0x1072 <TimerISR>
    10fa:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <_avr_timer_M>
    10fe:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <_avr_timer_M+0x1>
    1102:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <_avr_timer_M+0x2>
    1106:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <_avr_timer_M+0x3>
    110a:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <_avr_timer_cntcurr>
    110e:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <_avr_timer_cntcurr+0x1>
    1112:	a0 93 ed 01 	sts	0x01ED, r26	; 0x8001ed <_avr_timer_cntcurr+0x2>
    1116:	b0 93 ee 01 	sts	0x01EE, r27	; 0x8001ee <_avr_timer_cntcurr+0x3>
    111a:	00 00       	nop
    111c:	df 91       	pop	r29
    111e:	cf 91       	pop	r28
    1120:	ff 91       	pop	r31
    1122:	ef 91       	pop	r30
    1124:	bf 91       	pop	r27
    1126:	af 91       	pop	r26
    1128:	9f 91       	pop	r25
    112a:	8f 91       	pop	r24
    112c:	7f 91       	pop	r23
    112e:	6f 91       	pop	r22
    1130:	5f 91       	pop	r21
    1132:	4f 91       	pop	r20
    1134:	3f 91       	pop	r19
    1136:	2f 91       	pop	r18
    1138:	0f 90       	pop	r0
    113a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    113e:	0f 90       	pop	r0
    1140:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1144:	0f 90       	pop	r0
    1146:	1f 90       	pop	r1
    1148:	18 95       	reti

0000114a <SNES_Read>:
    114a:	cf 93       	push	r28
    114c:	df 93       	push	r29
    114e:	00 d0       	rcall	.+0      	; 0x1150 <SNES_Read+0x6>
    1150:	00 d0       	rcall	.+0      	; 0x1152 <SNES_Read+0x8>
    1152:	cd b7       	in	r28, 0x3d	; 61
    1154:	de b7       	in	r29, 0x3e	; 62
    1156:	1a 82       	std	Y+2, r1	; 0x02
    1158:	19 82       	std	Y+1, r1	; 0x01
    115a:	82 e2       	ldi	r24, 0x22	; 34
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	22 e2       	ldi	r18, 0x22	; 34
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	f9 01       	movw	r30, r18
    1164:	20 81       	ld	r18, Z
    1166:	22 60       	ori	r18, 0x02	; 2
    1168:	fc 01       	movw	r30, r24
    116a:	20 83       	st	Z, r18
    116c:	82 e2       	ldi	r24, 0x22	; 34
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	22 e2       	ldi	r18, 0x22	; 34
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	f9 01       	movw	r30, r18
    1176:	20 81       	ld	r18, Z
    1178:	21 60       	ori	r18, 0x01	; 1
    117a:	fc 01       	movw	r30, r24
    117c:	20 83       	st	Z, r18
    117e:	82 e2       	ldi	r24, 0x22	; 34
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	22 e2       	ldi	r18, 0x22	; 34
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	f9 01       	movw	r30, r18
    1188:	20 81       	ld	r18, Z
    118a:	2d 7f       	andi	r18, 0xFD	; 253
    118c:	fc 01       	movw	r30, r24
    118e:	20 83       	st	Z, r18
    1190:	80 e2       	ldi	r24, 0x20	; 32
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	fc 01       	movw	r30, r24
    1196:	80 81       	ld	r24, Z
    1198:	88 2f       	mov	r24, r24
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	80 95       	com	r24
    119e:	90 95       	com	r25
    11a0:	84 70       	andi	r24, 0x04	; 4
    11a2:	99 27       	eor	r25, r25
    11a4:	95 95       	asr	r25
    11a6:	87 95       	ror	r24
    11a8:	95 95       	asr	r25
    11aa:	87 95       	ror	r24
    11ac:	9a 83       	std	Y+2, r25	; 0x02
    11ae:	89 83       	std	Y+1, r24	; 0x01
    11b0:	1c 82       	std	Y+4, r1	; 0x04
    11b2:	1b 82       	std	Y+3, r1	; 0x03
    11b4:	32 c0       	rjmp	.+100    	; 0x121a <SNES_Read+0xd0>
    11b6:	82 e2       	ldi	r24, 0x22	; 34
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	22 e2       	ldi	r18, 0x22	; 34
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	f9 01       	movw	r30, r18
    11c0:	20 81       	ld	r18, Z
    11c2:	2e 7f       	andi	r18, 0xFE	; 254
    11c4:	fc 01       	movw	r30, r24
    11c6:	20 83       	st	Z, r18
    11c8:	89 81       	ldd	r24, Y+1	; 0x01
    11ca:	9a 81       	ldd	r25, Y+2	; 0x02
    11cc:	88 0f       	add	r24, r24
    11ce:	99 1f       	adc	r25, r25
    11d0:	9a 83       	std	Y+2, r25	; 0x02
    11d2:	89 83       	std	Y+1, r24	; 0x01
    11d4:	80 e2       	ldi	r24, 0x20	; 32
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	fc 01       	movw	r30, r24
    11da:	80 81       	ld	r24, Z
    11dc:	88 2f       	mov	r24, r24
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	80 95       	com	r24
    11e2:	90 95       	com	r25
    11e4:	84 70       	andi	r24, 0x04	; 4
    11e6:	99 27       	eor	r25, r25
    11e8:	95 95       	asr	r25
    11ea:	87 95       	ror	r24
    11ec:	95 95       	asr	r25
    11ee:	87 95       	ror	r24
    11f0:	9c 01       	movw	r18, r24
    11f2:	89 81       	ldd	r24, Y+1	; 0x01
    11f4:	9a 81       	ldd	r25, Y+2	; 0x02
    11f6:	82 2b       	or	r24, r18
    11f8:	93 2b       	or	r25, r19
    11fa:	9a 83       	std	Y+2, r25	; 0x02
    11fc:	89 83       	std	Y+1, r24	; 0x01
    11fe:	82 e2       	ldi	r24, 0x22	; 34
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	22 e2       	ldi	r18, 0x22	; 34
    1204:	30 e0       	ldi	r19, 0x00	; 0
    1206:	f9 01       	movw	r30, r18
    1208:	20 81       	ld	r18, Z
    120a:	21 60       	ori	r18, 0x01	; 1
    120c:	fc 01       	movw	r30, r24
    120e:	20 83       	st	Z, r18
    1210:	8b 81       	ldd	r24, Y+3	; 0x03
    1212:	9c 81       	ldd	r25, Y+4	; 0x04
    1214:	01 96       	adiw	r24, 0x01	; 1
    1216:	9c 83       	std	Y+4, r25	; 0x04
    1218:	8b 83       	std	Y+3, r24	; 0x03
    121a:	8b 81       	ldd	r24, Y+3	; 0x03
    121c:	9c 81       	ldd	r25, Y+4	; 0x04
    121e:	40 97       	sbiw	r24, 0x10	; 16
    1220:	54 f2       	brlt	.-108    	; 0x11b6 <SNES_Read+0x6c>
    1222:	89 81       	ldd	r24, Y+1	; 0x01
    1224:	9a 81       	ldd	r25, Y+2	; 0x02
    1226:	0f 90       	pop	r0
    1228:	0f 90       	pop	r0
    122a:	0f 90       	pop	r0
    122c:	0f 90       	pop	r0
    122e:	df 91       	pop	r29
    1230:	cf 91       	pop	r28
    1232:	08 95       	ret

00001234 <buildmenu>:
    1234:	0f 93       	push	r16
    1236:	cf 93       	push	r28
    1238:	df 93       	push	r29
    123a:	cd b7       	in	r28, 0x3d	; 61
    123c:	de b7       	in	r29, 0x3e	; 62
    123e:	64 d9       	rcall	.-3384   	; 0x508 <glcd_init>
    1240:	82 ed       	ldi	r24, 0xD2	; 210
    1242:	c1 da       	rcall	.-2686   	; 0x7c6 <glcd_set_contrast>
    1244:	0f e7       	ldi	r16, 0x7F	; 127
    1246:	20 e2       	ldi	r18, 0x20	; 32
    1248:	47 e0       	ldi	r20, 0x07	; 7
    124a:	65 e0       	ldi	r22, 0x05	; 5
    124c:	8c e8       	ldi	r24, 0x8C	; 140
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	30 dc       	rcall	.-1952   	; 0xab2 <glcd_tiny_set_font>
    1252:	fa db       	rcall	.-2060   	; 0xa48 <glcd_clear_buffer>
    1254:	42 e9       	ldi	r20, 0x92	; 146
    1256:	51 e0       	ldi	r21, 0x01	; 1
    1258:	60 e0       	ldi	r22, 0x00	; 0
    125a:	8f e0       	ldi	r24, 0x0F	; 15
    125c:	13 dd       	rcall	.-1498   	; 0xc84 <glcd_tiny_draw_string>
    125e:	01 e0       	ldi	r16, 0x01	; 1
    1260:	27 e0       	ldi	r18, 0x07	; 7
    1262:	46 e4       	ldi	r20, 0x46	; 70
    1264:	67 e0       	ldi	r22, 0x07	; 7
    1266:	8c e0       	ldi	r24, 0x0C	; 12
    1268:	f4 dd       	rcall	.-1048   	; 0xe52 <glcd_draw_line>
    126a:	4c e9       	ldi	r20, 0x9C	; 156
    126c:	51 e0       	ldi	r21, 0x01	; 1
    126e:	62 e0       	ldi	r22, 0x02	; 2
    1270:	8a e0       	ldi	r24, 0x0A	; 10
    1272:	08 dd       	rcall	.-1520   	; 0xc84 <glcd_tiny_draw_string>
    1274:	48 ea       	ldi	r20, 0xA8	; 168
    1276:	51 e0       	ldi	r21, 0x01	; 1
    1278:	64 e0       	ldi	r22, 0x04	; 4
    127a:	82 e1       	ldi	r24, 0x12	; 18
    127c:	03 dd       	rcall	.-1530   	; 0xc84 <glcd_tiny_draw_string>
    127e:	b7 da       	rcall	.-2706   	; 0x7ee <glcd_write>
    1280:	32 d8       	rcall	.-3996   	; 0x2e6 <LCD_init>
    1282:	27 d8       	rcall	.-4018   	; 0x2d2 <LCD_ClearScreen>
    1284:	61 eb       	ldi	r22, 0xB1	; 177
    1286:	71 e0       	ldi	r23, 0x01	; 1
    1288:	81 e0       	ldi	r24, 0x01	; 1
    128a:	a1 d8       	rcall	.-3774   	; 0x3ce <LCD_DisplayString>
    128c:	84 e1       	ldi	r24, 0x14	; 20
    128e:	c9 d8       	rcall	.-3694   	; 0x422 <LCD_Cursor>
    1290:	00 00       	nop
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	0f 91       	pop	r16
    1298:	08 95       	ret

0000129a <gameTask>:
unsigned short gameCount = 0;
unsigned short maxscore;
unsigned char lives = 5;

//Menu tasks to go play, change difficulty, or show the high score
void gameTask (/*int stateG*/){
    129a:	0f 93       	push	r16
    129c:	1f 93       	push	r17
    129e:	cf 93       	push	r28
    12a0:	df 93       	push	r29
    12a2:	cd b7       	in	r28, 0x3d	; 61
    12a4:	de b7       	in	r29, 0x3e	; 62
    12a6:	c3 5a       	subi	r28, 0xA3	; 163
    12a8:	d1 09       	sbc	r29, r1
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	f8 94       	cli
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	cd bf       	out	0x3d, r28	; 61
	unsigned short press = SNES_Read();
    12b4:	4a df       	rcall	.-364    	; 0x114a <SNES_Read>
    12b6:	9b 83       	std	Y+3, r25	; 0x03
    12b8:	8a 83       	std	Y+2, r24	; 0x02
	unsigned int check = rand() % 4;
    12ba:	0e 94 30 14 	call	0x2860	; 0x2860 <rand>
    12be:	83 70       	andi	r24, 0x03	; 3
    12c0:	90 78       	andi	r25, 0x80	; 128
    12c2:	99 23       	and	r25, r25
    12c4:	24 f4       	brge	.+8      	; 0x12ce <gameTask+0x34>
    12c6:	01 97       	sbiw	r24, 0x01	; 1
    12c8:	8c 6f       	ori	r24, 0xFC	; 252
    12ca:	9f 6f       	ori	r25, 0xFF	; 255
    12cc:	01 96       	adiw	r24, 0x01	; 1
    12ce:	9d 83       	std	Y+5, r25	; 0x05
    12d0:	8c 83       	std	Y+4, r24	; 0x04
	unsigned char note;
	unsigned readFlag = 0;
    12d2:	1f 82       	std	Y+7, r1	; 0x07
    12d4:	1e 82       	std	Y+6, r1	; 0x06
	
	maxscore = (unsigned)(char)eeprom_read_byte((uint8_t*)1);
    12d6:	81 e0       	ldi	r24, 0x01	; 1
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 8d 14 	call	0x291a	; 0x291a <eeprom_read_byte>
    12de:	88 2f       	mov	r24, r24
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <maxscore+0x1>
    12e6:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <maxscore>
	char buffer[20];
	switch(stateG){ //ACTIONS
    12ea:	80 91 f3 03 	lds	r24, 0x03F3	; 0x8003f3 <stateG>
    12ee:	90 91 f4 03 	lds	r25, 0x03F4	; 0x8003f4 <stateG+0x1>
    12f2:	82 30       	cpi	r24, 0x02	; 2
    12f4:	91 05       	cpc	r25, r1
    12f6:	f9 f0       	breq	.+62     	; 0x1336 <gameTask+0x9c>
    12f8:	83 30       	cpi	r24, 0x03	; 3
    12fa:	91 05       	cpc	r25, r1
    12fc:	28 f4       	brcc	.+10     	; 0x1308 <gameTask+0x6e>
    12fe:	00 97       	sbiw	r24, 0x00	; 0
    1300:	59 f0       	breq	.+22     	; 0x1318 <gameTask+0x7e>
    1302:	01 97       	sbiw	r24, 0x01	; 1
    1304:	a9 f0       	breq	.+42     	; 0x1330 <gameTask+0x96>
		LCD_init();
		LCD_ClearScreen();
		LCD_DisplayString(1,"Game Over!!");
		break;
		default: //DEFAULT IS ... menu?
		break;
    1306:	33 c6       	rjmp	.+3174   	; 0x1f6e <gameTask+0xcd4>
	unsigned char note;
	unsigned readFlag = 0;
	
	maxscore = (unsigned)(char)eeprom_read_byte((uint8_t*)1);
	char buffer[20];
	switch(stateG){ //ACTIONS
    1308:	83 30       	cpi	r24, 0x03	; 3
    130a:	91 05       	cpc	r25, r1
    130c:	09 f4       	brne	.+2      	; 0x1310 <gameTask+0x76>
    130e:	bb c5       	rjmp	.+2934   	; 0x1e86 <gameTask+0xbec>
    1310:	04 97       	sbiw	r24, 0x04	; 4
    1312:	09 f4       	brne	.+2      	; 0x1316 <gameTask+0x7c>
    1314:	06 c6       	rjmp	.+3084   	; 0x1f22 <gameTask+0xc88>
		LCD_init();
		LCD_ClearScreen();
		LCD_DisplayString(1,"Game Over!!");
		break;
		default: //DEFAULT IS ... menu?
		break;
    1316:	2b c6       	rjmp	.+3158   	; 0x1f6e <gameTask+0xcd4>
	maxscore = (unsigned)(char)eeprom_read_byte((uint8_t*)1);
	char buffer[20];
	switch(stateG){ //ACTIONS
		case wait: //TBD: MAIN MENU
		//eeprom_update_byte((uint8_t*)1, (uint8_t)0); //MAX SCORE HARD RESET
		point = 0;
    1318:	10 92 f0 01 	sts	0x01F0, r1	; 0x8001f0 <point>
		gg = 0;
    131c:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <gg>
		gameCount = 0;
    1320:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <gameCount+0x1>
    1324:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <gameCount>
		lives = 5;
    1328:	85 e0       	ldi	r24, 0x05	; 5
    132a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <lives>
		break;
    132e:	1f c6       	rjmp	.+3134   	; 0x1f6e <gameTask+0xcd4>
		case play: //TBD: SWITCH TO GAMEPLAY
		/*buildGame();*/
		
		LCD_Cursor(32);
    1330:	80 e2       	ldi	r24, 0x20	; 32
    1332:	77 d8       	rcall	.-3858   	; 0x422 <LCD_Cursor>
		break;
    1334:	1c c6       	rjmp	.+3128   	; 0x1f6e <gameTask+0xcd4>
		case contplay:
		
		if(check == 0){
    1336:	8c 81       	ldd	r24, Y+4	; 0x04
    1338:	9d 81       	ldd	r25, Y+5	; 0x05
    133a:	89 2b       	or	r24, r25
    133c:	31 f4       	brne	.+12     	; 0x134a <gameTask+0xb0>
			gameFlag = 1;
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <gameFlag>
			note = 1;
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	89 83       	std	Y+1, r24	; 0x01
    1348:	18 c0       	rjmp	.+48     	; 0x137a <gameTask+0xe0>
		} else if(check == 1) {
    134a:	8c 81       	ldd	r24, Y+4	; 0x04
    134c:	9d 81       	ldd	r25, Y+5	; 0x05
    134e:	01 97       	sbiw	r24, 0x01	; 1
    1350:	29 f4       	brne	.+10     	; 0x135c <gameTask+0xc2>
			gameFlag = 2;
    1352:	82 e0       	ldi	r24, 0x02	; 2
    1354:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <gameFlag>
			note = 0;
    1358:	19 82       	std	Y+1, r1	; 0x01
    135a:	0f c0       	rjmp	.+30     	; 0x137a <gameTask+0xe0>
		}else if(check == 2) {
    135c:	8c 81       	ldd	r24, Y+4	; 0x04
    135e:	9d 81       	ldd	r25, Y+5	; 0x05
    1360:	02 97       	sbiw	r24, 0x02	; 2
    1362:	31 f4       	brne	.+12     	; 0x1370 <gameTask+0xd6>
			gameFlag = 3;
    1364:	83 e0       	ldi	r24, 0x03	; 3
    1366:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <gameFlag>
			note = 2;
    136a:	82 e0       	ldi	r24, 0x02	; 2
    136c:	89 83       	std	Y+1, r24	; 0x01
    136e:	05 c0       	rjmp	.+10     	; 0x137a <gameTask+0xe0>
		}else {
			gameFlag = 4;
    1370:	84 e0       	ldi	r24, 0x04	; 4
    1372:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <gameFlag>
			note = 3;
    1376:	83 e0       	ldi	r24, 0x03	; 3
    1378:	89 83       	std	Y+1, r24	; 0x01
// 		LCD_Cursor(13);
// 		LCD_WriteData(4);
// 		LCD_Cursor(14);
// 		LCD_WriteData(':');
// 		LCD_DisplayString(15, lives);
		itoa(point, buffer, 10);
    137a:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    137e:	88 2f       	mov	r24, r24
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	9e 01       	movw	r18, r28
    1384:	2a 57       	subi	r18, 0x7A	; 122
    1386:	3f 4f       	sbci	r19, 0xFF	; 255
    1388:	4a e0       	ldi	r20, 0x0A	; 10
    138a:	50 e0       	ldi	r21, 0x00	; 0
    138c:	b9 01       	movw	r22, r18
    138e:	0e 94 50 14 	call	0x28a0	; 0x28a0 <itoa>
		unsigned char disp[10] = "Score: ";
    1392:	ce 01       	movw	r24, r28
    1394:	86 56       	subi	r24, 0x66	; 102
    1396:	9f 4f       	sbci	r25, 0xFF	; 255
    1398:	28 e0       	ldi	r18, 0x08	; 8
    139a:	e9 ec       	ldi	r30, 0xC9	; 201
    139c:	f1 e0       	ldi	r31, 0x01	; 1
    139e:	dc 01       	movw	r26, r24
    13a0:	01 90       	ld	r0, Z+
    13a2:	0d 92       	st	X+, r0
    13a4:	2a 95       	dec	r18
    13a6:	e1 f7       	brne	.-8      	; 0x13a0 <gameTask+0x106>
    13a8:	fc 01       	movw	r30, r24
    13aa:	11 86       	std	Z+9, r1	; 0x09
    13ac:	10 86       	std	Z+8, r1	; 0x08
		strcat(disp, buffer);
    13ae:	9e 01       	movw	r18, r28
    13b0:	2a 57       	subi	r18, 0x7A	; 122
    13b2:	3f 4f       	sbci	r19, 0xFF	; 255
    13b4:	ce 01       	movw	r24, r28
    13b6:	86 56       	subi	r24, 0x66	; 102
    13b8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ba:	b9 01       	movw	r22, r18
    13bc:	0e 94 45 14 	call	0x288a	; 0x288a <strcat>
		LCD_DisplayString(1, disp);
    13c0:	ce 01       	movw	r24, r28
    13c2:	86 56       	subi	r24, 0x66	; 102
    13c4:	9f 4f       	sbci	r25, 0xFF	; 255
    13c6:	bc 01       	movw	r22, r24
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	01 d8       	rcall	.-4094   	; 0x3ce <LCD_DisplayString>
		
		
		
		
		if(check == 0){
    13cc:	8c 81       	ldd	r24, Y+4	; 0x04
    13ce:	9d 81       	ldd	r25, Y+5	; 0x05
    13d0:	89 2b       	or	r24, r25
    13d2:	09 f0       	breq	.+2      	; 0x13d6 <gameTask+0x13c>
			LCD_Cursor(17);
    13d4:	e9 c0       	rjmp	.+466    	; 0x15a8 <gameTask+0x30e>
    13d6:	81 e1       	ldi	r24, 0x11	; 17
    13d8:	24 d8       	rcall	.-4024   	; 0x422 <LCD_Cursor>
    13da:	80 e0       	ldi	r24, 0x00	; 0
    13dc:	90 e4       	ldi	r25, 0x40	; 64
    13de:	ac e9       	ldi	r26, 0x9C	; 156
    13e0:	b5 e4       	ldi	r27, 0x45	; 69
    13e2:	8c 87       	std	Y+12, r24	; 0x0c
    13e4:	9d 87       	std	Y+13, r25	; 0x0d
    13e6:	ae 87       	std	Y+14, r26	; 0x0e
    13e8:	bf 87       	std	Y+15, r27	; 0x0f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    13ea:	20 e0       	ldi	r18, 0x00	; 0
    13ec:	30 e0       	ldi	r19, 0x00	; 0
    13ee:	4a e7       	ldi	r20, 0x7A	; 122
    13f0:	53 e4       	ldi	r21, 0x43	; 67
    13f2:	6c 85       	ldd	r22, Y+12	; 0x0c
    13f4:	7d 85       	ldd	r23, Y+13	; 0x0d
    13f6:	8e 85       	ldd	r24, Y+14	; 0x0e
    13f8:	9f 85       	ldd	r25, Y+15	; 0x0f
    13fa:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
    13fe:	dc 01       	movw	r26, r24
    1400:	cb 01       	movw	r24, r22
    1402:	8e ab       	std	Y+54, r24	; 0x36
    1404:	9f ab       	std	Y+55, r25	; 0x37
    1406:	a8 af       	std	Y+56, r26	; 0x38
    1408:	b9 af       	std	Y+57, r27	; 0x39
	if (__tmp < 1.0)
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	40 e8       	ldi	r20, 0x80	; 128
    1410:	5f e3       	ldi	r21, 0x3F	; 63
    1412:	6e a9       	ldd	r22, Y+54	; 0x36
    1414:	7f a9       	ldd	r23, Y+55	; 0x37
    1416:	88 ad       	ldd	r24, Y+56	; 0x38
    1418:	99 ad       	ldd	r25, Y+57	; 0x39
    141a:	0e 94 b6 12 	call	0x256c	; 0x256c <__cmpsf2>
    141e:	88 23       	and	r24, r24
    1420:	2c f4       	brge	.+10     	; 0x142c <gameTask+0x192>
		__ticks = 1;
    1422:	81 e0       	ldi	r24, 0x01	; 1
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	9b af       	std	Y+59, r25	; 0x3b
    1428:	8a af       	std	Y+58, r24	; 0x3a
    142a:	3f c0       	rjmp	.+126    	; 0x14aa <gameTask+0x210>
	else if (__tmp > 65535)
    142c:	20 e0       	ldi	r18, 0x00	; 0
    142e:	3f ef       	ldi	r19, 0xFF	; 255
    1430:	4f e7       	ldi	r20, 0x7F	; 127
    1432:	57 e4       	ldi	r21, 0x47	; 71
    1434:	6e a9       	ldd	r22, Y+54	; 0x36
    1436:	7f a9       	ldd	r23, Y+55	; 0x37
    1438:	88 ad       	ldd	r24, Y+56	; 0x38
    143a:	99 ad       	ldd	r25, Y+57	; 0x39
    143c:	0e 94 33 13 	call	0x2666	; 0x2666 <__gesf2>
    1440:	18 16       	cp	r1, r24
    1442:	4c f5       	brge	.+82     	; 0x1496 <gameTask+0x1fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	30 e0       	ldi	r19, 0x00	; 0
    1448:	40 e2       	ldi	r20, 0x20	; 32
    144a:	51 e4       	ldi	r21, 0x41	; 65
    144c:	6c 85       	ldd	r22, Y+12	; 0x0c
    144e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1450:	8e 85       	ldd	r24, Y+14	; 0x0e
    1452:	9f 85       	ldd	r25, Y+15	; 0x0f
    1454:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
    1458:	dc 01       	movw	r26, r24
    145a:	cb 01       	movw	r24, r22
    145c:	bc 01       	movw	r22, r24
    145e:	cd 01       	movw	r24, r26
    1460:	0e 94 ba 12 	call	0x2574	; 0x2574 <__fixunssfsi>
    1464:	dc 01       	movw	r26, r24
    1466:	cb 01       	movw	r24, r22
    1468:	9b af       	std	Y+59, r25	; 0x3b
    146a:	8a af       	std	Y+58, r24	; 0x3a
    146c:	0f c0       	rjmp	.+30     	; 0x148c <gameTask+0x1f2>
    146e:	89 e1       	ldi	r24, 0x19	; 25
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	9d af       	std	Y+61, r25	; 0x3d
    1474:	8c af       	std	Y+60, r24	; 0x3c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1476:	8c ad       	ldd	r24, Y+60	; 0x3c
    1478:	9d ad       	ldd	r25, Y+61	; 0x3d
    147a:	01 97       	sbiw	r24, 0x01	; 1
    147c:	f1 f7       	brne	.-4      	; 0x147a <gameTask+0x1e0>
    147e:	9d af       	std	Y+61, r25	; 0x3d
    1480:	8c af       	std	Y+60, r24	; 0x3c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1482:	8a ad       	ldd	r24, Y+58	; 0x3a
    1484:	9b ad       	ldd	r25, Y+59	; 0x3b
    1486:	01 97       	sbiw	r24, 0x01	; 1
    1488:	9b af       	std	Y+59, r25	; 0x3b
    148a:	8a af       	std	Y+58, r24	; 0x3a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    148c:	8a ad       	ldd	r24, Y+58	; 0x3a
    148e:	9b ad       	ldd	r25, Y+59	; 0x3b
    1490:	89 2b       	or	r24, r25
    1492:	69 f7       	brne	.-38     	; 0x146e <gameTask+0x1d4>
    1494:	14 c0       	rjmp	.+40     	; 0x14be <gameTask+0x224>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1496:	6e a9       	ldd	r22, Y+54	; 0x36
    1498:	7f a9       	ldd	r23, Y+55	; 0x37
    149a:	88 ad       	ldd	r24, Y+56	; 0x38
    149c:	99 ad       	ldd	r25, Y+57	; 0x39
    149e:	0e 94 ba 12 	call	0x2574	; 0x2574 <__fixunssfsi>
    14a2:	dc 01       	movw	r26, r24
    14a4:	cb 01       	movw	r24, r22
    14a6:	9b af       	std	Y+59, r25	; 0x3b
    14a8:	8a af       	std	Y+58, r24	; 0x3a
    14aa:	8a ad       	ldd	r24, Y+58	; 0x3a
    14ac:	9b ad       	ldd	r25, Y+59	; 0x3b
    14ae:	9f af       	std	Y+63, r25	; 0x3f
    14b0:	8e af       	std	Y+62, r24	; 0x3e
    14b2:	8e ad       	ldd	r24, Y+62	; 0x3e
    14b4:	9f ad       	ldd	r25, Y+63	; 0x3f
    14b6:	01 97       	sbiw	r24, 0x01	; 1
    14b8:	f1 f7       	brne	.-4      	; 0x14b6 <gameTask+0x21c>
    14ba:	9f af       	std	Y+63, r25	; 0x3f
    14bc:	8e af       	std	Y+62, r24	; 0x3e
			delay_ms(5000);
			LCD_WriteData(note);
    14be:	89 81       	ldd	r24, Y+1	; 0x01
    14c0:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
    14c4:	80 e0       	ldi	r24, 0x00	; 0
    14c6:	90 e6       	ldi	r25, 0x60	; 96
    14c8:	aa e6       	ldi	r26, 0x6A	; 106
    14ca:	b5 e4       	ldi	r27, 0x45	; 69
    14cc:	88 a7       	std	Y+40, r24	; 0x28
    14ce:	99 a7       	std	Y+41, r25	; 0x29
    14d0:	aa a7       	std	Y+42, r26	; 0x2a
    14d2:	bb a7       	std	Y+43, r27	; 0x2b

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	4a e7       	ldi	r20, 0x7A	; 122
    14da:	53 e4       	ldi	r21, 0x43	; 67
    14dc:	68 a5       	ldd	r22, Y+40	; 0x28
    14de:	79 a5       	ldd	r23, Y+41	; 0x29
    14e0:	8a a5       	ldd	r24, Y+42	; 0x2a
    14e2:	9b a5       	ldd	r25, Y+43	; 0x2b
    14e4:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
    14e8:	dc 01       	movw	r26, r24
    14ea:	cb 01       	movw	r24, r22
    14ec:	8c a7       	std	Y+44, r24	; 0x2c
    14ee:	9d a7       	std	Y+45, r25	; 0x2d
    14f0:	ae a7       	std	Y+46, r26	; 0x2e
    14f2:	bf a7       	std	Y+47, r27	; 0x2f
	if (__tmp < 1.0)
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	40 e8       	ldi	r20, 0x80	; 128
    14fa:	5f e3       	ldi	r21, 0x3F	; 63
    14fc:	6c a5       	ldd	r22, Y+44	; 0x2c
    14fe:	7d a5       	ldd	r23, Y+45	; 0x2d
    1500:	8e a5       	ldd	r24, Y+46	; 0x2e
    1502:	9f a5       	ldd	r25, Y+47	; 0x2f
    1504:	0e 94 b6 12 	call	0x256c	; 0x256c <__cmpsf2>
    1508:	88 23       	and	r24, r24
    150a:	2c f4       	brge	.+10     	; 0x1516 <gameTask+0x27c>
		__ticks = 1;
    150c:	81 e0       	ldi	r24, 0x01	; 1
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	99 ab       	std	Y+49, r25	; 0x31
    1512:	88 ab       	std	Y+48, r24	; 0x30
    1514:	3e c0       	rjmp	.+124    	; 0x1592 <gameTask+0x2f8>
	else if (__tmp > 65535)
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	3f ef       	ldi	r19, 0xFF	; 255
    151a:	4f e7       	ldi	r20, 0x7F	; 127
    151c:	57 e4       	ldi	r21, 0x47	; 71
    151e:	6c a5       	ldd	r22, Y+44	; 0x2c
    1520:	7d a5       	ldd	r23, Y+45	; 0x2d
    1522:	8e a5       	ldd	r24, Y+46	; 0x2e
    1524:	9f a5       	ldd	r25, Y+47	; 0x2f
    1526:	0e 94 33 13 	call	0x2666	; 0x2666 <__gesf2>
    152a:	18 16       	cp	r1, r24
    152c:	4c f5       	brge	.+82     	; 0x1580 <gameTask+0x2e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e2       	ldi	r20, 0x20	; 32
    1534:	51 e4       	ldi	r21, 0x41	; 65
    1536:	68 a5       	ldd	r22, Y+40	; 0x28
    1538:	79 a5       	ldd	r23, Y+41	; 0x29
    153a:	8a a5       	ldd	r24, Y+42	; 0x2a
    153c:	9b a5       	ldd	r25, Y+43	; 0x2b
    153e:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
    1542:	dc 01       	movw	r26, r24
    1544:	cb 01       	movw	r24, r22
    1546:	bc 01       	movw	r22, r24
    1548:	cd 01       	movw	r24, r26
    154a:	0e 94 ba 12 	call	0x2574	; 0x2574 <__fixunssfsi>
    154e:	dc 01       	movw	r26, r24
    1550:	cb 01       	movw	r24, r22
    1552:	99 ab       	std	Y+49, r25	; 0x31
    1554:	88 ab       	std	Y+48, r24	; 0x30
    1556:	0f c0       	rjmp	.+30     	; 0x1576 <gameTask+0x2dc>
    1558:	89 e1       	ldi	r24, 0x19	; 25
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	9b ab       	std	Y+51, r25	; 0x33
    155e:	8a ab       	std	Y+50, r24	; 0x32
    1560:	8a a9       	ldd	r24, Y+50	; 0x32
    1562:	9b a9       	ldd	r25, Y+51	; 0x33
    1564:	01 97       	sbiw	r24, 0x01	; 1
    1566:	f1 f7       	brne	.-4      	; 0x1564 <gameTask+0x2ca>
    1568:	9b ab       	std	Y+51, r25	; 0x33
    156a:	8a ab       	std	Y+50, r24	; 0x32
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    156c:	88 a9       	ldd	r24, Y+48	; 0x30
    156e:	99 a9       	ldd	r25, Y+49	; 0x31
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	99 ab       	std	Y+49, r25	; 0x31
    1574:	88 ab       	std	Y+48, r24	; 0x30
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1576:	88 a9       	ldd	r24, Y+48	; 0x30
    1578:	99 a9       	ldd	r25, Y+49	; 0x31
    157a:	89 2b       	or	r24, r25
    157c:	69 f7       	brne	.-38     	; 0x1558 <gameTask+0x2be>
    157e:	66 c4       	rjmp	.+2252   	; 0x1e4c <gameTask+0xbb2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1580:	6c a5       	ldd	r22, Y+44	; 0x2c
    1582:	7d a5       	ldd	r23, Y+45	; 0x2d
    1584:	8e a5       	ldd	r24, Y+46	; 0x2e
    1586:	9f a5       	ldd	r25, Y+47	; 0x2f
    1588:	f5 d7       	rcall	.+4074   	; 0x2574 <__fixunssfsi>
    158a:	dc 01       	movw	r26, r24
    158c:	cb 01       	movw	r24, r22
    158e:	99 ab       	std	Y+49, r25	; 0x31
    1590:	88 ab       	std	Y+48, r24	; 0x30
    1592:	88 a9       	ldd	r24, Y+48	; 0x30
    1594:	99 a9       	ldd	r25, Y+49	; 0x31
    1596:	9d ab       	std	Y+53, r25	; 0x35
    1598:	8c ab       	std	Y+52, r24	; 0x34
    159a:	8c a9       	ldd	r24, Y+52	; 0x34
    159c:	9d a9       	ldd	r25, Y+53	; 0x35
    159e:	01 97       	sbiw	r24, 0x01	; 1
    15a0:	f1 f7       	brne	.-4      	; 0x159e <gameTask+0x304>
    15a2:	9d ab       	std	Y+53, r25	; 0x35
    15a4:	8c ab       	std	Y+52, r24	; 0x34
    15a6:	52 c4       	rjmp	.+2212   	; 0x1e4c <gameTask+0xbb2>
			delay_ms(3750);
		} else if (check == 1){
    15a8:	8c 81       	ldd	r24, Y+4	; 0x04
    15aa:	9d 81       	ldd	r25, Y+5	; 0x05
    15ac:	01 97       	sbiw	r24, 0x01	; 1
    15ae:	09 f0       	breq	.+2      	; 0x15b2 <gameTask+0x318>
    15b0:	6e c1       	rjmp	.+732    	; 0x188e <gameTask+0x5f4>
			LCD_Cursor(22);
    15b2:	86 e1       	ldi	r24, 0x16	; 22
    15b4:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
    15b8:	80 e0       	ldi	r24, 0x00	; 0
    15ba:	90 e4       	ldi	r25, 0x40	; 64
    15bc:	ac e9       	ldi	r26, 0x9C	; 156
    15be:	b5 e4       	ldi	r27, 0x45	; 69
    15c0:	8c 8b       	std	Y+20, r24	; 0x14
    15c2:	9d 8b       	std	Y+21, r25	; 0x15
    15c4:	ae 8b       	std	Y+22, r26	; 0x16
    15c6:	bf 8b       	std	Y+23, r27	; 0x17

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    15c8:	8e 01       	movw	r16, r28
    15ca:	06 5b       	subi	r16, 0xB6	; 182
    15cc:	1f 4f       	sbci	r17, 0xFF	; 255
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	4a e7       	ldi	r20, 0x7A	; 122
    15d4:	53 e4       	ldi	r21, 0x43	; 67
    15d6:	6c 89       	ldd	r22, Y+20	; 0x14
    15d8:	7d 89       	ldd	r23, Y+21	; 0x15
    15da:	8e 89       	ldd	r24, Y+22	; 0x16
    15dc:	9f 89       	ldd	r25, Y+23	; 0x17
    15de:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	f8 01       	movw	r30, r16
    15e8:	80 83       	st	Z, r24
    15ea:	91 83       	std	Z+1, r25	; 0x01
    15ec:	a2 83       	std	Z+2, r26	; 0x02
    15ee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15f0:	ce 01       	movw	r24, r28
    15f2:	86 5b       	subi	r24, 0xB6	; 182
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	20 e0       	ldi	r18, 0x00	; 0
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	40 e8       	ldi	r20, 0x80	; 128
    15fc:	5f e3       	ldi	r21, 0x3F	; 63
    15fe:	fc 01       	movw	r30, r24
    1600:	60 81       	ld	r22, Z
    1602:	71 81       	ldd	r23, Z+1	; 0x01
    1604:	82 81       	ldd	r24, Z+2	; 0x02
    1606:	93 81       	ldd	r25, Z+3	; 0x03
    1608:	b1 d7       	rcall	.+3938   	; 0x256c <__cmpsf2>
    160a:	88 23       	and	r24, r24
    160c:	4c f4       	brge	.+18     	; 0x1620 <gameTask+0x386>
		__ticks = 1;
    160e:	ce 01       	movw	r24, r28
    1610:	82 5b       	subi	r24, 0xB2	; 178
    1612:	9f 4f       	sbci	r25, 0xFF	; 255
    1614:	21 e0       	ldi	r18, 0x01	; 1
    1616:	30 e0       	ldi	r19, 0x00	; 0
    1618:	fc 01       	movw	r30, r24
    161a:	31 83       	std	Z+1, r19	; 0x01
    161c:	20 83       	st	Z, r18
    161e:	67 c0       	rjmp	.+206    	; 0x16ee <gameTask+0x454>
	else if (__tmp > 65535)
    1620:	ce 01       	movw	r24, r28
    1622:	86 5b       	subi	r24, 0xB6	; 182
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	20 e0       	ldi	r18, 0x00	; 0
    1628:	3f ef       	ldi	r19, 0xFF	; 255
    162a:	4f e7       	ldi	r20, 0x7F	; 127
    162c:	57 e4       	ldi	r21, 0x47	; 71
    162e:	fc 01       	movw	r30, r24
    1630:	60 81       	ld	r22, Z
    1632:	71 81       	ldd	r23, Z+1	; 0x01
    1634:	82 81       	ldd	r24, Z+2	; 0x02
    1636:	93 81       	ldd	r25, Z+3	; 0x03
    1638:	0e 94 33 13 	call	0x2666	; 0x2666 <__gesf2>
    163c:	18 16       	cp	r1, r24
    163e:	0c f0       	brlt	.+2      	; 0x1642 <gameTask+0x3a8>
    1640:	45 c0       	rjmp	.+138    	; 0x16cc <gameTask+0x432>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1642:	20 e0       	ldi	r18, 0x00	; 0
    1644:	30 e0       	ldi	r19, 0x00	; 0
    1646:	40 e2       	ldi	r20, 0x20	; 32
    1648:	51 e4       	ldi	r21, 0x41	; 65
    164a:	6c 89       	ldd	r22, Y+20	; 0x14
    164c:	7d 89       	ldd	r23, Y+21	; 0x15
    164e:	8e 89       	ldd	r24, Y+22	; 0x16
    1650:	9f 89       	ldd	r25, Y+23	; 0x17
    1652:	0e 94 37 13 	call	0x266e	; 0x266e <__mulsf3>
    1656:	dc 01       	movw	r26, r24
    1658:	cb 01       	movw	r24, r22
    165a:	8e 01       	movw	r16, r28
    165c:	02 5b       	subi	r16, 0xB2	; 178
    165e:	1f 4f       	sbci	r17, 0xFF	; 255
    1660:	bc 01       	movw	r22, r24
    1662:	cd 01       	movw	r24, r26
    1664:	87 d7       	rcall	.+3854   	; 0x2574 <__fixunssfsi>
    1666:	dc 01       	movw	r26, r24
    1668:	cb 01       	movw	r24, r22
    166a:	f8 01       	movw	r30, r16
    166c:	91 83       	std	Z+1, r25	; 0x01
    166e:	80 83       	st	Z, r24
    1670:	24 c0       	rjmp	.+72     	; 0x16ba <gameTask+0x420>
    1672:	ce 01       	movw	r24, r28
    1674:	80 5b       	subi	r24, 0xB0	; 176
    1676:	9f 4f       	sbci	r25, 0xFF	; 255
    1678:	29 e1       	ldi	r18, 0x19	; 25
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	fc 01       	movw	r30, r24
    167e:	31 83       	std	Z+1, r19	; 0x01
    1680:	20 83       	st	Z, r18
    1682:	ce 01       	movw	r24, r28
    1684:	80 5b       	subi	r24, 0xB0	; 176
    1686:	9f 4f       	sbci	r25, 0xFF	; 255
    1688:	fc 01       	movw	r30, r24
    168a:	80 81       	ld	r24, Z
    168c:	91 81       	ldd	r25, Z+1	; 0x01
    168e:	01 97       	sbiw	r24, 0x01	; 1
    1690:	f1 f7       	brne	.-4      	; 0x168e <gameTask+0x3f4>
    1692:	9e 01       	movw	r18, r28
    1694:	20 5b       	subi	r18, 0xB0	; 176
    1696:	3f 4f       	sbci	r19, 0xFF	; 255
    1698:	f9 01       	movw	r30, r18
    169a:	91 83       	std	Z+1, r25	; 0x01
    169c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    169e:	ce 01       	movw	r24, r28
    16a0:	82 5b       	subi	r24, 0xB2	; 178
    16a2:	9f 4f       	sbci	r25, 0xFF	; 255
    16a4:	9e 01       	movw	r18, r28
    16a6:	22 5b       	subi	r18, 0xB2	; 178
    16a8:	3f 4f       	sbci	r19, 0xFF	; 255
    16aa:	f9 01       	movw	r30, r18
    16ac:	20 81       	ld	r18, Z
    16ae:	31 81       	ldd	r19, Z+1	; 0x01
    16b0:	21 50       	subi	r18, 0x01	; 1
    16b2:	31 09       	sbc	r19, r1
    16b4:	fc 01       	movw	r30, r24
    16b6:	31 83       	std	Z+1, r19	; 0x01
    16b8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16ba:	ce 01       	movw	r24, r28
    16bc:	82 5b       	subi	r24, 0xB2	; 178
    16be:	9f 4f       	sbci	r25, 0xFF	; 255
    16c0:	fc 01       	movw	r30, r24
    16c2:	80 81       	ld	r24, Z
    16c4:	91 81       	ldd	r25, Z+1	; 0x01
    16c6:	89 2b       	or	r24, r25
    16c8:	a1 f6       	brne	.-88     	; 0x1672 <gameTask+0x3d8>
    16ca:	2b c0       	rjmp	.+86     	; 0x1722 <gameTask+0x488>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16cc:	8e 01       	movw	r16, r28
    16ce:	02 5b       	subi	r16, 0xB2	; 178
    16d0:	1f 4f       	sbci	r17, 0xFF	; 255
    16d2:	ce 01       	movw	r24, r28
    16d4:	86 5b       	subi	r24, 0xB6	; 182
    16d6:	9f 4f       	sbci	r25, 0xFF	; 255
    16d8:	fc 01       	movw	r30, r24
    16da:	60 81       	ld	r22, Z
    16dc:	71 81       	ldd	r23, Z+1	; 0x01
    16de:	82 81       	ldd	r24, Z+2	; 0x02
    16e0:	93 81       	ldd	r25, Z+3	; 0x03
    16e2:	48 d7       	rcall	.+3728   	; 0x2574 <__fixunssfsi>
    16e4:	dc 01       	movw	r26, r24
    16e6:	cb 01       	movw	r24, r22
    16e8:	f8 01       	movw	r30, r16
    16ea:	91 83       	std	Z+1, r25	; 0x01
    16ec:	80 83       	st	Z, r24
    16ee:	ce 01       	movw	r24, r28
    16f0:	8e 5a       	subi	r24, 0xAE	; 174
    16f2:	9f 4f       	sbci	r25, 0xFF	; 255
    16f4:	9e 01       	movw	r18, r28
    16f6:	22 5b       	subi	r18, 0xB2	; 178
    16f8:	3f 4f       	sbci	r19, 0xFF	; 255
    16fa:	f9 01       	movw	r30, r18
    16fc:	20 81       	ld	r18, Z
    16fe:	31 81       	ldd	r19, Z+1	; 0x01
    1700:	fc 01       	movw	r30, r24
    1702:	31 83       	std	Z+1, r19	; 0x01
    1704:	20 83       	st	Z, r18
    1706:	ce 01       	movw	r24, r28
    1708:	8e 5a       	subi	r24, 0xAE	; 174
    170a:	9f 4f       	sbci	r25, 0xFF	; 255
    170c:	fc 01       	movw	r30, r24
    170e:	80 81       	ld	r24, Z
    1710:	91 81       	ldd	r25, Z+1	; 0x01
    1712:	01 97       	sbiw	r24, 0x01	; 1
    1714:	f1 f7       	brne	.-4      	; 0x1712 <gameTask+0x478>
    1716:	9e 01       	movw	r18, r28
    1718:	2e 5a       	subi	r18, 0xAE	; 174
    171a:	3f 4f       	sbci	r19, 0xFF	; 255
    171c:	f9 01       	movw	r30, r18
    171e:	91 83       	std	Z+1, r25	; 0x01
    1720:	80 83       	st	Z, r24
			delay_ms(5000);
			LCD_WriteData(note);
    1722:	89 81       	ldd	r24, Y+1	; 0x01
    1724:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
    1728:	80 e0       	ldi	r24, 0x00	; 0
    172a:	90 e6       	ldi	r25, 0x60	; 96
    172c:	aa e6       	ldi	r26, 0x6A	; 106
    172e:	b5 e4       	ldi	r27, 0x45	; 69
    1730:	88 87       	std	Y+8, r24	; 0x08
    1732:	99 87       	std	Y+9, r25	; 0x09
    1734:	aa 87       	std	Y+10, r26	; 0x0a
    1736:	bb 87       	std	Y+11, r27	; 0x0b

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1738:	8e 01       	movw	r16, r28
    173a:	00 5c       	subi	r16, 0xC0	; 192
    173c:	1f 4f       	sbci	r17, 0xFF	; 255
    173e:	20 e0       	ldi	r18, 0x00	; 0
    1740:	30 e0       	ldi	r19, 0x00	; 0
    1742:	4a e7       	ldi	r20, 0x7A	; 122
    1744:	53 e4       	ldi	r21, 0x43	; 67
    1746:	68 85       	ldd	r22, Y+8	; 0x08
    1748:	79 85       	ldd	r23, Y+9	; 0x09
    174a:	8a 85       	ldd	r24, Y+10	; 0x0a
    174c:	9b 85       	ldd	r25, Y+11	; 0x0b
    174e:	8f d7       	rcall	.+3870   	; 0x266e <__mulsf3>
    1750:	dc 01       	movw	r26, r24
    1752:	cb 01       	movw	r24, r22
    1754:	f8 01       	movw	r30, r16
    1756:	80 83       	st	Z, r24
    1758:	91 83       	std	Z+1, r25	; 0x01
    175a:	a2 83       	std	Z+2, r26	; 0x02
    175c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    175e:	ce 01       	movw	r24, r28
    1760:	80 5c       	subi	r24, 0xC0	; 192
    1762:	9f 4f       	sbci	r25, 0xFF	; 255
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	40 e8       	ldi	r20, 0x80	; 128
    176a:	5f e3       	ldi	r21, 0x3F	; 63
    176c:	fc 01       	movw	r30, r24
    176e:	60 81       	ld	r22, Z
    1770:	71 81       	ldd	r23, Z+1	; 0x01
    1772:	82 81       	ldd	r24, Z+2	; 0x02
    1774:	93 81       	ldd	r25, Z+3	; 0x03
    1776:	fa d6       	rcall	.+3572   	; 0x256c <__cmpsf2>
    1778:	88 23       	and	r24, r24
    177a:	4c f4       	brge	.+18     	; 0x178e <gameTask+0x4f4>
		__ticks = 1;
    177c:	ce 01       	movw	r24, r28
    177e:	8c 5b       	subi	r24, 0xBC	; 188
    1780:	9f 4f       	sbci	r25, 0xFF	; 255
    1782:	21 e0       	ldi	r18, 0x01	; 1
    1784:	30 e0       	ldi	r19, 0x00	; 0
    1786:	fc 01       	movw	r30, r24
    1788:	31 83       	std	Z+1, r19	; 0x01
    178a:	20 83       	st	Z, r18
    178c:	65 c0       	rjmp	.+202    	; 0x1858 <gameTask+0x5be>
	else if (__tmp > 65535)
    178e:	ce 01       	movw	r24, r28
    1790:	80 5c       	subi	r24, 0xC0	; 192
    1792:	9f 4f       	sbci	r25, 0xFF	; 255
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	3f ef       	ldi	r19, 0xFF	; 255
    1798:	4f e7       	ldi	r20, 0x7F	; 127
    179a:	57 e4       	ldi	r21, 0x47	; 71
    179c:	fc 01       	movw	r30, r24
    179e:	60 81       	ld	r22, Z
    17a0:	71 81       	ldd	r23, Z+1	; 0x01
    17a2:	82 81       	ldd	r24, Z+2	; 0x02
    17a4:	93 81       	ldd	r25, Z+3	; 0x03
    17a6:	5f d7       	rcall	.+3774   	; 0x2666 <__gesf2>
    17a8:	18 16       	cp	r1, r24
    17aa:	0c f0       	brlt	.+2      	; 0x17ae <gameTask+0x514>
    17ac:	44 c0       	rjmp	.+136    	; 0x1836 <gameTask+0x59c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	40 e2       	ldi	r20, 0x20	; 32
    17b4:	51 e4       	ldi	r21, 0x41	; 65
    17b6:	68 85       	ldd	r22, Y+8	; 0x08
    17b8:	79 85       	ldd	r23, Y+9	; 0x09
    17ba:	8a 85       	ldd	r24, Y+10	; 0x0a
    17bc:	9b 85       	ldd	r25, Y+11	; 0x0b
    17be:	57 d7       	rcall	.+3758   	; 0x266e <__mulsf3>
    17c0:	dc 01       	movw	r26, r24
    17c2:	cb 01       	movw	r24, r22
    17c4:	8e 01       	movw	r16, r28
    17c6:	0c 5b       	subi	r16, 0xBC	; 188
    17c8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ca:	bc 01       	movw	r22, r24
    17cc:	cd 01       	movw	r24, r26
    17ce:	d2 d6       	rcall	.+3492   	; 0x2574 <__fixunssfsi>
    17d0:	dc 01       	movw	r26, r24
    17d2:	cb 01       	movw	r24, r22
    17d4:	f8 01       	movw	r30, r16
    17d6:	91 83       	std	Z+1, r25	; 0x01
    17d8:	80 83       	st	Z, r24
    17da:	24 c0       	rjmp	.+72     	; 0x1824 <gameTask+0x58a>
    17dc:	ce 01       	movw	r24, r28
    17de:	8a 5b       	subi	r24, 0xBA	; 186
    17e0:	9f 4f       	sbci	r25, 0xFF	; 255
    17e2:	29 e1       	ldi	r18, 0x19	; 25
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	fc 01       	movw	r30, r24
    17e8:	31 83       	std	Z+1, r19	; 0x01
    17ea:	20 83       	st	Z, r18
    17ec:	ce 01       	movw	r24, r28
    17ee:	8a 5b       	subi	r24, 0xBA	; 186
    17f0:	9f 4f       	sbci	r25, 0xFF	; 255
    17f2:	fc 01       	movw	r30, r24
    17f4:	80 81       	ld	r24, Z
    17f6:	91 81       	ldd	r25, Z+1	; 0x01
    17f8:	01 97       	sbiw	r24, 0x01	; 1
    17fa:	f1 f7       	brne	.-4      	; 0x17f8 <gameTask+0x55e>
    17fc:	9e 01       	movw	r18, r28
    17fe:	2a 5b       	subi	r18, 0xBA	; 186
    1800:	3f 4f       	sbci	r19, 0xFF	; 255
    1802:	f9 01       	movw	r30, r18
    1804:	91 83       	std	Z+1, r25	; 0x01
    1806:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1808:	ce 01       	movw	r24, r28
    180a:	8c 5b       	subi	r24, 0xBC	; 188
    180c:	9f 4f       	sbci	r25, 0xFF	; 255
    180e:	9e 01       	movw	r18, r28
    1810:	2c 5b       	subi	r18, 0xBC	; 188
    1812:	3f 4f       	sbci	r19, 0xFF	; 255
    1814:	f9 01       	movw	r30, r18
    1816:	20 81       	ld	r18, Z
    1818:	31 81       	ldd	r19, Z+1	; 0x01
    181a:	21 50       	subi	r18, 0x01	; 1
    181c:	31 09       	sbc	r19, r1
    181e:	fc 01       	movw	r30, r24
    1820:	31 83       	std	Z+1, r19	; 0x01
    1822:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1824:	ce 01       	movw	r24, r28
    1826:	8c 5b       	subi	r24, 0xBC	; 188
    1828:	9f 4f       	sbci	r25, 0xFF	; 255
    182a:	fc 01       	movw	r30, r24
    182c:	80 81       	ld	r24, Z
    182e:	91 81       	ldd	r25, Z+1	; 0x01
    1830:	89 2b       	or	r24, r25
    1832:	a1 f6       	brne	.-88     	; 0x17dc <gameTask+0x542>
    1834:	0b c3       	rjmp	.+1558   	; 0x1e4c <gameTask+0xbb2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1836:	8e 01       	movw	r16, r28
    1838:	0c 5b       	subi	r16, 0xBC	; 188
    183a:	1f 4f       	sbci	r17, 0xFF	; 255
    183c:	ce 01       	movw	r24, r28
    183e:	80 5c       	subi	r24, 0xC0	; 192
    1840:	9f 4f       	sbci	r25, 0xFF	; 255
    1842:	fc 01       	movw	r30, r24
    1844:	60 81       	ld	r22, Z
    1846:	71 81       	ldd	r23, Z+1	; 0x01
    1848:	82 81       	ldd	r24, Z+2	; 0x02
    184a:	93 81       	ldd	r25, Z+3	; 0x03
    184c:	93 d6       	rcall	.+3366   	; 0x2574 <__fixunssfsi>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	f8 01       	movw	r30, r16
    1854:	91 83       	std	Z+1, r25	; 0x01
    1856:	80 83       	st	Z, r24
    1858:	ce 01       	movw	r24, r28
    185a:	88 5b       	subi	r24, 0xB8	; 184
    185c:	9f 4f       	sbci	r25, 0xFF	; 255
    185e:	9e 01       	movw	r18, r28
    1860:	2c 5b       	subi	r18, 0xBC	; 188
    1862:	3f 4f       	sbci	r19, 0xFF	; 255
    1864:	f9 01       	movw	r30, r18
    1866:	20 81       	ld	r18, Z
    1868:	31 81       	ldd	r19, Z+1	; 0x01
    186a:	fc 01       	movw	r30, r24
    186c:	31 83       	std	Z+1, r19	; 0x01
    186e:	20 83       	st	Z, r18
    1870:	ce 01       	movw	r24, r28
    1872:	88 5b       	subi	r24, 0xB8	; 184
    1874:	9f 4f       	sbci	r25, 0xFF	; 255
    1876:	fc 01       	movw	r30, r24
    1878:	80 81       	ld	r24, Z
    187a:	91 81       	ldd	r25, Z+1	; 0x01
    187c:	01 97       	sbiw	r24, 0x01	; 1
    187e:	f1 f7       	brne	.-4      	; 0x187c <gameTask+0x5e2>
    1880:	9e 01       	movw	r18, r28
    1882:	28 5b       	subi	r18, 0xB8	; 184
    1884:	3f 4f       	sbci	r19, 0xFF	; 255
    1886:	f9 01       	movw	r30, r18
    1888:	91 83       	std	Z+1, r25	; 0x01
    188a:	80 83       	st	Z, r24
    188c:	df c2       	rjmp	.+1470   	; 0x1e4c <gameTask+0xbb2>
			delay_ms(3750);
		}else if (check == 2){
    188e:	8c 81       	ldd	r24, Y+4	; 0x04
    1890:	9d 81       	ldd	r25, Y+5	; 0x05
    1892:	02 97       	sbiw	r24, 0x02	; 2
    1894:	09 f0       	breq	.+2      	; 0x1898 <gameTask+0x5fe>
    1896:	6b c1       	rjmp	.+726    	; 0x1b6e <gameTask+0x8d4>
			LCD_Cursor(27);
    1898:	8b e1       	ldi	r24, 0x1B	; 27
    189a:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	90 e4       	ldi	r25, 0x40	; 64
    18a2:	ac e9       	ldi	r26, 0x9C	; 156
    18a4:	b5 e4       	ldi	r27, 0x45	; 69
    18a6:	8c 8f       	std	Y+28, r24	; 0x1c
    18a8:	9d 8f       	std	Y+29, r25	; 0x1d
    18aa:	ae 8f       	std	Y+30, r26	; 0x1e
    18ac:	bf 8f       	std	Y+31, r27	; 0x1f

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    18ae:	8e 01       	movw	r16, r28
    18b0:	02 5a       	subi	r16, 0xA2	; 162
    18b2:	1f 4f       	sbci	r17, 0xFF	; 255
    18b4:	20 e0       	ldi	r18, 0x00	; 0
    18b6:	30 e0       	ldi	r19, 0x00	; 0
    18b8:	4a e7       	ldi	r20, 0x7A	; 122
    18ba:	53 e4       	ldi	r21, 0x43	; 67
    18bc:	6c 8d       	ldd	r22, Y+28	; 0x1c
    18be:	7d 8d       	ldd	r23, Y+29	; 0x1d
    18c0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    18c2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    18c4:	d4 d6       	rcall	.+3496   	; 0x266e <__mulsf3>
    18c6:	dc 01       	movw	r26, r24
    18c8:	cb 01       	movw	r24, r22
    18ca:	f8 01       	movw	r30, r16
    18cc:	80 83       	st	Z, r24
    18ce:	91 83       	std	Z+1, r25	; 0x01
    18d0:	a2 83       	std	Z+2, r26	; 0x02
    18d2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    18d4:	ce 01       	movw	r24, r28
    18d6:	82 5a       	subi	r24, 0xA2	; 162
    18d8:	9f 4f       	sbci	r25, 0xFF	; 255
    18da:	20 e0       	ldi	r18, 0x00	; 0
    18dc:	30 e0       	ldi	r19, 0x00	; 0
    18de:	40 e8       	ldi	r20, 0x80	; 128
    18e0:	5f e3       	ldi	r21, 0x3F	; 63
    18e2:	fc 01       	movw	r30, r24
    18e4:	60 81       	ld	r22, Z
    18e6:	71 81       	ldd	r23, Z+1	; 0x01
    18e8:	82 81       	ldd	r24, Z+2	; 0x02
    18ea:	93 81       	ldd	r25, Z+3	; 0x03
    18ec:	3f d6       	rcall	.+3198   	; 0x256c <__cmpsf2>
    18ee:	88 23       	and	r24, r24
    18f0:	4c f4       	brge	.+18     	; 0x1904 <gameTask+0x66a>
		__ticks = 1;
    18f2:	ce 01       	movw	r24, r28
    18f4:	8e 59       	subi	r24, 0x9E	; 158
    18f6:	9f 4f       	sbci	r25, 0xFF	; 255
    18f8:	21 e0       	ldi	r18, 0x01	; 1
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	fc 01       	movw	r30, r24
    18fe:	31 83       	std	Z+1, r19	; 0x01
    1900:	20 83       	st	Z, r18
	else if (__tmp > 65535)
    1902:	65 c0       	rjmp	.+202    	; 0x19ce <gameTask+0x734>
    1904:	ce 01       	movw	r24, r28
    1906:	82 5a       	subi	r24, 0xA2	; 162
    1908:	9f 4f       	sbci	r25, 0xFF	; 255
    190a:	20 e0       	ldi	r18, 0x00	; 0
    190c:	3f ef       	ldi	r19, 0xFF	; 255
    190e:	4f e7       	ldi	r20, 0x7F	; 127
    1910:	57 e4       	ldi	r21, 0x47	; 71
    1912:	fc 01       	movw	r30, r24
    1914:	60 81       	ld	r22, Z
    1916:	71 81       	ldd	r23, Z+1	; 0x01
    1918:	82 81       	ldd	r24, Z+2	; 0x02
    191a:	93 81       	ldd	r25, Z+3	; 0x03
    191c:	a4 d6       	rcall	.+3400   	; 0x2666 <__gesf2>
    191e:	18 16       	cp	r1, r24
    1920:	0c f0       	brlt	.+2      	; 0x1924 <gameTask+0x68a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1922:	44 c0       	rjmp	.+136    	; 0x19ac <gameTask+0x712>
    1924:	20 e0       	ldi	r18, 0x00	; 0
    1926:	30 e0       	ldi	r19, 0x00	; 0
    1928:	40 e2       	ldi	r20, 0x20	; 32
    192a:	51 e4       	ldi	r21, 0x41	; 65
    192c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    192e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1930:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1932:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1934:	9c d6       	rcall	.+3384   	; 0x266e <__mulsf3>
    1936:	dc 01       	movw	r26, r24
    1938:	cb 01       	movw	r24, r22
    193a:	8e 01       	movw	r16, r28
    193c:	0e 59       	subi	r16, 0x9E	; 158
    193e:	1f 4f       	sbci	r17, 0xFF	; 255
    1940:	bc 01       	movw	r22, r24
    1942:	cd 01       	movw	r24, r26
    1944:	17 d6       	rcall	.+3118   	; 0x2574 <__fixunssfsi>
    1946:	dc 01       	movw	r26, r24
    1948:	cb 01       	movw	r24, r22
    194a:	f8 01       	movw	r30, r16
    194c:	91 83       	std	Z+1, r25	; 0x01
    194e:	80 83       	st	Z, r24
    1950:	24 c0       	rjmp	.+72     	; 0x199a <gameTask+0x700>
    1952:	ce 01       	movw	r24, r28
    1954:	8c 59       	subi	r24, 0x9C	; 156
    1956:	9f 4f       	sbci	r25, 0xFF	; 255
    1958:	29 e1       	ldi	r18, 0x19	; 25
    195a:	30 e0       	ldi	r19, 0x00	; 0
    195c:	fc 01       	movw	r30, r24
    195e:	31 83       	std	Z+1, r19	; 0x01
    1960:	20 83       	st	Z, r18
    1962:	ce 01       	movw	r24, r28
    1964:	8c 59       	subi	r24, 0x9C	; 156
    1966:	9f 4f       	sbci	r25, 0xFF	; 255
    1968:	fc 01       	movw	r30, r24
    196a:	80 81       	ld	r24, Z
    196c:	91 81       	ldd	r25, Z+1	; 0x01
    196e:	01 97       	sbiw	r24, 0x01	; 1
    1970:	f1 f7       	brne	.-4      	; 0x196e <gameTask+0x6d4>
    1972:	9e 01       	movw	r18, r28
    1974:	2c 59       	subi	r18, 0x9C	; 156
    1976:	3f 4f       	sbci	r19, 0xFF	; 255
    1978:	f9 01       	movw	r30, r18
    197a:	91 83       	std	Z+1, r25	; 0x01
    197c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    197e:	ce 01       	movw	r24, r28
    1980:	8e 59       	subi	r24, 0x9E	; 158
    1982:	9f 4f       	sbci	r25, 0xFF	; 255
    1984:	9e 01       	movw	r18, r28
    1986:	2e 59       	subi	r18, 0x9E	; 158
    1988:	3f 4f       	sbci	r19, 0xFF	; 255
    198a:	f9 01       	movw	r30, r18
    198c:	20 81       	ld	r18, Z
    198e:	31 81       	ldd	r19, Z+1	; 0x01
    1990:	21 50       	subi	r18, 0x01	; 1
    1992:	31 09       	sbc	r19, r1
    1994:	fc 01       	movw	r30, r24
    1996:	31 83       	std	Z+1, r19	; 0x01
    1998:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    199a:	ce 01       	movw	r24, r28
    199c:	8e 59       	subi	r24, 0x9E	; 158
    199e:	9f 4f       	sbci	r25, 0xFF	; 255
    19a0:	fc 01       	movw	r30, r24
    19a2:	80 81       	ld	r24, Z
    19a4:	91 81       	ldd	r25, Z+1	; 0x01
    19a6:	89 2b       	or	r24, r25
    19a8:	a1 f6       	brne	.-88     	; 0x1952 <gameTask+0x6b8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19aa:	2b c0       	rjmp	.+86     	; 0x1a02 <gameTask+0x768>
    19ac:	8e 01       	movw	r16, r28
    19ae:	0e 59       	subi	r16, 0x9E	; 158
    19b0:	1f 4f       	sbci	r17, 0xFF	; 255
    19b2:	ce 01       	movw	r24, r28
    19b4:	82 5a       	subi	r24, 0xA2	; 162
    19b6:	9f 4f       	sbci	r25, 0xFF	; 255
    19b8:	fc 01       	movw	r30, r24
    19ba:	60 81       	ld	r22, Z
    19bc:	71 81       	ldd	r23, Z+1	; 0x01
    19be:	82 81       	ldd	r24, Z+2	; 0x02
    19c0:	93 81       	ldd	r25, Z+3	; 0x03
    19c2:	d8 d5       	rcall	.+2992   	; 0x2574 <__fixunssfsi>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	f8 01       	movw	r30, r16
    19ca:	91 83       	std	Z+1, r25	; 0x01
    19cc:	80 83       	st	Z, r24
    19ce:	ce 01       	movw	r24, r28
    19d0:	8a 59       	subi	r24, 0x9A	; 154
    19d2:	9f 4f       	sbci	r25, 0xFF	; 255
    19d4:	9e 01       	movw	r18, r28
    19d6:	2e 59       	subi	r18, 0x9E	; 158
    19d8:	3f 4f       	sbci	r19, 0xFF	; 255
    19da:	f9 01       	movw	r30, r18
    19dc:	20 81       	ld	r18, Z
    19de:	31 81       	ldd	r19, Z+1	; 0x01
    19e0:	fc 01       	movw	r30, r24
    19e2:	31 83       	std	Z+1, r19	; 0x01
    19e4:	20 83       	st	Z, r18
    19e6:	ce 01       	movw	r24, r28
    19e8:	8a 59       	subi	r24, 0x9A	; 154
    19ea:	9f 4f       	sbci	r25, 0xFF	; 255
    19ec:	fc 01       	movw	r30, r24
    19ee:	80 81       	ld	r24, Z
    19f0:	91 81       	ldd	r25, Z+1	; 0x01
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	f1 f7       	brne	.-4      	; 0x19f2 <gameTask+0x758>
    19f6:	9e 01       	movw	r18, r28
    19f8:	2a 59       	subi	r18, 0x9A	; 154
    19fa:	3f 4f       	sbci	r19, 0xFF	; 255
    19fc:	f9 01       	movw	r30, r18
    19fe:	91 83       	std	Z+1, r25	; 0x01
    1a00:	80 83       	st	Z, r24
			delay_ms(5000);
			LCD_WriteData(note);
    1a02:	89 81       	ldd	r24, Y+1	; 0x01
    1a04:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
    1a08:	80 e0       	ldi	r24, 0x00	; 0
    1a0a:	90 e6       	ldi	r25, 0x60	; 96
    1a0c:	aa e6       	ldi	r26, 0x6A	; 106
    1a0e:	b5 e4       	ldi	r27, 0x45	; 69
    1a10:	88 8b       	std	Y+16, r24	; 0x10
    1a12:	99 8b       	std	Y+17, r25	; 0x11
    1a14:	aa 8b       	std	Y+18, r26	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1a16:	bb 8b       	std	Y+19, r27	; 0x13
    1a18:	8e 01       	movw	r16, r28
    1a1a:	0c 5a       	subi	r16, 0xAC	; 172
    1a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a1e:	20 e0       	ldi	r18, 0x00	; 0
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	4a e7       	ldi	r20, 0x7A	; 122
    1a24:	53 e4       	ldi	r21, 0x43	; 67
    1a26:	68 89       	ldd	r22, Y+16	; 0x10
    1a28:	79 89       	ldd	r23, Y+17	; 0x11
    1a2a:	8a 89       	ldd	r24, Y+18	; 0x12
    1a2c:	9b 89       	ldd	r25, Y+19	; 0x13
    1a2e:	1f d6       	rcall	.+3134   	; 0x266e <__mulsf3>
    1a30:	dc 01       	movw	r26, r24
    1a32:	cb 01       	movw	r24, r22
    1a34:	f8 01       	movw	r30, r16
    1a36:	80 83       	st	Z, r24
    1a38:	91 83       	std	Z+1, r25	; 0x01
    1a3a:	a2 83       	std	Z+2, r26	; 0x02
	if (__tmp < 1.0)
    1a3c:	b3 83       	std	Z+3, r27	; 0x03
    1a3e:	ce 01       	movw	r24, r28
    1a40:	8c 5a       	subi	r24, 0xAC	; 172
    1a42:	9f 4f       	sbci	r25, 0xFF	; 255
    1a44:	20 e0       	ldi	r18, 0x00	; 0
    1a46:	30 e0       	ldi	r19, 0x00	; 0
    1a48:	40 e8       	ldi	r20, 0x80	; 128
    1a4a:	5f e3       	ldi	r21, 0x3F	; 63
    1a4c:	fc 01       	movw	r30, r24
    1a4e:	60 81       	ld	r22, Z
    1a50:	71 81       	ldd	r23, Z+1	; 0x01
    1a52:	82 81       	ldd	r24, Z+2	; 0x02
    1a54:	93 81       	ldd	r25, Z+3	; 0x03
    1a56:	8a d5       	rcall	.+2836   	; 0x256c <__cmpsf2>
    1a58:	88 23       	and	r24, r24
    1a5a:	4c f4       	brge	.+18     	; 0x1a6e <gameTask+0x7d4>
		__ticks = 1;
    1a5c:	ce 01       	movw	r24, r28
    1a5e:	88 5a       	subi	r24, 0xA8	; 168
    1a60:	9f 4f       	sbci	r25, 0xFF	; 255
    1a62:	21 e0       	ldi	r18, 0x01	; 1
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	fc 01       	movw	r30, r24
    1a68:	31 83       	std	Z+1, r19	; 0x01
    1a6a:	20 83       	st	Z, r18
	else if (__tmp > 65535)
    1a6c:	65 c0       	rjmp	.+202    	; 0x1b38 <gameTask+0x89e>
    1a6e:	ce 01       	movw	r24, r28
    1a70:	8c 5a       	subi	r24, 0xAC	; 172
    1a72:	9f 4f       	sbci	r25, 0xFF	; 255
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	3f ef       	ldi	r19, 0xFF	; 255
    1a78:	4f e7       	ldi	r20, 0x7F	; 127
    1a7a:	57 e4       	ldi	r21, 0x47	; 71
    1a7c:	fc 01       	movw	r30, r24
    1a7e:	60 81       	ld	r22, Z
    1a80:	71 81       	ldd	r23, Z+1	; 0x01
    1a82:	82 81       	ldd	r24, Z+2	; 0x02
    1a84:	93 81       	ldd	r25, Z+3	; 0x03
    1a86:	ef d5       	rcall	.+3038   	; 0x2666 <__gesf2>
    1a88:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a8a:	0c f0       	brlt	.+2      	; 0x1a8e <gameTask+0x7f4>
    1a8c:	44 c0       	rjmp	.+136    	; 0x1b16 <gameTask+0x87c>
    1a8e:	20 e0       	ldi	r18, 0x00	; 0
    1a90:	30 e0       	ldi	r19, 0x00	; 0
    1a92:	40 e2       	ldi	r20, 0x20	; 32
    1a94:	51 e4       	ldi	r21, 0x41	; 65
    1a96:	68 89       	ldd	r22, Y+16	; 0x10
    1a98:	79 89       	ldd	r23, Y+17	; 0x11
    1a9a:	8a 89       	ldd	r24, Y+18	; 0x12
    1a9c:	9b 89       	ldd	r25, Y+19	; 0x13
    1a9e:	e7 d5       	rcall	.+3022   	; 0x266e <__mulsf3>
    1aa0:	dc 01       	movw	r26, r24
    1aa2:	cb 01       	movw	r24, r22
    1aa4:	8e 01       	movw	r16, r28
    1aa6:	08 5a       	subi	r16, 0xA8	; 168
    1aa8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aaa:	bc 01       	movw	r22, r24
    1aac:	cd 01       	movw	r24, r26
    1aae:	62 d5       	rcall	.+2756   	; 0x2574 <__fixunssfsi>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	cb 01       	movw	r24, r22
    1ab4:	f8 01       	movw	r30, r16
    1ab6:	91 83       	std	Z+1, r25	; 0x01
    1ab8:	80 83       	st	Z, r24
    1aba:	24 c0       	rjmp	.+72     	; 0x1b04 <gameTask+0x86a>
    1abc:	ce 01       	movw	r24, r28
    1abe:	86 5a       	subi	r24, 0xA6	; 166
    1ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac2:	29 e1       	ldi	r18, 0x19	; 25
    1ac4:	30 e0       	ldi	r19, 0x00	; 0
    1ac6:	fc 01       	movw	r30, r24
    1ac8:	31 83       	std	Z+1, r19	; 0x01
    1aca:	20 83       	st	Z, r18
    1acc:	ce 01       	movw	r24, r28
    1ace:	86 5a       	subi	r24, 0xA6	; 166
    1ad0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad2:	fc 01       	movw	r30, r24
    1ad4:	80 81       	ld	r24, Z
    1ad6:	91 81       	ldd	r25, Z+1	; 0x01
    1ad8:	01 97       	sbiw	r24, 0x01	; 1
    1ada:	f1 f7       	brne	.-4      	; 0x1ad8 <gameTask+0x83e>
    1adc:	9e 01       	movw	r18, r28
    1ade:	26 5a       	subi	r18, 0xA6	; 166
    1ae0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ae2:	f9 01       	movw	r30, r18
    1ae4:	91 83       	std	Z+1, r25	; 0x01
    1ae6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ae8:	ce 01       	movw	r24, r28
    1aea:	88 5a       	subi	r24, 0xA8	; 168
    1aec:	9f 4f       	sbci	r25, 0xFF	; 255
    1aee:	9e 01       	movw	r18, r28
    1af0:	28 5a       	subi	r18, 0xA8	; 168
    1af2:	3f 4f       	sbci	r19, 0xFF	; 255
    1af4:	f9 01       	movw	r30, r18
    1af6:	20 81       	ld	r18, Z
    1af8:	31 81       	ldd	r19, Z+1	; 0x01
    1afa:	21 50       	subi	r18, 0x01	; 1
    1afc:	31 09       	sbc	r19, r1
    1afe:	fc 01       	movw	r30, r24
    1b00:	31 83       	std	Z+1, r19	; 0x01
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b02:	20 83       	st	Z, r18
    1b04:	ce 01       	movw	r24, r28
    1b06:	88 5a       	subi	r24, 0xA8	; 168
    1b08:	9f 4f       	sbci	r25, 0xFF	; 255
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	80 81       	ld	r24, Z
    1b0e:	91 81       	ldd	r25, Z+1	; 0x01
    1b10:	89 2b       	or	r24, r25
    1b12:	a1 f6       	brne	.-88     	; 0x1abc <gameTask+0x822>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b14:	9b c1       	rjmp	.+822    	; 0x1e4c <gameTask+0xbb2>
    1b16:	8e 01       	movw	r16, r28
    1b18:	08 5a       	subi	r16, 0xA8	; 168
    1b1a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b1c:	ce 01       	movw	r24, r28
    1b1e:	8c 5a       	subi	r24, 0xAC	; 172
    1b20:	9f 4f       	sbci	r25, 0xFF	; 255
    1b22:	fc 01       	movw	r30, r24
    1b24:	60 81       	ld	r22, Z
    1b26:	71 81       	ldd	r23, Z+1	; 0x01
    1b28:	82 81       	ldd	r24, Z+2	; 0x02
    1b2a:	93 81       	ldd	r25, Z+3	; 0x03
    1b2c:	23 d5       	rcall	.+2630   	; 0x2574 <__fixunssfsi>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	f8 01       	movw	r30, r16
    1b34:	91 83       	std	Z+1, r25	; 0x01
    1b36:	80 83       	st	Z, r24
    1b38:	ce 01       	movw	r24, r28
    1b3a:	84 5a       	subi	r24, 0xA4	; 164
    1b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b3e:	9e 01       	movw	r18, r28
    1b40:	28 5a       	subi	r18, 0xA8	; 168
    1b42:	3f 4f       	sbci	r19, 0xFF	; 255
    1b44:	f9 01       	movw	r30, r18
    1b46:	20 81       	ld	r18, Z
    1b48:	31 81       	ldd	r19, Z+1	; 0x01
    1b4a:	fc 01       	movw	r30, r24
    1b4c:	31 83       	std	Z+1, r19	; 0x01
    1b4e:	20 83       	st	Z, r18
    1b50:	ce 01       	movw	r24, r28
    1b52:	84 5a       	subi	r24, 0xA4	; 164
    1b54:	9f 4f       	sbci	r25, 0xFF	; 255
    1b56:	fc 01       	movw	r30, r24
    1b58:	80 81       	ld	r24, Z
    1b5a:	91 81       	ldd	r25, Z+1	; 0x01
    1b5c:	01 97       	sbiw	r24, 0x01	; 1
    1b5e:	f1 f7       	brne	.-4      	; 0x1b5c <gameTask+0x8c2>
    1b60:	9e 01       	movw	r18, r28
    1b62:	24 5a       	subi	r18, 0xA4	; 164
    1b64:	3f 4f       	sbci	r19, 0xFF	; 255
    1b66:	f9 01       	movw	r30, r18
    1b68:	91 83       	std	Z+1, r25	; 0x01
    1b6a:	80 83       	st	Z, r24
    1b6c:	6f c1       	rjmp	.+734    	; 0x1e4c <gameTask+0xbb2>
			delay_ms(3750);
		}else if (check == 3){
    1b6e:	8c 81       	ldd	r24, Y+4	; 0x04
    1b70:	9d 81       	ldd	r25, Y+5	; 0x05
    1b72:	03 97       	sbiw	r24, 0x03	; 3
    1b74:	09 f0       	breq	.+2      	; 0x1b78 <gameTask+0x8de>
			LCD_Cursor(32);
    1b76:	6a c1       	rjmp	.+724    	; 0x1e4c <gameTask+0xbb2>
    1b78:	80 e2       	ldi	r24, 0x20	; 32
    1b7a:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	90 e4       	ldi	r25, 0x40	; 64
    1b82:	ac e9       	ldi	r26, 0x9C	; 156
    1b84:	b5 e4       	ldi	r27, 0x45	; 69
    1b86:	8c a3       	std	Y+36, r24	; 0x24
    1b88:	9d a3       	std	Y+37, r25	; 0x25
    1b8a:	ae a3       	std	Y+38, r26	; 0x26

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b8c:	bf a3       	std	Y+39, r27	; 0x27
    1b8e:	8e 01       	movw	r16, r28
    1b90:	0e 58       	subi	r16, 0x8E	; 142
    1b92:	1f 4f       	sbci	r17, 0xFF	; 255
    1b94:	20 e0       	ldi	r18, 0x00	; 0
    1b96:	30 e0       	ldi	r19, 0x00	; 0
    1b98:	4a e7       	ldi	r20, 0x7A	; 122
    1b9a:	53 e4       	ldi	r21, 0x43	; 67
    1b9c:	6c a1       	ldd	r22, Y+36	; 0x24
    1b9e:	7d a1       	ldd	r23, Y+37	; 0x25
    1ba0:	8e a1       	ldd	r24, Y+38	; 0x26
    1ba2:	9f a1       	ldd	r25, Y+39	; 0x27
    1ba4:	64 d5       	rcall	.+2760   	; 0x266e <__mulsf3>
    1ba6:	dc 01       	movw	r26, r24
    1ba8:	cb 01       	movw	r24, r22
    1baa:	f8 01       	movw	r30, r16
    1bac:	80 83       	st	Z, r24
    1bae:	91 83       	std	Z+1, r25	; 0x01
    1bb0:	a2 83       	std	Z+2, r26	; 0x02
	if (__tmp < 1.0)
    1bb2:	b3 83       	std	Z+3, r27	; 0x03
    1bb4:	ce 01       	movw	r24, r28
    1bb6:	8e 58       	subi	r24, 0x8E	; 142
    1bb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bba:	20 e0       	ldi	r18, 0x00	; 0
    1bbc:	30 e0       	ldi	r19, 0x00	; 0
    1bbe:	40 e8       	ldi	r20, 0x80	; 128
    1bc0:	5f e3       	ldi	r21, 0x3F	; 63
    1bc2:	fc 01       	movw	r30, r24
    1bc4:	60 81       	ld	r22, Z
    1bc6:	71 81       	ldd	r23, Z+1	; 0x01
    1bc8:	82 81       	ldd	r24, Z+2	; 0x02
    1bca:	93 81       	ldd	r25, Z+3	; 0x03
    1bcc:	cf d4       	rcall	.+2462   	; 0x256c <__cmpsf2>
    1bce:	88 23       	and	r24, r24
		__ticks = 1;
    1bd0:	4c f4       	brge	.+18     	; 0x1be4 <gameTask+0x94a>
    1bd2:	ce 01       	movw	r24, r28
    1bd4:	8a 58       	subi	r24, 0x8A	; 138
    1bd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd8:	21 e0       	ldi	r18, 0x01	; 1
    1bda:	30 e0       	ldi	r19, 0x00	; 0
    1bdc:	fc 01       	movw	r30, r24
    1bde:	31 83       	std	Z+1, r19	; 0x01
	else if (__tmp > 65535)
    1be0:	20 83       	st	Z, r18
    1be2:	65 c0       	rjmp	.+202    	; 0x1cae <gameTask+0xa14>
    1be4:	ce 01       	movw	r24, r28
    1be6:	8e 58       	subi	r24, 0x8E	; 142
    1be8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bea:	20 e0       	ldi	r18, 0x00	; 0
    1bec:	3f ef       	ldi	r19, 0xFF	; 255
    1bee:	4f e7       	ldi	r20, 0x7F	; 127
    1bf0:	57 e4       	ldi	r21, 0x47	; 71
    1bf2:	fc 01       	movw	r30, r24
    1bf4:	60 81       	ld	r22, Z
    1bf6:	71 81       	ldd	r23, Z+1	; 0x01
    1bf8:	82 81       	ldd	r24, Z+2	; 0x02
    1bfa:	93 81       	ldd	r25, Z+3	; 0x03
    1bfc:	34 d5       	rcall	.+2664   	; 0x2666 <__gesf2>
    1bfe:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c00:	0c f0       	brlt	.+2      	; 0x1c04 <gameTask+0x96a>
    1c02:	44 c0       	rjmp	.+136    	; 0x1c8c <gameTask+0x9f2>
    1c04:	20 e0       	ldi	r18, 0x00	; 0
    1c06:	30 e0       	ldi	r19, 0x00	; 0
    1c08:	40 e2       	ldi	r20, 0x20	; 32
    1c0a:	51 e4       	ldi	r21, 0x41	; 65
    1c0c:	6c a1       	ldd	r22, Y+36	; 0x24
    1c0e:	7d a1       	ldd	r23, Y+37	; 0x25
    1c10:	8e a1       	ldd	r24, Y+38	; 0x26
    1c12:	9f a1       	ldd	r25, Y+39	; 0x27
    1c14:	2c d5       	rcall	.+2648   	; 0x266e <__mulsf3>
    1c16:	dc 01       	movw	r26, r24
    1c18:	cb 01       	movw	r24, r22
    1c1a:	8e 01       	movw	r16, r28
    1c1c:	0a 58       	subi	r16, 0x8A	; 138
    1c1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c20:	bc 01       	movw	r22, r24
    1c22:	cd 01       	movw	r24, r26
    1c24:	a7 d4       	rcall	.+2382   	; 0x2574 <__fixunssfsi>
    1c26:	dc 01       	movw	r26, r24
    1c28:	cb 01       	movw	r24, r22
    1c2a:	f8 01       	movw	r30, r16
    1c2c:	91 83       	std	Z+1, r25	; 0x01
    1c2e:	80 83       	st	Z, r24
    1c30:	24 c0       	rjmp	.+72     	; 0x1c7a <gameTask+0x9e0>
    1c32:	ce 01       	movw	r24, r28
    1c34:	88 58       	subi	r24, 0x88	; 136
    1c36:	9f 4f       	sbci	r25, 0xFF	; 255
    1c38:	29 e1       	ldi	r18, 0x19	; 25
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	fc 01       	movw	r30, r24
    1c3e:	31 83       	std	Z+1, r19	; 0x01
    1c40:	20 83       	st	Z, r18
    1c42:	ce 01       	movw	r24, r28
    1c44:	88 58       	subi	r24, 0x88	; 136
    1c46:	9f 4f       	sbci	r25, 0xFF	; 255
    1c48:	fc 01       	movw	r30, r24
    1c4a:	80 81       	ld	r24, Z
    1c4c:	91 81       	ldd	r25, Z+1	; 0x01
    1c4e:	01 97       	sbiw	r24, 0x01	; 1
    1c50:	f1 f7       	brne	.-4      	; 0x1c4e <gameTask+0x9b4>
    1c52:	9e 01       	movw	r18, r28
    1c54:	28 58       	subi	r18, 0x88	; 136
    1c56:	3f 4f       	sbci	r19, 0xFF	; 255
    1c58:	f9 01       	movw	r30, r18
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c5e:	ce 01       	movw	r24, r28
    1c60:	8a 58       	subi	r24, 0x8A	; 138
    1c62:	9f 4f       	sbci	r25, 0xFF	; 255
    1c64:	9e 01       	movw	r18, r28
    1c66:	2a 58       	subi	r18, 0x8A	; 138
    1c68:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6a:	f9 01       	movw	r30, r18
    1c6c:	20 81       	ld	r18, Z
    1c6e:	31 81       	ldd	r19, Z+1	; 0x01
    1c70:	21 50       	subi	r18, 0x01	; 1
    1c72:	31 09       	sbc	r19, r1
    1c74:	fc 01       	movw	r30, r24
    1c76:	31 83       	std	Z+1, r19	; 0x01
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c78:	20 83       	st	Z, r18
    1c7a:	ce 01       	movw	r24, r28
    1c7c:	8a 58       	subi	r24, 0x8A	; 138
    1c7e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c80:	fc 01       	movw	r30, r24
    1c82:	80 81       	ld	r24, Z
    1c84:	91 81       	ldd	r25, Z+1	; 0x01
    1c86:	89 2b       	or	r24, r25
    1c88:	a1 f6       	brne	.-88     	; 0x1c32 <gameTask+0x998>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c8a:	2b c0       	rjmp	.+86     	; 0x1ce2 <gameTask+0xa48>
    1c8c:	8e 01       	movw	r16, r28
    1c8e:	0a 58       	subi	r16, 0x8A	; 138
    1c90:	1f 4f       	sbci	r17, 0xFF	; 255
    1c92:	ce 01       	movw	r24, r28
    1c94:	8e 58       	subi	r24, 0x8E	; 142
    1c96:	9f 4f       	sbci	r25, 0xFF	; 255
    1c98:	fc 01       	movw	r30, r24
    1c9a:	60 81       	ld	r22, Z
    1c9c:	71 81       	ldd	r23, Z+1	; 0x01
    1c9e:	82 81       	ldd	r24, Z+2	; 0x02
    1ca0:	93 81       	ldd	r25, Z+3	; 0x03
    1ca2:	68 d4       	rcall	.+2256   	; 0x2574 <__fixunssfsi>
    1ca4:	dc 01       	movw	r26, r24
    1ca6:	cb 01       	movw	r24, r22
    1ca8:	f8 01       	movw	r30, r16
    1caa:	91 83       	std	Z+1, r25	; 0x01
    1cac:	80 83       	st	Z, r24
    1cae:	ce 01       	movw	r24, r28
    1cb0:	86 58       	subi	r24, 0x86	; 134
    1cb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1cb4:	9e 01       	movw	r18, r28
    1cb6:	2a 58       	subi	r18, 0x8A	; 138
    1cb8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cba:	f9 01       	movw	r30, r18
    1cbc:	20 81       	ld	r18, Z
    1cbe:	31 81       	ldd	r19, Z+1	; 0x01
    1cc0:	fc 01       	movw	r30, r24
    1cc2:	31 83       	std	Z+1, r19	; 0x01
    1cc4:	20 83       	st	Z, r18
    1cc6:	ce 01       	movw	r24, r28
    1cc8:	86 58       	subi	r24, 0x86	; 134
    1cca:	9f 4f       	sbci	r25, 0xFF	; 255
    1ccc:	fc 01       	movw	r30, r24
    1cce:	80 81       	ld	r24, Z
    1cd0:	91 81       	ldd	r25, Z+1	; 0x01
    1cd2:	01 97       	sbiw	r24, 0x01	; 1
    1cd4:	f1 f7       	brne	.-4      	; 0x1cd2 <gameTask+0xa38>
    1cd6:	9e 01       	movw	r18, r28
    1cd8:	26 58       	subi	r18, 0x86	; 134
    1cda:	3f 4f       	sbci	r19, 0xFF	; 255
    1cdc:	f9 01       	movw	r30, r18
    1cde:	91 83       	std	Z+1, r25	; 0x01
			delay_ms(5000);
			LCD_WriteData(note);
    1ce0:	80 83       	st	Z, r24
    1ce2:	89 81       	ldd	r24, Y+1	; 0x01
    1ce4:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
    1ce8:	80 e0       	ldi	r24, 0x00	; 0
    1cea:	90 e6       	ldi	r25, 0x60	; 96
    1cec:	aa e6       	ldi	r26, 0x6A	; 106
    1cee:	b5 e4       	ldi	r27, 0x45	; 69
    1cf0:	88 8f       	std	Y+24, r24	; 0x18
    1cf2:	99 8f       	std	Y+25, r25	; 0x19
    1cf4:	aa 8f       	std	Y+26, r26	; 0x1a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    1cf6:	bb 8f       	std	Y+27, r27	; 0x1b
    1cf8:	8e 01       	movw	r16, r28
    1cfa:	08 59       	subi	r16, 0x98	; 152
    1cfc:	1f 4f       	sbci	r17, 0xFF	; 255
    1cfe:	20 e0       	ldi	r18, 0x00	; 0
    1d00:	30 e0       	ldi	r19, 0x00	; 0
    1d02:	4a e7       	ldi	r20, 0x7A	; 122
    1d04:	53 e4       	ldi	r21, 0x43	; 67
    1d06:	68 8d       	ldd	r22, Y+24	; 0x18
    1d08:	79 8d       	ldd	r23, Y+25	; 0x19
    1d0a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1d0c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1d0e:	af d4       	rcall	.+2398   	; 0x266e <__mulsf3>
    1d10:	dc 01       	movw	r26, r24
    1d12:	cb 01       	movw	r24, r22
    1d14:	f8 01       	movw	r30, r16
    1d16:	80 83       	st	Z, r24
    1d18:	91 83       	std	Z+1, r25	; 0x01
    1d1a:	a2 83       	std	Z+2, r26	; 0x02
	if (__tmp < 1.0)
    1d1c:	b3 83       	std	Z+3, r27	; 0x03
    1d1e:	ce 01       	movw	r24, r28
    1d20:	88 59       	subi	r24, 0x98	; 152
    1d22:	9f 4f       	sbci	r25, 0xFF	; 255
    1d24:	20 e0       	ldi	r18, 0x00	; 0
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	40 e8       	ldi	r20, 0x80	; 128
    1d2a:	5f e3       	ldi	r21, 0x3F	; 63
    1d2c:	fc 01       	movw	r30, r24
    1d2e:	60 81       	ld	r22, Z
    1d30:	71 81       	ldd	r23, Z+1	; 0x01
    1d32:	82 81       	ldd	r24, Z+2	; 0x02
    1d34:	93 81       	ldd	r25, Z+3	; 0x03
    1d36:	1a d4       	rcall	.+2100   	; 0x256c <__cmpsf2>
    1d38:	88 23       	and	r24, r24
		__ticks = 1;
    1d3a:	4c f4       	brge	.+18     	; 0x1d4e <gameTask+0xab4>
    1d3c:	ce 01       	movw	r24, r28
    1d3e:	84 59       	subi	r24, 0x94	; 148
    1d40:	9f 4f       	sbci	r25, 0xFF	; 255
    1d42:	21 e0       	ldi	r18, 0x01	; 1
    1d44:	30 e0       	ldi	r19, 0x00	; 0
    1d46:	fc 01       	movw	r30, r24
    1d48:	31 83       	std	Z+1, r19	; 0x01
	else if (__tmp > 65535)
    1d4a:	20 83       	st	Z, r18
    1d4c:	65 c0       	rjmp	.+202    	; 0x1e18 <gameTask+0xb7e>
    1d4e:	ce 01       	movw	r24, r28
    1d50:	88 59       	subi	r24, 0x98	; 152
    1d52:	9f 4f       	sbci	r25, 0xFF	; 255
    1d54:	20 e0       	ldi	r18, 0x00	; 0
    1d56:	3f ef       	ldi	r19, 0xFF	; 255
    1d58:	4f e7       	ldi	r20, 0x7F	; 127
    1d5a:	57 e4       	ldi	r21, 0x47	; 71
    1d5c:	fc 01       	movw	r30, r24
    1d5e:	60 81       	ld	r22, Z
    1d60:	71 81       	ldd	r23, Z+1	; 0x01
    1d62:	82 81       	ldd	r24, Z+2	; 0x02
    1d64:	93 81       	ldd	r25, Z+3	; 0x03
    1d66:	7f d4       	rcall	.+2302   	; 0x2666 <__gesf2>
    1d68:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d6a:	0c f0       	brlt	.+2      	; 0x1d6e <gameTask+0xad4>
    1d6c:	44 c0       	rjmp	.+136    	; 0x1df6 <gameTask+0xb5c>
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	30 e0       	ldi	r19, 0x00	; 0
    1d72:	40 e2       	ldi	r20, 0x20	; 32
    1d74:	51 e4       	ldi	r21, 0x41	; 65
    1d76:	68 8d       	ldd	r22, Y+24	; 0x18
    1d78:	79 8d       	ldd	r23, Y+25	; 0x19
    1d7a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1d7c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1d7e:	77 d4       	rcall	.+2286   	; 0x266e <__mulsf3>
    1d80:	dc 01       	movw	r26, r24
    1d82:	cb 01       	movw	r24, r22
    1d84:	8e 01       	movw	r16, r28
    1d86:	04 59       	subi	r16, 0x94	; 148
    1d88:	1f 4f       	sbci	r17, 0xFF	; 255
    1d8a:	bc 01       	movw	r22, r24
    1d8c:	cd 01       	movw	r24, r26
    1d8e:	f2 d3       	rcall	.+2020   	; 0x2574 <__fixunssfsi>
    1d90:	dc 01       	movw	r26, r24
    1d92:	cb 01       	movw	r24, r22
    1d94:	f8 01       	movw	r30, r16
    1d96:	91 83       	std	Z+1, r25	; 0x01
    1d98:	80 83       	st	Z, r24
    1d9a:	24 c0       	rjmp	.+72     	; 0x1de4 <gameTask+0xb4a>
    1d9c:	ce 01       	movw	r24, r28
    1d9e:	82 59       	subi	r24, 0x92	; 146
    1da0:	9f 4f       	sbci	r25, 0xFF	; 255
    1da2:	29 e1       	ldi	r18, 0x19	; 25
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	fc 01       	movw	r30, r24
    1da8:	31 83       	std	Z+1, r19	; 0x01
    1daa:	20 83       	st	Z, r18
    1dac:	ce 01       	movw	r24, r28
    1dae:	82 59       	subi	r24, 0x92	; 146
    1db0:	9f 4f       	sbci	r25, 0xFF	; 255
    1db2:	fc 01       	movw	r30, r24
    1db4:	80 81       	ld	r24, Z
    1db6:	91 81       	ldd	r25, Z+1	; 0x01
    1db8:	01 97       	sbiw	r24, 0x01	; 1
    1dba:	f1 f7       	brne	.-4      	; 0x1db8 <gameTask+0xb1e>
    1dbc:	9e 01       	movw	r18, r28
    1dbe:	22 59       	subi	r18, 0x92	; 146
    1dc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc2:	f9 01       	movw	r30, r18
    1dc4:	91 83       	std	Z+1, r25	; 0x01
    1dc6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dc8:	ce 01       	movw	r24, r28
    1dca:	84 59       	subi	r24, 0x94	; 148
    1dcc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dce:	9e 01       	movw	r18, r28
    1dd0:	24 59       	subi	r18, 0x94	; 148
    1dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd4:	f9 01       	movw	r30, r18
    1dd6:	20 81       	ld	r18, Z
    1dd8:	31 81       	ldd	r19, Z+1	; 0x01
    1dda:	21 50       	subi	r18, 0x01	; 1
    1ddc:	31 09       	sbc	r19, r1
    1dde:	fc 01       	movw	r30, r24
    1de0:	31 83       	std	Z+1, r19	; 0x01
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1de2:	20 83       	st	Z, r18
    1de4:	ce 01       	movw	r24, r28
    1de6:	84 59       	subi	r24, 0x94	; 148
    1de8:	9f 4f       	sbci	r25, 0xFF	; 255
    1dea:	fc 01       	movw	r30, r24
    1dec:	80 81       	ld	r24, Z
    1dee:	91 81       	ldd	r25, Z+1	; 0x01
    1df0:	89 2b       	or	r24, r25
    1df2:	a1 f6       	brne	.-88     	; 0x1d9c <gameTask+0xb02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1df4:	2b c0       	rjmp	.+86     	; 0x1e4c <gameTask+0xbb2>
    1df6:	8e 01       	movw	r16, r28
    1df8:	04 59       	subi	r16, 0x94	; 148
    1dfa:	1f 4f       	sbci	r17, 0xFF	; 255
    1dfc:	ce 01       	movw	r24, r28
    1dfe:	88 59       	subi	r24, 0x98	; 152
    1e00:	9f 4f       	sbci	r25, 0xFF	; 255
    1e02:	fc 01       	movw	r30, r24
    1e04:	60 81       	ld	r22, Z
    1e06:	71 81       	ldd	r23, Z+1	; 0x01
    1e08:	82 81       	ldd	r24, Z+2	; 0x02
    1e0a:	93 81       	ldd	r25, Z+3	; 0x03
    1e0c:	b3 d3       	rcall	.+1894   	; 0x2574 <__fixunssfsi>
    1e0e:	dc 01       	movw	r26, r24
    1e10:	cb 01       	movw	r24, r22
    1e12:	f8 01       	movw	r30, r16
    1e14:	91 83       	std	Z+1, r25	; 0x01
    1e16:	80 83       	st	Z, r24
    1e18:	ce 01       	movw	r24, r28
    1e1a:	80 59       	subi	r24, 0x90	; 144
    1e1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e1e:	9e 01       	movw	r18, r28
    1e20:	24 59       	subi	r18, 0x94	; 148
    1e22:	3f 4f       	sbci	r19, 0xFF	; 255
    1e24:	f9 01       	movw	r30, r18
    1e26:	20 81       	ld	r18, Z
    1e28:	31 81       	ldd	r19, Z+1	; 0x01
    1e2a:	fc 01       	movw	r30, r24
    1e2c:	31 83       	std	Z+1, r19	; 0x01
    1e2e:	20 83       	st	Z, r18
    1e30:	ce 01       	movw	r24, r28
    1e32:	80 59       	subi	r24, 0x90	; 144
    1e34:	9f 4f       	sbci	r25, 0xFF	; 255
    1e36:	fc 01       	movw	r30, r24
    1e38:	80 81       	ld	r24, Z
    1e3a:	91 81       	ldd	r25, Z+1	; 0x01
    1e3c:	01 97       	sbiw	r24, 0x01	; 1
    1e3e:	f1 f7       	brne	.-4      	; 0x1e3c <gameTask+0xba2>
    1e40:	9e 01       	movw	r18, r28
    1e42:	20 59       	subi	r18, 0x90	; 144
    1e44:	3f 4f       	sbci	r19, 0xFF	; 255
    1e46:	f9 01       	movw	r30, r18
    1e48:	91 83       	std	Z+1, r25	; 0x01
// 			
// 		}
// 		LCD_Cursor(24);
// 		LCD_WriteData(' ');
// 		delay_ms(10000);
		if(point > maxscore){
    1e4a:	80 83       	st	Z, r24
    1e4c:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    1e50:	28 2f       	mov	r18, r24
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1e58:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1e5c:	82 17       	cp	r24, r18
    1e5e:	93 07       	cpc	r25, r19
    1e60:	08 f0       	brcs	.+2      	; 0x1e64 <gameTask+0xbca>
			maxscore = point;
    1e62:	82 c0       	rjmp	.+260    	; 0x1f68 <gameTask+0xcce>
    1e64:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    1e68:	88 2f       	mov	r24, r24
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <maxscore+0x1>
    1e70:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <maxscore>
			eeprom_update_byte((uint8_t*)1, (uint8_t)maxscore);
    1e74:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1e78:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1e7c:	68 2f       	mov	r22, r24
    1e7e:	81 e0       	ldi	r24, 0x01	; 1
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	53 d5       	rcall	.+2726   	; 0x292a <eeprom_update_byte>
		}
		break;
    1e84:	71 c0       	rjmp	.+226    	; 0x1f68 <gameTask+0xcce>
// 		case diff: //TBD: SWITCH SCREEN TO THREE DIFFICULTIES
// 		
// 		break;
		case score: //TBD: SWITCH SCREEN TO SHOW HIGHSCORE
		LCD_init();
    1e86:	0e 94 73 01 	call	0x2e6	; 0x2e6 <LCD_init>
		LCD_ClearScreen();
    1e8a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_ClearScreen>
		LCD_DisplayString(1, "High Score: ");
    1e8e:	61 ed       	ldi	r22, 0xD1	; 209
    1e90:	71 e0       	ldi	r23, 0x01	; 1
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	0e 94 e7 01 	call	0x3ce	; 0x3ce <LCD_DisplayString>
		LCD_Cursor(18);
    1e98:	82 e1       	ldi	r24, 0x12	; 18
    1e9a:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
		if(maxscore <= 9) {
    1e9e:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1ea2:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1ea6:	0a 97       	sbiw	r24, 0x0a	; 10
    1ea8:	40 f4       	brcc	.+16     	; 0x1eba <gameTask+0xc20>
			LCD_WriteData('0' + maxscore);
    1eaa:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1eae:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1eb2:	80 5d       	subi	r24, 0xD0	; 208
    1eb4:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
			LCD_Cursor(18);
			LCD_WriteData('2');

			LCD_WriteData('0' + (maxscore - 20));
		}
		break;
    1eb8:	59 c0       	rjmp	.+178    	; 0x1f6c <gameTask+0xcd2>
		LCD_DisplayString(1, "High Score: ");
		LCD_Cursor(18);
		if(maxscore <= 9) {
			LCD_WriteData('0' + maxscore);
		}
		else if((maxscore > 9) && (maxscore <= 19)) {
    1eba:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1ebe:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1ec2:	0a 97       	sbiw	r24, 0x0a	; 10
    1ec4:	a0 f0       	brcs	.+40     	; 0x1eee <gameTask+0xc54>
    1ec6:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1eca:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1ece:	44 97       	sbiw	r24, 0x14	; 20
    1ed0:	70 f4       	brcc	.+28     	; 0x1eee <gameTask+0xc54>
			LCD_Cursor(18);
    1ed2:	82 e1       	ldi	r24, 0x12	; 18
    1ed4:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
			LCD_WriteData('1');
    1ed8:	81 e3       	ldi	r24, 0x31	; 49
    1eda:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
			LCD_WriteData('0' + (maxscore - 10));
    1ede:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1ee2:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1ee6:	8a 5d       	subi	r24, 0xDA	; 218
    1ee8:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
			LCD_Cursor(18);
			LCD_WriteData('2');

			LCD_WriteData('0' + (maxscore - 20));
		}
		break;
    1eec:	3f c0       	rjmp	.+126    	; 0x1f6c <gameTask+0xcd2>
		else if((maxscore > 9) && (maxscore <= 19)) {
			LCD_Cursor(18);
			LCD_WriteData('1');
			LCD_WriteData('0' + (maxscore - 10));
		}
		else if((maxscore > 19) && (maxscore <= 29)) {
    1eee:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1ef2:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1ef6:	44 97       	sbiw	r24, 0x14	; 20
    1ef8:	c8 f1       	brcs	.+114    	; 0x1f6c <gameTask+0xcd2>
    1efa:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1efe:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1f02:	4e 97       	sbiw	r24, 0x1e	; 30
    1f04:	98 f5       	brcc	.+102    	; 0x1f6c <gameTask+0xcd2>
			LCD_Cursor(18);
    1f06:	82 e1       	ldi	r24, 0x12	; 18
    1f08:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
			LCD_WriteData('2');
    1f0c:	82 e3       	ldi	r24, 0x32	; 50
    1f0e:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>

			LCD_WriteData('0' + (maxscore - 20));
    1f12:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1f16:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1f1a:	84 5e       	subi	r24, 0xE4	; 228
    1f1c:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteData>
		}
		break;
		case gameOver:
		if(point > maxscore){
    1f20:	25 c0       	rjmp	.+74     	; 0x1f6c <gameTask+0xcd2>
    1f22:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    1f26:	28 2f       	mov	r18, r24
    1f28:	30 e0       	ldi	r19, 0x00	; 0
    1f2a:	80 91 f5 03 	lds	r24, 0x03F5	; 0x8003f5 <maxscore>
    1f2e:	90 91 f6 03 	lds	r25, 0x03F6	; 0x8003f6 <maxscore+0x1>
    1f32:	82 17       	cp	r24, r18
    1f34:	93 07       	cpc	r25, r19
			maxscore = point;
    1f36:	70 f4       	brcc	.+28     	; 0x1f54 <gameTask+0xcba>
    1f38:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    1f3c:	88 2f       	mov	r24, r24
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <maxscore+0x1>
    1f44:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <maxscore>
			eeprom_update_byte((uint8_t*)1, (uint8_t)point);
    1f48:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    1f4c:	68 2f       	mov	r22, r24
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	90 e0       	ldi	r25, 0x00	; 0
    1f52:	eb d4       	rcall	.+2518   	; 0x292a <eeprom_update_byte>
		}
		LCD_init();
    1f54:	0e 94 73 01 	call	0x2e6	; 0x2e6 <LCD_init>
		LCD_ClearScreen();
    1f58:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_ClearScreen>
		LCD_DisplayString(1,"Game Over!!");
    1f5c:	6e ed       	ldi	r22, 0xDE	; 222
    1f5e:	71 e0       	ldi	r23, 0x01	; 1
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	0e 94 e7 01 	call	0x3ce	; 0x3ce <LCD_DisplayString>
		break;
    1f66:	03 c0       	rjmp	.+6      	; 0x1f6e <gameTask+0xcd4>
// 		delay_ms(10000);
		if(point > maxscore){
			maxscore = point;
			eeprom_update_byte((uint8_t*)1, (uint8_t)maxscore);
		}
		break;
    1f68:	00 00       	nop
    1f6a:	01 c0       	rjmp	.+2      	; 0x1f6e <gameTask+0xcd4>
			LCD_Cursor(18);
			LCD_WriteData('2');

			LCD_WriteData('0' + (maxscore - 20));
		}
		break;
    1f6c:	00 00       	nop
		break;
		default: //DEFAULT IS ... menu?
		break;
	}
	
	switch(stateG){ //TRANSITIONS
    1f6e:	80 91 f3 03 	lds	r24, 0x03F3	; 0x8003f3 <stateG>
    1f72:	90 91 f4 03 	lds	r25, 0x03F4	; 0x8003f4 <stateG+0x1>
    1f76:	82 30       	cpi	r24, 0x02	; 2
    1f78:	91 05       	cpc	r25, r1
    1f7a:	e9 f1       	breq	.+122    	; 0x1ff6 <gameTask+0xd5c>
    1f7c:	83 30       	cpi	r24, 0x03	; 3
    1f7e:	91 05       	cpc	r25, r1
    1f80:	28 f4       	brcc	.+10     	; 0x1f8c <gameTask+0xcf2>
    1f82:	00 97       	sbiw	r24, 0x00	; 0
    1f84:	59 f0       	breq	.+22     	; 0x1f9c <gameTask+0xd02>
    1f86:	01 97       	sbiw	r24, 0x01	; 1
    1f88:	79 f1       	breq	.+94     	; 0x1fe8 <gameTask+0xd4e>
			stateG = gameOver;
		}
		delay_ms(100);
		break;
		default:
		break;
    1f8a:	28 c1       	rjmp	.+592    	; 0x21dc <gameTask+0xf42>
		break;
		default: //DEFAULT IS ... menu?
		break;
	}
	
	switch(stateG){ //TRANSITIONS
    1f8c:	83 30       	cpi	r24, 0x03	; 3
    1f8e:	91 05       	cpc	r25, r1
    1f90:	09 f4       	brne	.+2      	; 0x1f94 <gameTask+0xcfa>
    1f92:	4a c0       	rjmp	.+148    	; 0x2028 <gameTask+0xd8e>
    1f94:	04 97       	sbiw	r24, 0x04	; 4
    1f96:	09 f4       	brne	.+2      	; 0x1f9a <gameTask+0xd00>
    1f98:	53 c0       	rjmp	.+166    	; 0x2040 <gameTask+0xda6>
			stateG = gameOver;
		}
		delay_ms(100);
		break;
		default:
		break;
    1f9a:	20 c1       	rjmp	.+576    	; 0x21dc <gameTask+0xf42>
		break;
	}
	
	switch(stateG){ //TRANSITIONS
		case wait:
		if(press & 4096){
    1f9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1fa0:	88 27       	eor	r24, r24
    1fa2:	90 71       	andi	r25, 0x10	; 16
    1fa4:	89 2b       	or	r24, r25
    1fa6:	39 f0       	breq	.+14     	; 0x1fb6 <gameTask+0xd1c>
			stateG = contplay;
    1fa8:	82 e0       	ldi	r24, 0x02	; 2
    1faa:	90 e0       	ldi	r25, 0x00	; 0
    1fac:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <stateG+0x1>
    1fb0:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <stateG>
		} else if (press & 64){
			stateG = score;
		} else {
			stateG = wait;
		}
		break;
    1fb4:	0e c1       	rjmp	.+540    	; 0x21d2 <gameTask+0xf38>
	
	switch(stateG){ //TRANSITIONS
		case wait:
		if(press & 4096){
			stateG = contplay;
		} else if (press & 8192){
    1fb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb8:	9b 81       	ldd	r25, Y+3	; 0x03
    1fba:	88 27       	eor	r24, r24
    1fbc:	90 72       	andi	r25, 0x20	; 32
    1fbe:	89 2b       	or	r24, r25
    1fc0:	09 f0       	breq	.+2      	; 0x1fc4 <gameTask+0xd2a>
    1fc2:	07 c1       	rjmp	.+526    	; 0x21d2 <gameTask+0xf38>
			//stateG = diff;
		} else if (press & 64){
    1fc4:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc6:	9b 81       	ldd	r25, Y+3	; 0x03
    1fc8:	80 74       	andi	r24, 0x40	; 64
    1fca:	99 27       	eor	r25, r25
    1fcc:	89 2b       	or	r24, r25
    1fce:	39 f0       	breq	.+14     	; 0x1fde <gameTask+0xd44>
			stateG = score;
    1fd0:	83 e0       	ldi	r24, 0x03	; 3
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <stateG+0x1>
    1fd8:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <stateG>
		} else {
			stateG = wait;
		}
		break;
    1fdc:	fa c0       	rjmp	.+500    	; 0x21d2 <gameTask+0xf38>
		} else if (press & 8192){
			//stateG = diff;
		} else if (press & 64){
			stateG = score;
		} else {
			stateG = wait;
    1fde:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <stateG+0x1>
    1fe2:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <stateG>
		}
		break;
    1fe6:	f5 c0       	rjmp	.+490    	; 0x21d2 <gameTask+0xf38>
		case play:
		stateG = contplay;
    1fe8:	82 e0       	ldi	r24, 0x02	; 2
    1fea:	90 e0       	ldi	r25, 0x00	; 0
    1fec:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <stateG+0x1>
    1ff0:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <stateG>
		break;
    1ff4:	f3 c0       	rjmp	.+486    	; 0x21dc <gameTask+0xf42>
		case contplay:
		if(gg < 5){
    1ff6:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <gg>
    1ffa:	85 30       	cpi	r24, 0x05	; 5
    1ffc:	38 f4       	brcc	.+14     	; 0x200c <gameTask+0xd72>
			stateG = contplay;
    1ffe:	82 e0       	ldi	r24, 0x02	; 2
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <stateG+0x1>
    2006:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <stateG>
		} else if (gg > 5){
			gg = 0;
			stateG = gameOver;
		}
		break;
    200a:	e5 c0       	rjmp	.+458    	; 0x21d6 <gameTask+0xf3c>
		stateG = contplay;
		break;
		case contplay:
		if(gg < 5){
			stateG = contplay;
		} else if (gg > 5){
    200c:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <gg>
    2010:	86 30       	cpi	r24, 0x06	; 6
    2012:	08 f4       	brcc	.+2      	; 0x2016 <gameTask+0xd7c>
    2014:	e0 c0       	rjmp	.+448    	; 0x21d6 <gameTask+0xf3c>
			gg = 0;
    2016:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <gg>
			stateG = gameOver;
    201a:	84 e0       	ldi	r24, 0x04	; 4
    201c:	90 e0       	ldi	r25, 0x00	; 0
    201e:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <stateG+0x1>
    2022:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <stateG>
		}
		break;
    2026:	d7 c0       	rjmp	.+430    	; 0x21d6 <gameTask+0xf3c>
// 		case diff:
// 		break;
		case score:
		if(press & 64){
    2028:	8a 81       	ldd	r24, Y+2	; 0x02
    202a:	9b 81       	ldd	r25, Y+3	; 0x03
    202c:	80 74       	andi	r24, 0x40	; 64
    202e:	99 27       	eor	r25, r25
    2030:	89 2b       	or	r24, r25
    2032:	09 f4       	brne	.+2      	; 0x2036 <gameTask+0xd9c>
    2034:	d2 c0       	rjmp	.+420    	; 0x21da <gameTask+0xf40>
			stateG = wait;
    2036:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <stateG+0x1>
    203a:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <stateG>
		}
		break;
    203e:	cd c0       	rjmp	.+410    	; 0x21da <gameTask+0xf40>
		case gameOver:
		
		if(press & 128){
    2040:	8a 81       	ldd	r24, Y+2	; 0x02
    2042:	9b 81       	ldd	r25, Y+3	; 0x03
    2044:	80 78       	andi	r24, 0x80	; 128
    2046:	99 27       	eor	r25, r25
    2048:	89 2b       	or	r24, r25
			LCD_DisplayString(1, "Welcome to Taiko Mania!");
    204a:	51 f0       	breq	.+20     	; 0x2060 <gameTask+0xdc6>
    204c:	61 eb       	ldi	r22, 0xB1	; 177
    204e:	71 e0       	ldi	r23, 0x01	; 1
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	0e 94 e7 01 	call	0x3ce	; 0x3ce <LCD_DisplayString>
			stateG = wait;
    2056:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <stateG+0x1>
    205a:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <stateG>
		} else {
			stateG = gameOver;
    205e:	06 c0       	rjmp	.+12     	; 0x206c <gameTask+0xdd2>
    2060:	84 e0       	ldi	r24, 0x04	; 4
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	90 93 f4 03 	sts	0x03F4, r25	; 0x8003f4 <stateG+0x1>
    2068:	80 93 f3 03 	sts	0x03F3, r24	; 0x8003f3 <stateG>
    206c:	80 e0       	ldi	r24, 0x00	; 0
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	a8 ec       	ldi	r26, 0xC8	; 200
    2072:	b2 e4       	ldi	r27, 0x42	; 66
    2074:	88 a3       	std	Y+32, r24	; 0x20
    2076:	99 a3       	std	Y+33, r25	; 0x21

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    2078:	aa a3       	std	Y+34, r26	; 0x22
    207a:	bb a3       	std	Y+35, r27	; 0x23
    207c:	8e 01       	movw	r16, r28
    207e:	04 58       	subi	r16, 0x84	; 132
    2080:	1f 4f       	sbci	r17, 0xFF	; 255
    2082:	20 e0       	ldi	r18, 0x00	; 0
    2084:	30 e0       	ldi	r19, 0x00	; 0
    2086:	4a e7       	ldi	r20, 0x7A	; 122
    2088:	53 e4       	ldi	r21, 0x43	; 67
    208a:	68 a1       	ldd	r22, Y+32	; 0x20
    208c:	79 a1       	ldd	r23, Y+33	; 0x21
    208e:	8a a1       	ldd	r24, Y+34	; 0x22
    2090:	9b a1       	ldd	r25, Y+35	; 0x23
    2092:	ed d2       	rcall	.+1498   	; 0x266e <__mulsf3>
    2094:	dc 01       	movw	r26, r24
    2096:	cb 01       	movw	r24, r22
    2098:	f8 01       	movw	r30, r16
    209a:	80 83       	st	Z, r24
    209c:	91 83       	std	Z+1, r25	; 0x01
	if (__tmp < 1.0)
    209e:	a2 83       	std	Z+2, r26	; 0x02
    20a0:	b3 83       	std	Z+3, r27	; 0x03
    20a2:	ce 01       	movw	r24, r28
    20a4:	84 58       	subi	r24, 0x84	; 132
    20a6:	9f 4f       	sbci	r25, 0xFF	; 255
    20a8:	20 e0       	ldi	r18, 0x00	; 0
    20aa:	30 e0       	ldi	r19, 0x00	; 0
    20ac:	40 e8       	ldi	r20, 0x80	; 128
    20ae:	5f e3       	ldi	r21, 0x3F	; 63
    20b0:	fc 01       	movw	r30, r24
    20b2:	60 81       	ld	r22, Z
    20b4:	71 81       	ldd	r23, Z+1	; 0x01
    20b6:	82 81       	ldd	r24, Z+2	; 0x02
    20b8:	93 81       	ldd	r25, Z+3	; 0x03
    20ba:	58 d2       	rcall	.+1200   	; 0x256c <__cmpsf2>
		__ticks = 1;
    20bc:	88 23       	and	r24, r24
    20be:	4c f4       	brge	.+18     	; 0x20d2 <gameTask+0xe38>
    20c0:	ce 01       	movw	r24, r28
    20c2:	80 58       	subi	r24, 0x80	; 128
    20c4:	9f 4f       	sbci	r25, 0xFF	; 255
    20c6:	21 e0       	ldi	r18, 0x01	; 1
    20c8:	30 e0       	ldi	r19, 0x00	; 0
    20ca:	fc 01       	movw	r30, r24
	else if (__tmp > 65535)
    20cc:	31 83       	std	Z+1, r19	; 0x01
    20ce:	20 83       	st	Z, r18
    20d0:	65 c0       	rjmp	.+202    	; 0x219c <gameTask+0xf02>
    20d2:	ce 01       	movw	r24, r28
    20d4:	84 58       	subi	r24, 0x84	; 132
    20d6:	9f 4f       	sbci	r25, 0xFF	; 255
    20d8:	20 e0       	ldi	r18, 0x00	; 0
    20da:	3f ef       	ldi	r19, 0xFF	; 255
    20dc:	4f e7       	ldi	r20, 0x7F	; 127
    20de:	57 e4       	ldi	r21, 0x47	; 71
    20e0:	fc 01       	movw	r30, r24
    20e2:	60 81       	ld	r22, Z
    20e4:	71 81       	ldd	r23, Z+1	; 0x01
    20e6:	82 81       	ldd	r24, Z+2	; 0x02
    20e8:	93 81       	ldd	r25, Z+3	; 0x03
    20ea:	bd d2       	rcall	.+1402   	; 0x2666 <__gesf2>
    20ec:	18 16       	cp	r1, r24
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20ee:	0c f0       	brlt	.+2      	; 0x20f2 <gameTask+0xe58>
    20f0:	44 c0       	rjmp	.+136    	; 0x217a <gameTask+0xee0>
    20f2:	20 e0       	ldi	r18, 0x00	; 0
    20f4:	30 e0       	ldi	r19, 0x00	; 0
    20f6:	40 e2       	ldi	r20, 0x20	; 32
    20f8:	51 e4       	ldi	r21, 0x41	; 65
    20fa:	68 a1       	ldd	r22, Y+32	; 0x20
    20fc:	79 a1       	ldd	r23, Y+33	; 0x21
    20fe:	8a a1       	ldd	r24, Y+34	; 0x22
    2100:	9b a1       	ldd	r25, Y+35	; 0x23
    2102:	b5 d2       	rcall	.+1386   	; 0x266e <__mulsf3>
    2104:	dc 01       	movw	r26, r24
    2106:	cb 01       	movw	r24, r22
    2108:	8e 01       	movw	r16, r28
    210a:	00 58       	subi	r16, 0x80	; 128
    210c:	1f 4f       	sbci	r17, 0xFF	; 255
    210e:	bc 01       	movw	r22, r24
    2110:	cd 01       	movw	r24, r26
    2112:	30 d2       	rcall	.+1120   	; 0x2574 <__fixunssfsi>
    2114:	dc 01       	movw	r26, r24
    2116:	cb 01       	movw	r24, r22
    2118:	f8 01       	movw	r30, r16
    211a:	91 83       	std	Z+1, r25	; 0x01
    211c:	80 83       	st	Z, r24
    211e:	24 c0       	rjmp	.+72     	; 0x2168 <gameTask+0xece>
    2120:	ce 01       	movw	r24, r28
    2122:	8e 57       	subi	r24, 0x7E	; 126
    2124:	9f 4f       	sbci	r25, 0xFF	; 255
    2126:	29 e1       	ldi	r18, 0x19	; 25
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	fc 01       	movw	r30, r24
    212c:	31 83       	std	Z+1, r19	; 0x01
    212e:	20 83       	st	Z, r18
    2130:	ce 01       	movw	r24, r28
    2132:	8e 57       	subi	r24, 0x7E	; 126
    2134:	9f 4f       	sbci	r25, 0xFF	; 255
    2136:	fc 01       	movw	r30, r24
    2138:	80 81       	ld	r24, Z
    213a:	91 81       	ldd	r25, Z+1	; 0x01
    213c:	01 97       	sbiw	r24, 0x01	; 1
    213e:	f1 f7       	brne	.-4      	; 0x213c <gameTask+0xea2>
    2140:	9e 01       	movw	r18, r28
    2142:	2e 57       	subi	r18, 0x7E	; 126
    2144:	3f 4f       	sbci	r19, 0xFF	; 255
    2146:	f9 01       	movw	r30, r18
    2148:	91 83       	std	Z+1, r25	; 0x01
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    214a:	80 83       	st	Z, r24
    214c:	ce 01       	movw	r24, r28
    214e:	80 58       	subi	r24, 0x80	; 128
    2150:	9f 4f       	sbci	r25, 0xFF	; 255
    2152:	9e 01       	movw	r18, r28
    2154:	20 58       	subi	r18, 0x80	; 128
    2156:	3f 4f       	sbci	r19, 0xFF	; 255
    2158:	f9 01       	movw	r30, r18
    215a:	20 81       	ld	r18, Z
    215c:	31 81       	ldd	r19, Z+1	; 0x01
    215e:	21 50       	subi	r18, 0x01	; 1
    2160:	31 09       	sbc	r19, r1
    2162:	fc 01       	movw	r30, r24
    2164:	31 83       	std	Z+1, r19	; 0x01
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2166:	20 83       	st	Z, r18
    2168:	ce 01       	movw	r24, r28
    216a:	80 58       	subi	r24, 0x80	; 128
    216c:	9f 4f       	sbci	r25, 0xFF	; 255
    216e:	fc 01       	movw	r30, r24
    2170:	80 81       	ld	r24, Z
    2172:	91 81       	ldd	r25, Z+1	; 0x01
    2174:	89 2b       	or	r24, r25
		}
		delay_ms(100);
		break;
    2176:	a1 f6       	brne	.-88     	; 0x2120 <gameTask+0xe86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2178:	31 c0       	rjmp	.+98     	; 0x21dc <gameTask+0xf42>
    217a:	8e 01       	movw	r16, r28
    217c:	00 58       	subi	r16, 0x80	; 128
    217e:	1f 4f       	sbci	r17, 0xFF	; 255
    2180:	ce 01       	movw	r24, r28
    2182:	84 58       	subi	r24, 0x84	; 132
    2184:	9f 4f       	sbci	r25, 0xFF	; 255
    2186:	fc 01       	movw	r30, r24
    2188:	60 81       	ld	r22, Z
    218a:	71 81       	ldd	r23, Z+1	; 0x01
    218c:	82 81       	ldd	r24, Z+2	; 0x02
    218e:	93 81       	ldd	r25, Z+3	; 0x03
    2190:	f1 d1       	rcall	.+994    	; 0x2574 <__fixunssfsi>
    2192:	dc 01       	movw	r26, r24
    2194:	cb 01       	movw	r24, r22
    2196:	f8 01       	movw	r30, r16
    2198:	91 83       	std	Z+1, r25	; 0x01
    219a:	80 83       	st	Z, r24
    219c:	ce 01       	movw	r24, r28
    219e:	8c 57       	subi	r24, 0x7C	; 124
    21a0:	9f 4f       	sbci	r25, 0xFF	; 255
    21a2:	9e 01       	movw	r18, r28
    21a4:	20 58       	subi	r18, 0x80	; 128
    21a6:	3f 4f       	sbci	r19, 0xFF	; 255
    21a8:	f9 01       	movw	r30, r18
    21aa:	20 81       	ld	r18, Z
    21ac:	31 81       	ldd	r19, Z+1	; 0x01
    21ae:	fc 01       	movw	r30, r24
    21b0:	31 83       	std	Z+1, r19	; 0x01
    21b2:	20 83       	st	Z, r18
    21b4:	ce 01       	movw	r24, r28
    21b6:	8c 57       	subi	r24, 0x7C	; 124
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	fc 01       	movw	r30, r24
    21bc:	80 81       	ld	r24, Z
    21be:	91 81       	ldd	r25, Z+1	; 0x01
    21c0:	01 97       	sbiw	r24, 0x01	; 1
    21c2:	f1 f7       	brne	.-4      	; 0x21c0 <gameTask+0xf26>
    21c4:	9e 01       	movw	r18, r28
    21c6:	2c 57       	subi	r18, 0x7C	; 124
    21c8:	3f 4f       	sbci	r19, 0xFF	; 255
    21ca:	f9 01       	movw	r30, r18
    21cc:	91 83       	std	Z+1, r25	; 0x01
    21ce:	80 83       	st	Z, r24
    21d0:	05 c0       	rjmp	.+10     	; 0x21dc <gameTask+0xf42>
		} else if (press & 64){
			stateG = score;
		} else {
			stateG = wait;
		}
		break;
    21d2:	00 00       	nop
    21d4:	03 c0       	rjmp	.+6      	; 0x21dc <gameTask+0xf42>
			stateG = contplay;
		} else if (gg > 5){
			gg = 0;
			stateG = gameOver;
		}
		break;
    21d6:	00 00       	nop
    21d8:	01 c0       	rjmp	.+2      	; 0x21dc <gameTask+0xf42>
// 		break;
		case score:
		if(press & 64){
			stateG = wait;
		}
		break;
    21da:	00 00       	nop
		break;
		default:
		break;
	}
	/*return stateG;*/
}
    21dc:	00 00       	nop
    21de:	cd 55       	subi	r28, 0x5D	; 93
    21e0:	df 4f       	sbci	r29, 0xFF	; 255
    21e2:	0f b6       	in	r0, 0x3f	; 63
    21e4:	f8 94       	cli
    21e6:	de bf       	out	0x3e, r29	; 62
    21e8:	0f be       	out	0x3f, r0	; 63
    21ea:	cd bf       	out	0x3d, r28	; 61
    21ec:	df 91       	pop	r29
    21ee:	cf 91       	pop	r28
    21f0:	1f 91       	pop	r17
    21f2:	0f 91       	pop	r16
    21f4:	08 95       	ret

000021f6 <keyTick>:

unsigned short keyCount = 0;
unsigned char keyFlag = 0;
enum keyState { waiton, a, x, l, r, waitoff} stateK;
	
void keyTick(/*int stateK*/){
    21f6:	cf 93       	push	r28
    21f8:	df 93       	push	r29
    21fa:	00 d0       	rcall	.+0      	; 0x21fc <keyTick+0x6>
    21fc:	cd b7       	in	r28, 0x3d	; 61
    21fe:	de b7       	in	r29, 0x3e	; 62
	maxscore = (unsigned)(char)eeprom_read_byte((uint8_t*)1);
    2200:	81 e0       	ldi	r24, 0x01	; 1
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	8a d3       	rcall	.+1812   	; 0x291a <eeprom_read_byte>
    2206:	88 2f       	mov	r24, r24
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	90 93 f6 03 	sts	0x03F6, r25	; 0x8003f6 <maxscore+0x1>
    220e:	80 93 f5 03 	sts	0x03F5, r24	; 0x8003f5 <maxscore>
	unsigned short press = SNES_Read();
    2212:	0e 94 a5 08 	call	0x114a	; 0x114a <SNES_Read>
    2216:	9a 83       	std	Y+2, r25	; 0x02
    2218:	89 83       	std	Y+1, r24	; 0x01
	switch(stateK){
    221a:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <stateK>
    221e:	90 91 05 04 	lds	r25, 0x0405	; 0x800405 <stateK+0x1>
    2222:	82 30       	cpi	r24, 0x02	; 2
    2224:	91 05       	cpc	r25, r1
    2226:	09 f4       	brne	.+2      	; 0x222a <keyTick+0x34>
    2228:	8d c0       	rjmp	.+282    	; 0x2344 <keyTick+0x14e>
    222a:	83 30       	cpi	r24, 0x03	; 3
    222c:	91 05       	cpc	r25, r1
    222e:	30 f4       	brcc	.+12     	; 0x223c <keyTick+0x46>
    2230:	00 97       	sbiw	r24, 0x00	; 0
    2232:	79 f0       	breq	.+30     	; 0x2252 <keyTick+0x5c>
    2234:	01 97       	sbiw	r24, 0x01	; 1
    2236:	09 f4       	brne	.+2      	; 0x223a <keyTick+0x44>
    2238:	7e c0       	rjmp	.+252    	; 0x2336 <keyTick+0x140>
    223a:	99 c0       	rjmp	.+306    	; 0x236e <keyTick+0x178>
    223c:	84 30       	cpi	r24, 0x04	; 4
    223e:	91 05       	cpc	r25, r1
    2240:	09 f4       	brne	.+2      	; 0x2244 <keyTick+0x4e>
    2242:	8e c0       	rjmp	.+284    	; 0x2360 <keyTick+0x16a>
    2244:	84 30       	cpi	r24, 0x04	; 4
    2246:	91 05       	cpc	r25, r1
    2248:	08 f4       	brcc	.+2      	; 0x224c <keyTick+0x56>
    224a:	83 c0       	rjmp	.+262    	; 0x2352 <keyTick+0x15c>
    224c:	05 97       	sbiw	r24, 0x05	; 5
    224e:	d1 f1       	breq	.+116    	; 0x22c4 <keyTick+0xce>
    2250:	8e c0       	rjmp	.+284    	; 0x236e <keyTick+0x178>
		case waiton:
		if(press & 2048){
    2252:	89 81       	ldd	r24, Y+1	; 0x01
    2254:	9a 81       	ldd	r25, Y+2	; 0x02
    2256:	88 27       	eor	r24, r24
    2258:	98 70       	andi	r25, 0x08	; 8
    225a:	89 2b       	or	r24, r25
    225c:	39 f0       	breq	.+14     	; 0x226c <keyTick+0x76>
			stateK = a;
    225e:	81 e0       	ldi	r24, 0x01	; 1
    2260:	90 e0       	ldi	r25, 0x00	; 0
    2262:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    2266:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
		}
		break;
    226a:	86 c0       	rjmp	.+268    	; 0x2378 <keyTick+0x182>
	unsigned short press = SNES_Read();
	switch(stateK){
		case waiton:
		if(press & 2048){
			stateK = a;
		} else if (press & 1024){
    226c:	89 81       	ldd	r24, Y+1	; 0x01
    226e:	9a 81       	ldd	r25, Y+2	; 0x02
    2270:	88 27       	eor	r24, r24
    2272:	94 70       	andi	r25, 0x04	; 4
    2274:	89 2b       	or	r24, r25
    2276:	39 f0       	breq	.+14     	; 0x2286 <keyTick+0x90>
			stateK = x;
    2278:	82 e0       	ldi	r24, 0x02	; 2
    227a:	90 e0       	ldi	r25, 0x00	; 0
    227c:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    2280:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
		}
		break;
    2284:	79 c0       	rjmp	.+242    	; 0x2378 <keyTick+0x182>
		case waiton:
		if(press & 2048){
			stateK = a;
		} else if (press & 1024){
			stateK = x;
		} else if (press & 512){
    2286:	89 81       	ldd	r24, Y+1	; 0x01
    2288:	9a 81       	ldd	r25, Y+2	; 0x02
    228a:	88 27       	eor	r24, r24
    228c:	92 70       	andi	r25, 0x02	; 2
    228e:	89 2b       	or	r24, r25
    2290:	39 f0       	breq	.+14     	; 0x22a0 <keyTick+0xaa>
			stateK = l;
    2292:	83 e0       	ldi	r24, 0x03	; 3
    2294:	90 e0       	ldi	r25, 0x00	; 0
    2296:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    229a:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
		}
		break;
    229e:	6c c0       	rjmp	.+216    	; 0x2378 <keyTick+0x182>
			stateK = a;
		} else if (press & 1024){
			stateK = x;
		} else if (press & 512){
			stateK = l;
		} else if (press & 256){
    22a0:	89 81       	ldd	r24, Y+1	; 0x01
    22a2:	9a 81       	ldd	r25, Y+2	; 0x02
    22a4:	88 27       	eor	r24, r24
    22a6:	91 70       	andi	r25, 0x01	; 1
    22a8:	89 2b       	or	r24, r25
    22aa:	39 f0       	breq	.+14     	; 0x22ba <keyTick+0xc4>
			stateK = r;
    22ac:	84 e0       	ldi	r24, 0x04	; 4
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    22b4:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else {
			stateK = waiton;
		}
		break;
    22b8:	5f c0       	rjmp	.+190    	; 0x2378 <keyTick+0x182>
		} else if (press & 512){
			stateK = l;
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
    22ba:	10 92 05 04 	sts	0x0405, r1	; 0x800405 <stateK+0x1>
    22be:	10 92 04 04 	sts	0x0404, r1	; 0x800404 <stateK>
		}
		break;
    22c2:	5a c0       	rjmp	.+180    	; 0x2378 <keyTick+0x182>
		
		case waitoff:
		if(press & 2048){
    22c4:	89 81       	ldd	r24, Y+1	; 0x01
    22c6:	9a 81       	ldd	r25, Y+2	; 0x02
    22c8:	88 27       	eor	r24, r24
    22ca:	98 70       	andi	r25, 0x08	; 8
    22cc:	89 2b       	or	r24, r25
    22ce:	39 f0       	breq	.+14     	; 0x22de <keyTick+0xe8>
			stateK = a;
    22d0:	81 e0       	ldi	r24, 0x01	; 1
    22d2:	90 e0       	ldi	r25, 0x00	; 0
    22d4:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    22d8:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
		}
		break;
    22dc:	4d c0       	rjmp	.+154    	; 0x2378 <keyTick+0x182>
		break;
		
		case waitoff:
		if(press & 2048){
			stateK = a;
		} else if (press & 1024){
    22de:	89 81       	ldd	r24, Y+1	; 0x01
    22e0:	9a 81       	ldd	r25, Y+2	; 0x02
    22e2:	88 27       	eor	r24, r24
    22e4:	94 70       	andi	r25, 0x04	; 4
    22e6:	89 2b       	or	r24, r25
    22e8:	39 f0       	breq	.+14     	; 0x22f8 <keyTick+0x102>
			stateK = x;
    22ea:	82 e0       	ldi	r24, 0x02	; 2
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    22f2:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
		}
		break;
    22f6:	40 c0       	rjmp	.+128    	; 0x2378 <keyTick+0x182>
		case waitoff:
		if(press & 2048){
			stateK = a;
		} else if (press & 1024){
			stateK = x;
		} else if (press & 512){
    22f8:	89 81       	ldd	r24, Y+1	; 0x01
    22fa:	9a 81       	ldd	r25, Y+2	; 0x02
    22fc:	88 27       	eor	r24, r24
    22fe:	92 70       	andi	r25, 0x02	; 2
    2300:	89 2b       	or	r24, r25
    2302:	39 f0       	breq	.+14     	; 0x2312 <keyTick+0x11c>
			stateK = l;
    2304:	83 e0       	ldi	r24, 0x03	; 3
    2306:	90 e0       	ldi	r25, 0x00	; 0
    2308:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    230c:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
		}
		break;
    2310:	33 c0       	rjmp	.+102    	; 0x2378 <keyTick+0x182>
			stateK = a;
		} else if (press & 1024){
			stateK = x;
		} else if (press & 512){
			stateK = l;
		} else if (press & 256){
    2312:	89 81       	ldd	r24, Y+1	; 0x01
    2314:	9a 81       	ldd	r25, Y+2	; 0x02
    2316:	88 27       	eor	r24, r24
    2318:	91 70       	andi	r25, 0x01	; 1
    231a:	89 2b       	or	r24, r25
    231c:	39 f0       	breq	.+14     	; 0x232c <keyTick+0x136>
			stateK = r;
    231e:	84 e0       	ldi	r24, 0x04	; 4
    2320:	90 e0       	ldi	r25, 0x00	; 0
    2322:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    2326:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		} else {
			stateK = waiton;
		}
		break;
    232a:	26 c0       	rjmp	.+76     	; 0x2378 <keyTick+0x182>
		} else if (press & 512){
			stateK = l;
		} else if (press & 256){
			stateK = r;
		} else {
			stateK = waiton;
    232c:	10 92 05 04 	sts	0x0405, r1	; 0x800405 <stateK+0x1>
    2330:	10 92 04 04 	sts	0x0404, r1	; 0x800404 <stateK>
		}
		break;
    2334:	21 c0       	rjmp	.+66     	; 0x2378 <keyTick+0x182>
		
		case a:
		stateK = waitoff;
    2336:	85 e0       	ldi	r24, 0x05	; 5
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    233e:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		break;
    2342:	1a c0       	rjmp	.+52     	; 0x2378 <keyTick+0x182>
		
		case x:
		stateK = waitoff;
    2344:	85 e0       	ldi	r24, 0x05	; 5
    2346:	90 e0       	ldi	r25, 0x00	; 0
    2348:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    234c:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		break;
    2350:	13 c0       	rjmp	.+38     	; 0x2378 <keyTick+0x182>
		
		case l:
		stateK = waitoff;
    2352:	85 e0       	ldi	r24, 0x05	; 5
    2354:	90 e0       	ldi	r25, 0x00	; 0
    2356:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    235a:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		break;
    235e:	0c c0       	rjmp	.+24     	; 0x2378 <keyTick+0x182>
		
		case r:
		stateK = waitoff;
    2360:	85 e0       	ldi	r24, 0x05	; 5
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <stateK+0x1>
    2368:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <stateK>
		break;
    236c:	05 c0       	rjmp	.+10     	; 0x2378 <keyTick+0x182>
		
		default:
		stateK = waiton;
    236e:	10 92 05 04 	sts	0x0405, r1	; 0x800405 <stateK+0x1>
    2372:	10 92 04 04 	sts	0x0404, r1	; 0x800404 <stateK>
		break;
    2376:	00 00       	nop
	}
	
	switch(stateK){
    2378:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <stateK>
    237c:	90 91 05 04 	lds	r25, 0x0405	; 0x800405 <stateK+0x1>
    2380:	82 30       	cpi	r24, 0x02	; 2
    2382:	91 05       	cpc	r25, r1
    2384:	c1 f0       	breq	.+48     	; 0x23b6 <keyTick+0x1c0>
    2386:	83 30       	cpi	r24, 0x03	; 3
    2388:	91 05       	cpc	r25, r1
    238a:	28 f4       	brcc	.+10     	; 0x2396 <keyTick+0x1a0>
    238c:	00 97       	sbiw	r24, 0x00	; 0
    238e:	61 f0       	breq	.+24     	; 0x23a8 <keyTick+0x1b2>
    2390:	01 97       	sbiw	r24, 0x01	; 1
    2392:	69 f0       	breq	.+26     	; 0x23ae <keyTick+0x1b8>
		case r:
		keyFlag = 4;
		break;
		
		default:
		break;
    2394:	1d c0       	rjmp	.+58     	; 0x23d0 <keyTick+0x1da>
		default:
		stateK = waiton;
		break;
	}
	
	switch(stateK){
    2396:	84 30       	cpi	r24, 0x04	; 4
    2398:	91 05       	cpc	r25, r1
    239a:	a9 f0       	breq	.+42     	; 0x23c6 <keyTick+0x1d0>
    239c:	84 30       	cpi	r24, 0x04	; 4
    239e:	91 05       	cpc	r25, r1
    23a0:	70 f0       	brcs	.+28     	; 0x23be <keyTick+0x1c8>
    23a2:	05 97       	sbiw	r24, 0x05	; 5
    23a4:	a1 f0       	breq	.+40     	; 0x23ce <keyTick+0x1d8>
		case r:
		keyFlag = 4;
		break;
		
		default:
		break;
    23a6:	14 c0       	rjmp	.+40     	; 0x23d0 <keyTick+0x1da>
		break;
	}
	
	switch(stateK){
		case waiton:
		keyFlag = 0;
    23a8:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <keyFlag>
		break;
    23ac:	11 c0       	rjmp	.+34     	; 0x23d0 <keyTick+0x1da>
		
		case waitoff:
		break;
		
		case a:
		keyFlag = 2;
    23ae:	82 e0       	ldi	r24, 0x02	; 2
    23b0:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <keyFlag>
		break;
    23b4:	0d c0       	rjmp	.+26     	; 0x23d0 <keyTick+0x1da>
		
		case x:
		keyFlag = 3;
    23b6:	83 e0       	ldi	r24, 0x03	; 3
    23b8:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <keyFlag>
		break;
    23bc:	09 c0       	rjmp	.+18     	; 0x23d0 <keyTick+0x1da>
		
		case l:
		keyFlag = 1;
    23be:	81 e0       	ldi	r24, 0x01	; 1
    23c0:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <keyFlag>
		break;
    23c4:	05 c0       	rjmp	.+10     	; 0x23d0 <keyTick+0x1da>
		
		case r:
		keyFlag = 4;
    23c6:	84 e0       	ldi	r24, 0x04	; 4
    23c8:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <keyFlag>
		break;
    23cc:	01 c0       	rjmp	.+2      	; 0x23d0 <keyTick+0x1da>
		case waiton:
		keyFlag = 0;
		break;
		
		case waitoff:
		break;
    23ce:	00 00       	nop
		
		default:
		break;
	}
	/*return stateK;*/
}
    23d0:	00 00       	nop
    23d2:	0f 90       	pop	r0
    23d4:	0f 90       	pop	r0
    23d6:	df 91       	pop	r29
    23d8:	cf 91       	pop	r28
    23da:	08 95       	ret

000023dc <playGame>:

enum playTick {game1, game2} playState;
void playGame(/*int playState*/){
    23dc:	cf 93       	push	r28
    23de:	df 93       	push	r29
    23e0:	cd b7       	in	r28, 0x3d	; 61
    23e2:	de b7       	in	r29, 0x3e	; 62
	
	switch(playState){
    23e4:	80 91 00 04 	lds	r24, 0x0400	; 0x800400 <playState>
    23e8:	90 91 01 04 	lds	r25, 0x0401	; 0x800401 <playState+0x1>
    23ec:	00 97       	sbiw	r24, 0x00	; 0
    23ee:	19 f0       	breq	.+6      	; 0x23f6 <playGame+0x1a>
    23f0:	01 97       	sbiw	r24, 0x01	; 1
    23f2:	41 f0       	breq	.+16     	; 0x2404 <playGame+0x28>
		case game2:
		playState = game1;
		break;
		
		default:
		break;
    23f4:	0c c0       	rjmp	.+24     	; 0x240e <playGame+0x32>
enum playTick {game1, game2} playState;
void playGame(/*int playState*/){
	
	switch(playState){
		case game1:
		playState = game2;
    23f6:	81 e0       	ldi	r24, 0x01	; 1
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	90 93 01 04 	sts	0x0401, r25	; 0x800401 <playState+0x1>
    23fe:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <playState>

		break;
    2402:	05 c0       	rjmp	.+10     	; 0x240e <playGame+0x32>
		
		case game2:
		playState = game1;
    2404:	10 92 01 04 	sts	0x0401, r1	; 0x800401 <playState+0x1>
    2408:	10 92 00 04 	sts	0x0400, r1	; 0x800400 <playState>
		break;
    240c:	00 00       	nop
		
		default:
		break;
	}
	
	switch(playState){
    240e:	80 91 00 04 	lds	r24, 0x0400	; 0x800400 <playState>
    2412:	90 91 01 04 	lds	r25, 0x0401	; 0x800401 <playState+0x1>
    2416:	00 97       	sbiw	r24, 0x00	; 0
    2418:	19 f0       	breq	.+6      	; 0x2420 <playGame+0x44>
    241a:	01 97       	sbiw	r24, 0x01	; 1
    241c:	c1 f0       	breq	.+48     	; 0x244e <playGame+0x72>
			lives--;
		}
		break;
		
		default:
		break;
    241e:	2e c0       	rjmp	.+92     	; 0x247c <playGame+0xa0>
		break;
	}
	
	switch(playState){
		case game1:
		if(keyFlag == gameFlag){
    2420:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <keyFlag>
    2424:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <gameFlag>
    2428:	98 17       	cp	r25, r24
    242a:	31 f4       	brne	.+12     	; 0x2438 <playGame+0x5c>
// 			LCD_Cursor(20);
// 			LCD_WriteData(' ');
			point++;
    242c:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    2430:	8f 5f       	subi	r24, 0xFF	; 255
    2432:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <point>
		} else {
			gg++;
			lives--;
		}
		
		break;
    2436:	22 c0       	rjmp	.+68     	; 0x247c <playGame+0xa0>
		if(keyFlag == gameFlag){
// 			LCD_Cursor(20);
// 			LCD_WriteData(' ');
			point++;
		} else {
			gg++;
    2438:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <gg>
    243c:	8f 5f       	subi	r24, 0xFF	; 255
    243e:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <gg>
			lives--;
    2442:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <lives>
    2446:	81 50       	subi	r24, 0x01	; 1
    2448:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <lives>
		}
		
		break;
    244c:	17 c0       	rjmp	.+46     	; 0x247c <playGame+0xa0>
		
		case game2:
		if(keyFlag == gameFlag){
    244e:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <keyFlag>
    2452:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <gameFlag>
    2456:	98 17       	cp	r25, r24
    2458:	31 f4       	brne	.+12     	; 0x2466 <playGame+0x8a>
// 			LCD_Cursor(28);
// 			LCD_WriteData(' ');
			point++;
    245a:	80 91 f0 01 	lds	r24, 0x01F0	; 0x8001f0 <point>
    245e:	8f 5f       	subi	r24, 0xFF	; 255
    2460:	80 93 f0 01 	sts	0x01F0, r24	; 0x8001f0 <point>
		} else {
			gg++;
			lives--;
		}
		break;
    2464:	0a c0       	rjmp	.+20     	; 0x247a <playGame+0x9e>
		if(keyFlag == gameFlag){
// 			LCD_Cursor(28);
// 			LCD_WriteData(' ');
			point++;
		} else {
			gg++;
    2466:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <gg>
    246a:	8f 5f       	subi	r24, 0xFF	; 255
    246c:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <gg>
			lives--;
    2470:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <lives>
    2474:	81 50       	subi	r24, 0x01	; 1
    2476:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <lives>
		}
		break;
    247a:	00 00       	nop
		break;
	}
	
	
	/*return playState;*/
}
    247c:	00 00       	nop
    247e:	df 91       	pop	r29
    2480:	cf 91       	pop	r28
    2482:	08 95       	ret

00002484 <main>:



int main(void)
{
    2484:	0f 93       	push	r16
    2486:	cf 93       	push	r28
    2488:	df 93       	push	r29
    248a:	cd b7       	in	r28, 0x3d	; 61
    248c:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0x03; PORTA = 0x00;
    248e:	81 e2       	ldi	r24, 0x21	; 33
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	23 e0       	ldi	r18, 0x03	; 3
    2494:	fc 01       	movw	r30, r24
    2496:	20 83       	st	Z, r18
    2498:	82 e2       	ldi	r24, 0x22	; 34
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	fc 01       	movw	r30, r24
    249e:	10 82       	st	Z, r1
	DDRB = 0xFF; PORTB = 0x00;
    24a0:	84 e2       	ldi	r24, 0x24	; 36
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	2f ef       	ldi	r18, 0xFF	; 255
    24a6:	fc 01       	movw	r30, r24
    24a8:	20 83       	st	Z, r18
    24aa:	85 e2       	ldi	r24, 0x25	; 37
    24ac:	90 e0       	ldi	r25, 0x00	; 0
    24ae:	fc 01       	movw	r30, r24
    24b0:	10 82       	st	Z, r1
	DDRC = 0xFF; PORTC = 0x00;
    24b2:	87 e2       	ldi	r24, 0x27	; 39
    24b4:	90 e0       	ldi	r25, 0x00	; 0
    24b6:	2f ef       	ldi	r18, 0xFF	; 255
    24b8:	fc 01       	movw	r30, r24
    24ba:	20 83       	st	Z, r18
    24bc:	88 e2       	ldi	r24, 0x28	; 40
    24be:	90 e0       	ldi	r25, 0x00	; 0
    24c0:	fc 01       	movw	r30, r24
    24c2:	10 82       	st	Z, r1
	DDRD = 0xFF; PORTD = 0x00;
    24c4:	8a e2       	ldi	r24, 0x2A	; 42
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	2f ef       	ldi	r18, 0xFF	; 255
    24ca:	fc 01       	movw	r30, r24
    24cc:	20 83       	st	Z, r18
    24ce:	8b e2       	ldi	r24, 0x2B	; 43
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	fc 01       	movw	r30, r24
    24d4:	10 82       	st	Z, r1
	
	srand(time(0));
    24d6:	80 e0       	ldi	r24, 0x00	; 0
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	0e 94 56 01 	call	0x2ac	; 0x2ac <time>
    24de:	dc 01       	movw	r26, r24
    24e0:	cb 01       	movw	r24, r22
    24e2:	c1 d1       	rcall	.+898    	; 0x2866 <srand>
	TimerSet(SystemPeriod);
    24e4:	81 e0       	ldi	r24, 0x01	; 1
    24e6:	90 e0       	ldi	r25, 0x00	; 0
    24e8:	a0 e0       	ldi	r26, 0x00	; 0
    24ea:	b0 e0       	ldi	r27, 0x00	; 0
    24ec:	bc 01       	movw	r22, r24
    24ee:	cd 01       	movw	r24, r26
    24f0:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <TimerSet>
	TimerOn();
    24f4:	0e 94 02 08 	call	0x1004	; 0x1004 <TimerOn>
	
	
	
	glcd_init();
    24f8:	0e 94 84 02 	call	0x508	; 0x508 <glcd_init>
	glcd_tiny_set_font(Font5x7, 5,7,32,127);
    24fc:	0f e7       	ldi	r16, 0x7F	; 127
    24fe:	20 e2       	ldi	r18, 0x20	; 32
    2500:	47 e0       	ldi	r20, 0x07	; 7
    2502:	65 e0       	ldi	r22, 0x05	; 5
    2504:	8c e8       	ldi	r24, 0x8C	; 140
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	0e 94 59 05 	call	0xab2	; 0xab2 <glcd_tiny_set_font>
	glcd_clear_buffer();
    250c:	0e 94 24 05 	call	0xa48	; 0xa48 <glcd_clear_buffer>
	LCD_init();
    2510:	0e 94 73 01 	call	0x2e6	; 0x2e6 <LCD_init>
	LCD_ClearScreen();
    2514:	0e 94 69 01 	call	0x2d2	; 0x2d2 <LCD_ClearScreen>
	LCD_Cursor(1);
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	0e 94 11 02 	call	0x422	; 0x422 <LCD_Cursor>
	buildmenu();
    251e:	0e 94 1a 09 	call	0x1234	; 0x1234 <buildmenu>
	
	
	/*Note N = NoteInit();*/
	LCD_Custom_Char(0, aNote);  /* Build Character1 at position 0 */
    2522:	64 e0       	ldi	r22, 0x04	; 4
    2524:	71 e0       	ldi	r23, 0x01	; 1
    2526:	80 e0       	ldi	r24, 0x00	; 0
    2528:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_Custom_Char>
	LCD_Custom_Char(1, left);  /* Build Character2 at position 1 */
    252c:	6c e0       	ldi	r22, 0x0C	; 12
    252e:	71 e0       	ldi	r23, 0x01	; 1
    2530:	81 e0       	ldi	r24, 0x01	; 1
    2532:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_Custom_Char>
	LCD_Custom_Char(2, xNote);  /* Build Character3 at position 2 */
    2536:	64 e1       	ldi	r22, 0x14	; 20
    2538:	71 e0       	ldi	r23, 0x01	; 1
    253a:	82 e0       	ldi	r24, 0x02	; 2
    253c:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_Custom_Char>
	LCD_Custom_Char(3, right);  /* Build Character4 at position 3 */
    2540:	6c e1       	ldi	r22, 0x1C	; 28
    2542:	71 e0       	ldi	r23, 0x01	; 1
    2544:	83 e0       	ldi	r24, 0x03	; 3
    2546:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_Custom_Char>
	LCD_Custom_Char(4, heart);  /* Build Character5 at position 4 */
    254a:	64 e2       	ldi	r22, 0x24	; 36
    254c:	71 e0       	ldi	r23, 0x01	; 1
    254e:	84 e0       	ldi	r24, 0x04	; 4
    2550:	0e 94 56 02 	call	0x4ac	; 0x4ac <LCD_Custom_Char>
// 				tasks[i].elapsedTime = 0;
// 			}
// 			tasks[i].elapsedTime = tempGCD;
// 		}

		gameTask();
    2554:	0e 94 4d 09 	call	0x129a	; 0x129a <gameTask>
		keyTick();
		playGame();
    2558:	4e de       	rcall	.-868    	; 0x21f6 <keyTick>
    255a:	40 df       	rcall	.-384    	; 0x23dc <playGame>
		
		while(!TimerFlag);
    255c:	00 00       	nop
    255e:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__data_end>
    2562:	88 23       	and	r24, r24
    2564:	e1 f3       	breq	.-8      	; 0x255e <main+0xda>
		TimerFlag = 0;
    2566:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <__data_end>


    }
    256a:	f4 cf       	rjmp	.-24     	; 0x2554 <main+0xd0>

0000256c <__cmpsf2>:
    256c:	2f d0       	rcall	.+94     	; 0x25cc <__fp_cmp>
    256e:	08 f4       	brcc	.+2      	; 0x2572 <__cmpsf2+0x6>
    2570:	81 e0       	ldi	r24, 0x01	; 1
    2572:	08 95       	ret

00002574 <__fixunssfsi>:
    2574:	57 d0       	rcall	.+174    	; 0x2624 <__fp_splitA>
    2576:	88 f0       	brcs	.+34     	; 0x259a <__fixunssfsi+0x26>
    2578:	9f 57       	subi	r25, 0x7F	; 127
    257a:	90 f0       	brcs	.+36     	; 0x25a0 <__fixunssfsi+0x2c>
    257c:	b9 2f       	mov	r27, r25
    257e:	99 27       	eor	r25, r25
    2580:	b7 51       	subi	r27, 0x17	; 23
    2582:	a0 f0       	brcs	.+40     	; 0x25ac <__fixunssfsi+0x38>
    2584:	d1 f0       	breq	.+52     	; 0x25ba <__fixunssfsi+0x46>
    2586:	66 0f       	add	r22, r22
    2588:	77 1f       	adc	r23, r23
    258a:	88 1f       	adc	r24, r24
    258c:	99 1f       	adc	r25, r25
    258e:	1a f0       	brmi	.+6      	; 0x2596 <__fixunssfsi+0x22>
    2590:	ba 95       	dec	r27
    2592:	c9 f7       	brne	.-14     	; 0x2586 <__fixunssfsi+0x12>
    2594:	12 c0       	rjmp	.+36     	; 0x25ba <__fixunssfsi+0x46>
    2596:	b1 30       	cpi	r27, 0x01	; 1
    2598:	81 f0       	breq	.+32     	; 0x25ba <__fixunssfsi+0x46>
    259a:	5e d0       	rcall	.+188    	; 0x2658 <__fp_zero>
    259c:	b1 e0       	ldi	r27, 0x01	; 1
    259e:	08 95       	ret
    25a0:	5b c0       	rjmp	.+182    	; 0x2658 <__fp_zero>
    25a2:	67 2f       	mov	r22, r23
    25a4:	78 2f       	mov	r23, r24
    25a6:	88 27       	eor	r24, r24
    25a8:	b8 5f       	subi	r27, 0xF8	; 248
    25aa:	39 f0       	breq	.+14     	; 0x25ba <__fixunssfsi+0x46>
    25ac:	b9 3f       	cpi	r27, 0xF9	; 249
    25ae:	cc f3       	brlt	.-14     	; 0x25a2 <__fixunssfsi+0x2e>
    25b0:	86 95       	lsr	r24
    25b2:	77 95       	ror	r23
    25b4:	67 95       	ror	r22
    25b6:	b3 95       	inc	r27
    25b8:	d9 f7       	brne	.-10     	; 0x25b0 <__fixunssfsi+0x3c>
    25ba:	3e f4       	brtc	.+14     	; 0x25ca <__fixunssfsi+0x56>
    25bc:	90 95       	com	r25
    25be:	80 95       	com	r24
    25c0:	70 95       	com	r23
    25c2:	61 95       	neg	r22
    25c4:	7f 4f       	sbci	r23, 0xFF	; 255
    25c6:	8f 4f       	sbci	r24, 0xFF	; 255
    25c8:	9f 4f       	sbci	r25, 0xFF	; 255
    25ca:	08 95       	ret

000025cc <__fp_cmp>:
    25cc:	99 0f       	add	r25, r25
    25ce:	00 08       	sbc	r0, r0
    25d0:	55 0f       	add	r21, r21
    25d2:	aa 0b       	sbc	r26, r26
    25d4:	e0 e8       	ldi	r30, 0x80	; 128
    25d6:	fe ef       	ldi	r31, 0xFE	; 254
    25d8:	16 16       	cp	r1, r22
    25da:	17 06       	cpc	r1, r23
    25dc:	e8 07       	cpc	r30, r24
    25de:	f9 07       	cpc	r31, r25
    25e0:	c0 f0       	brcs	.+48     	; 0x2612 <__fp_cmp+0x46>
    25e2:	12 16       	cp	r1, r18
    25e4:	13 06       	cpc	r1, r19
    25e6:	e4 07       	cpc	r30, r20
    25e8:	f5 07       	cpc	r31, r21
    25ea:	98 f0       	brcs	.+38     	; 0x2612 <__fp_cmp+0x46>
    25ec:	62 1b       	sub	r22, r18
    25ee:	73 0b       	sbc	r23, r19
    25f0:	84 0b       	sbc	r24, r20
    25f2:	95 0b       	sbc	r25, r21
    25f4:	39 f4       	brne	.+14     	; 0x2604 <__fp_cmp+0x38>
    25f6:	0a 26       	eor	r0, r26
    25f8:	61 f0       	breq	.+24     	; 0x2612 <__fp_cmp+0x46>
    25fa:	23 2b       	or	r18, r19
    25fc:	24 2b       	or	r18, r20
    25fe:	25 2b       	or	r18, r21
    2600:	21 f4       	brne	.+8      	; 0x260a <__fp_cmp+0x3e>
    2602:	08 95       	ret
    2604:	0a 26       	eor	r0, r26
    2606:	09 f4       	brne	.+2      	; 0x260a <__fp_cmp+0x3e>
    2608:	a1 40       	sbci	r26, 0x01	; 1
    260a:	a6 95       	lsr	r26
    260c:	8f ef       	ldi	r24, 0xFF	; 255
    260e:	81 1d       	adc	r24, r1
    2610:	81 1d       	adc	r24, r1
    2612:	08 95       	ret

00002614 <__fp_split3>:
    2614:	57 fd       	sbrc	r21, 7
    2616:	90 58       	subi	r25, 0x80	; 128
    2618:	44 0f       	add	r20, r20
    261a:	55 1f       	adc	r21, r21
    261c:	59 f0       	breq	.+22     	; 0x2634 <__fp_splitA+0x10>
    261e:	5f 3f       	cpi	r21, 0xFF	; 255
    2620:	71 f0       	breq	.+28     	; 0x263e <__fp_splitA+0x1a>
    2622:	47 95       	ror	r20

00002624 <__fp_splitA>:
    2624:	88 0f       	add	r24, r24
    2626:	97 fb       	bst	r25, 7
    2628:	99 1f       	adc	r25, r25
    262a:	61 f0       	breq	.+24     	; 0x2644 <__fp_splitA+0x20>
    262c:	9f 3f       	cpi	r25, 0xFF	; 255
    262e:	79 f0       	breq	.+30     	; 0x264e <__fp_splitA+0x2a>
    2630:	87 95       	ror	r24
    2632:	08 95       	ret
    2634:	12 16       	cp	r1, r18
    2636:	13 06       	cpc	r1, r19
    2638:	14 06       	cpc	r1, r20
    263a:	55 1f       	adc	r21, r21
    263c:	f2 cf       	rjmp	.-28     	; 0x2622 <__fp_split3+0xe>
    263e:	46 95       	lsr	r20
    2640:	f1 df       	rcall	.-30     	; 0x2624 <__fp_splitA>
    2642:	08 c0       	rjmp	.+16     	; 0x2654 <__fp_splitA+0x30>
    2644:	16 16       	cp	r1, r22
    2646:	17 06       	cpc	r1, r23
    2648:	18 06       	cpc	r1, r24
    264a:	99 1f       	adc	r25, r25
    264c:	f1 cf       	rjmp	.-30     	; 0x2630 <__fp_splitA+0xc>
    264e:	86 95       	lsr	r24
    2650:	71 05       	cpc	r23, r1
    2652:	61 05       	cpc	r22, r1
    2654:	08 94       	sec
    2656:	08 95       	ret

00002658 <__fp_zero>:
    2658:	e8 94       	clt

0000265a <__fp_szero>:
    265a:	bb 27       	eor	r27, r27
    265c:	66 27       	eor	r22, r22
    265e:	77 27       	eor	r23, r23
    2660:	cb 01       	movw	r24, r22
    2662:	97 f9       	bld	r25, 7
    2664:	08 95       	ret

00002666 <__gesf2>:
    2666:	b2 df       	rcall	.-156    	; 0x25cc <__fp_cmp>
    2668:	08 f4       	brcc	.+2      	; 0x266c <__gesf2+0x6>
    266a:	8f ef       	ldi	r24, 0xFF	; 255
    266c:	08 95       	ret

0000266e <__mulsf3>:
    266e:	0b d0       	rcall	.+22     	; 0x2686 <__mulsf3x>
    2670:	78 c0       	rjmp	.+240    	; 0x2762 <__fp_round>
    2672:	69 d0       	rcall	.+210    	; 0x2746 <__fp_pscA>
    2674:	28 f0       	brcs	.+10     	; 0x2680 <__mulsf3+0x12>
    2676:	6e d0       	rcall	.+220    	; 0x2754 <__fp_pscB>
    2678:	18 f0       	brcs	.+6      	; 0x2680 <__mulsf3+0x12>
    267a:	95 23       	and	r25, r21
    267c:	09 f0       	breq	.+2      	; 0x2680 <__mulsf3+0x12>
    267e:	5a c0       	rjmp	.+180    	; 0x2734 <__fp_inf>
    2680:	5f c0       	rjmp	.+190    	; 0x2740 <__fp_nan>
    2682:	11 24       	eor	r1, r1
    2684:	ea cf       	rjmp	.-44     	; 0x265a <__fp_szero>

00002686 <__mulsf3x>:
    2686:	c6 df       	rcall	.-116    	; 0x2614 <__fp_split3>
    2688:	a0 f3       	brcs	.-24     	; 0x2672 <__mulsf3+0x4>

0000268a <__mulsf3_pse>:
    268a:	95 9f       	mul	r25, r21
    268c:	d1 f3       	breq	.-12     	; 0x2682 <__mulsf3+0x14>
    268e:	95 0f       	add	r25, r21
    2690:	50 e0       	ldi	r21, 0x00	; 0
    2692:	55 1f       	adc	r21, r21
    2694:	62 9f       	mul	r22, r18
    2696:	f0 01       	movw	r30, r0
    2698:	72 9f       	mul	r23, r18
    269a:	bb 27       	eor	r27, r27
    269c:	f0 0d       	add	r31, r0
    269e:	b1 1d       	adc	r27, r1
    26a0:	63 9f       	mul	r22, r19
    26a2:	aa 27       	eor	r26, r26
    26a4:	f0 0d       	add	r31, r0
    26a6:	b1 1d       	adc	r27, r1
    26a8:	aa 1f       	adc	r26, r26
    26aa:	64 9f       	mul	r22, r20
    26ac:	66 27       	eor	r22, r22
    26ae:	b0 0d       	add	r27, r0
    26b0:	a1 1d       	adc	r26, r1
    26b2:	66 1f       	adc	r22, r22
    26b4:	82 9f       	mul	r24, r18
    26b6:	22 27       	eor	r18, r18
    26b8:	b0 0d       	add	r27, r0
    26ba:	a1 1d       	adc	r26, r1
    26bc:	62 1f       	adc	r22, r18
    26be:	73 9f       	mul	r23, r19
    26c0:	b0 0d       	add	r27, r0
    26c2:	a1 1d       	adc	r26, r1
    26c4:	62 1f       	adc	r22, r18
    26c6:	83 9f       	mul	r24, r19
    26c8:	a0 0d       	add	r26, r0
    26ca:	61 1d       	adc	r22, r1
    26cc:	22 1f       	adc	r18, r18
    26ce:	74 9f       	mul	r23, r20
    26d0:	33 27       	eor	r19, r19
    26d2:	a0 0d       	add	r26, r0
    26d4:	61 1d       	adc	r22, r1
    26d6:	23 1f       	adc	r18, r19
    26d8:	84 9f       	mul	r24, r20
    26da:	60 0d       	add	r22, r0
    26dc:	21 1d       	adc	r18, r1
    26de:	82 2f       	mov	r24, r18
    26e0:	76 2f       	mov	r23, r22
    26e2:	6a 2f       	mov	r22, r26
    26e4:	11 24       	eor	r1, r1
    26e6:	9f 57       	subi	r25, 0x7F	; 127
    26e8:	50 40       	sbci	r21, 0x00	; 0
    26ea:	8a f0       	brmi	.+34     	; 0x270e <__mulsf3_pse+0x84>
    26ec:	e1 f0       	breq	.+56     	; 0x2726 <__mulsf3_pse+0x9c>
    26ee:	88 23       	and	r24, r24
    26f0:	4a f0       	brmi	.+18     	; 0x2704 <__mulsf3_pse+0x7a>
    26f2:	ee 0f       	add	r30, r30
    26f4:	ff 1f       	adc	r31, r31
    26f6:	bb 1f       	adc	r27, r27
    26f8:	66 1f       	adc	r22, r22
    26fa:	77 1f       	adc	r23, r23
    26fc:	88 1f       	adc	r24, r24
    26fe:	91 50       	subi	r25, 0x01	; 1
    2700:	50 40       	sbci	r21, 0x00	; 0
    2702:	a9 f7       	brne	.-22     	; 0x26ee <__mulsf3_pse+0x64>
    2704:	9e 3f       	cpi	r25, 0xFE	; 254
    2706:	51 05       	cpc	r21, r1
    2708:	70 f0       	brcs	.+28     	; 0x2726 <__mulsf3_pse+0x9c>
    270a:	14 c0       	rjmp	.+40     	; 0x2734 <__fp_inf>
    270c:	a6 cf       	rjmp	.-180    	; 0x265a <__fp_szero>
    270e:	5f 3f       	cpi	r21, 0xFF	; 255
    2710:	ec f3       	brlt	.-6      	; 0x270c <__mulsf3_pse+0x82>
    2712:	98 3e       	cpi	r25, 0xE8	; 232
    2714:	dc f3       	brlt	.-10     	; 0x270c <__mulsf3_pse+0x82>
    2716:	86 95       	lsr	r24
    2718:	77 95       	ror	r23
    271a:	67 95       	ror	r22
    271c:	b7 95       	ror	r27
    271e:	f7 95       	ror	r31
    2720:	e7 95       	ror	r30
    2722:	9f 5f       	subi	r25, 0xFF	; 255
    2724:	c1 f7       	brne	.-16     	; 0x2716 <__mulsf3_pse+0x8c>
    2726:	fe 2b       	or	r31, r30
    2728:	88 0f       	add	r24, r24
    272a:	91 1d       	adc	r25, r1
    272c:	96 95       	lsr	r25
    272e:	87 95       	ror	r24
    2730:	97 f9       	bld	r25, 7
    2732:	08 95       	ret

00002734 <__fp_inf>:
    2734:	97 f9       	bld	r25, 7
    2736:	9f 67       	ori	r25, 0x7F	; 127
    2738:	80 e8       	ldi	r24, 0x80	; 128
    273a:	70 e0       	ldi	r23, 0x00	; 0
    273c:	60 e0       	ldi	r22, 0x00	; 0
    273e:	08 95       	ret

00002740 <__fp_nan>:
    2740:	9f ef       	ldi	r25, 0xFF	; 255
    2742:	80 ec       	ldi	r24, 0xC0	; 192
    2744:	08 95       	ret

00002746 <__fp_pscA>:
    2746:	00 24       	eor	r0, r0
    2748:	0a 94       	dec	r0
    274a:	16 16       	cp	r1, r22
    274c:	17 06       	cpc	r1, r23
    274e:	18 06       	cpc	r1, r24
    2750:	09 06       	cpc	r0, r25
    2752:	08 95       	ret

00002754 <__fp_pscB>:
    2754:	00 24       	eor	r0, r0
    2756:	0a 94       	dec	r0
    2758:	12 16       	cp	r1, r18
    275a:	13 06       	cpc	r1, r19
    275c:	14 06       	cpc	r1, r20
    275e:	05 06       	cpc	r0, r21
    2760:	08 95       	ret

00002762 <__fp_round>:
    2762:	09 2e       	mov	r0, r25
    2764:	03 94       	inc	r0
    2766:	00 0c       	add	r0, r0
    2768:	11 f4       	brne	.+4      	; 0x276e <__fp_round+0xc>
    276a:	88 23       	and	r24, r24
    276c:	52 f0       	brmi	.+20     	; 0x2782 <__fp_round+0x20>
    276e:	bb 0f       	add	r27, r27
    2770:	40 f4       	brcc	.+16     	; 0x2782 <__fp_round+0x20>
    2772:	bf 2b       	or	r27, r31
    2774:	11 f4       	brne	.+4      	; 0x277a <__fp_round+0x18>
    2776:	60 ff       	sbrs	r22, 0
    2778:	04 c0       	rjmp	.+8      	; 0x2782 <__fp_round+0x20>
    277a:	6f 5f       	subi	r22, 0xFF	; 255
    277c:	7f 4f       	sbci	r23, 0xFF	; 255
    277e:	8f 4f       	sbci	r24, 0xFF	; 255
    2780:	9f 4f       	sbci	r25, 0xFF	; 255
    2782:	08 95       	ret

00002784 <__divmodhi4>:
    2784:	97 fb       	bst	r25, 7
    2786:	07 2e       	mov	r0, r23
    2788:	16 f4       	brtc	.+4      	; 0x278e <__divmodhi4+0xa>
    278a:	00 94       	com	r0
    278c:	06 d0       	rcall	.+12     	; 0x279a <__divmodhi4_neg1>
    278e:	77 fd       	sbrc	r23, 7
    2790:	08 d0       	rcall	.+16     	; 0x27a2 <__divmodhi4_neg2>
    2792:	0b d0       	rcall	.+22     	; 0x27aa <__udivmodhi4>
    2794:	07 fc       	sbrc	r0, 7
    2796:	05 d0       	rcall	.+10     	; 0x27a2 <__divmodhi4_neg2>
    2798:	3e f4       	brtc	.+14     	; 0x27a8 <__divmodhi4_exit>

0000279a <__divmodhi4_neg1>:
    279a:	90 95       	com	r25
    279c:	81 95       	neg	r24
    279e:	9f 4f       	sbci	r25, 0xFF	; 255
    27a0:	08 95       	ret

000027a2 <__divmodhi4_neg2>:
    27a2:	70 95       	com	r23
    27a4:	61 95       	neg	r22
    27a6:	7f 4f       	sbci	r23, 0xFF	; 255

000027a8 <__divmodhi4_exit>:
    27a8:	08 95       	ret

000027aa <__udivmodhi4>:
    27aa:	aa 1b       	sub	r26, r26
    27ac:	bb 1b       	sub	r27, r27
    27ae:	51 e1       	ldi	r21, 0x11	; 17
    27b0:	07 c0       	rjmp	.+14     	; 0x27c0 <__udivmodhi4_ep>

000027b2 <__udivmodhi4_loop>:
    27b2:	aa 1f       	adc	r26, r26
    27b4:	bb 1f       	adc	r27, r27
    27b6:	a6 17       	cp	r26, r22
    27b8:	b7 07       	cpc	r27, r23
    27ba:	10 f0       	brcs	.+4      	; 0x27c0 <__udivmodhi4_ep>
    27bc:	a6 1b       	sub	r26, r22
    27be:	b7 0b       	sbc	r27, r23

000027c0 <__udivmodhi4_ep>:
    27c0:	88 1f       	adc	r24, r24
    27c2:	99 1f       	adc	r25, r25
    27c4:	5a 95       	dec	r21
    27c6:	a9 f7       	brne	.-22     	; 0x27b2 <__udivmodhi4_loop>
    27c8:	80 95       	com	r24
    27ca:	90 95       	com	r25
    27cc:	bc 01       	movw	r22, r24
    27ce:	cd 01       	movw	r24, r26
    27d0:	08 95       	ret

000027d2 <do_rand>:
    27d2:	8f 92       	push	r8
    27d4:	9f 92       	push	r9
    27d6:	af 92       	push	r10
    27d8:	bf 92       	push	r11
    27da:	cf 92       	push	r12
    27dc:	df 92       	push	r13
    27de:	ef 92       	push	r14
    27e0:	ff 92       	push	r15
    27e2:	cf 93       	push	r28
    27e4:	df 93       	push	r29
    27e6:	ec 01       	movw	r28, r24
    27e8:	68 81       	ld	r22, Y
    27ea:	79 81       	ldd	r23, Y+1	; 0x01
    27ec:	8a 81       	ldd	r24, Y+2	; 0x02
    27ee:	9b 81       	ldd	r25, Y+3	; 0x03
    27f0:	61 15       	cp	r22, r1
    27f2:	71 05       	cpc	r23, r1
    27f4:	81 05       	cpc	r24, r1
    27f6:	91 05       	cpc	r25, r1
    27f8:	21 f4       	brne	.+8      	; 0x2802 <do_rand+0x30>
    27fa:	64 e2       	ldi	r22, 0x24	; 36
    27fc:	79 ed       	ldi	r23, 0xD9	; 217
    27fe:	8b e5       	ldi	r24, 0x5B	; 91
    2800:	97 e0       	ldi	r25, 0x07	; 7
    2802:	2d e1       	ldi	r18, 0x1D	; 29
    2804:	33 ef       	ldi	r19, 0xF3	; 243
    2806:	41 e0       	ldi	r20, 0x01	; 1
    2808:	50 e0       	ldi	r21, 0x00	; 0
    280a:	a1 d0       	rcall	.+322    	; 0x294e <__divmodsi4>
    280c:	49 01       	movw	r8, r18
    280e:	5a 01       	movw	r10, r20
    2810:	9b 01       	movw	r18, r22
    2812:	ac 01       	movw	r20, r24
    2814:	a7 ea       	ldi	r26, 0xA7	; 167
    2816:	b1 e4       	ldi	r27, 0x41	; 65
    2818:	b6 d0       	rcall	.+364    	; 0x2986 <__muluhisi3>
    281a:	6b 01       	movw	r12, r22
    281c:	7c 01       	movw	r14, r24
    281e:	ac ee       	ldi	r26, 0xEC	; 236
    2820:	b4 ef       	ldi	r27, 0xF4	; 244
    2822:	a5 01       	movw	r20, r10
    2824:	94 01       	movw	r18, r8
    2826:	bb d0       	rcall	.+374    	; 0x299e <__mulohisi3>
    2828:	dc 01       	movw	r26, r24
    282a:	cb 01       	movw	r24, r22
    282c:	8c 0d       	add	r24, r12
    282e:	9d 1d       	adc	r25, r13
    2830:	ae 1d       	adc	r26, r14
    2832:	bf 1d       	adc	r27, r15
    2834:	b7 ff       	sbrs	r27, 7
    2836:	03 c0       	rjmp	.+6      	; 0x283e <do_rand+0x6c>
    2838:	01 97       	sbiw	r24, 0x01	; 1
    283a:	a1 09       	sbc	r26, r1
    283c:	b0 48       	sbci	r27, 0x80	; 128
    283e:	88 83       	st	Y, r24
    2840:	99 83       	std	Y+1, r25	; 0x01
    2842:	aa 83       	std	Y+2, r26	; 0x02
    2844:	bb 83       	std	Y+3, r27	; 0x03
    2846:	9f 77       	andi	r25, 0x7F	; 127
    2848:	df 91       	pop	r29
    284a:	cf 91       	pop	r28
    284c:	ff 90       	pop	r15
    284e:	ef 90       	pop	r14
    2850:	df 90       	pop	r13
    2852:	cf 90       	pop	r12
    2854:	bf 90       	pop	r11
    2856:	af 90       	pop	r10
    2858:	9f 90       	pop	r9
    285a:	8f 90       	pop	r8
    285c:	08 95       	ret

0000285e <rand_r>:
    285e:	b9 cf       	rjmp	.-142    	; 0x27d2 <do_rand>

00002860 <rand>:
    2860:	80 e0       	ldi	r24, 0x00	; 0
    2862:	91 e0       	ldi	r25, 0x01	; 1
    2864:	b6 cf       	rjmp	.-148    	; 0x27d2 <do_rand>

00002866 <srand>:
    2866:	a0 e0       	ldi	r26, 0x00	; 0
    2868:	b0 e0       	ldi	r27, 0x00	; 0
    286a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    286e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2872:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    2876:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    287a:	08 95       	ret

0000287c <memset>:
    287c:	dc 01       	movw	r26, r24
    287e:	01 c0       	rjmp	.+2      	; 0x2882 <memset+0x6>
    2880:	6d 93       	st	X+, r22
    2882:	41 50       	subi	r20, 0x01	; 1
    2884:	50 40       	sbci	r21, 0x00	; 0
    2886:	e0 f7       	brcc	.-8      	; 0x2880 <memset+0x4>
    2888:	08 95       	ret

0000288a <strcat>:
    288a:	fb 01       	movw	r30, r22
    288c:	dc 01       	movw	r26, r24
    288e:	0d 90       	ld	r0, X+
    2890:	00 20       	and	r0, r0
    2892:	e9 f7       	brne	.-6      	; 0x288e <strcat+0x4>
    2894:	11 97       	sbiw	r26, 0x01	; 1
    2896:	01 90       	ld	r0, Z+
    2898:	0d 92       	st	X+, r0
    289a:	00 20       	and	r0, r0
    289c:	e1 f7       	brne	.-8      	; 0x2896 <strcat+0xc>
    289e:	08 95       	ret

000028a0 <itoa>:
    28a0:	45 32       	cpi	r20, 0x25	; 37
    28a2:	51 05       	cpc	r21, r1
    28a4:	18 f4       	brcc	.+6      	; 0x28ac <itoa+0xc>
    28a6:	42 30       	cpi	r20, 0x02	; 2
    28a8:	08 f0       	brcs	.+2      	; 0x28ac <itoa+0xc>
    28aa:	04 c0       	rjmp	.+8      	; 0x28b4 <__itoa_ncheck>
    28ac:	fb 01       	movw	r30, r22
    28ae:	10 82       	st	Z, r1
    28b0:	cb 01       	movw	r24, r22
    28b2:	08 95       	ret

000028b4 <__itoa_ncheck>:
    28b4:	bb 27       	eor	r27, r27
    28b6:	4a 30       	cpi	r20, 0x0A	; 10
    28b8:	31 f4       	brne	.+12     	; 0x28c6 <__itoa_ncheck+0x12>
    28ba:	99 23       	and	r25, r25
    28bc:	22 f4       	brpl	.+8      	; 0x28c6 <__itoa_ncheck+0x12>
    28be:	bd e2       	ldi	r27, 0x2D	; 45
    28c0:	90 95       	com	r25
    28c2:	81 95       	neg	r24
    28c4:	9f 4f       	sbci	r25, 0xFF	; 255
    28c6:	01 c0       	rjmp	.+2      	; 0x28ca <__utoa_common>

000028c8 <__utoa_ncheck>:
    28c8:	bb 27       	eor	r27, r27

000028ca <__utoa_common>:
    28ca:	fb 01       	movw	r30, r22
    28cc:	55 27       	eor	r21, r21
    28ce:	aa 27       	eor	r26, r26
    28d0:	88 0f       	add	r24, r24
    28d2:	99 1f       	adc	r25, r25
    28d4:	aa 1f       	adc	r26, r26
    28d6:	a4 17       	cp	r26, r20
    28d8:	10 f0       	brcs	.+4      	; 0x28de <__utoa_common+0x14>
    28da:	a4 1b       	sub	r26, r20
    28dc:	83 95       	inc	r24
    28de:	50 51       	subi	r21, 0x10	; 16
    28e0:	b9 f7       	brne	.-18     	; 0x28d0 <__utoa_common+0x6>
    28e2:	a0 5d       	subi	r26, 0xD0	; 208
    28e4:	aa 33       	cpi	r26, 0x3A	; 58
    28e6:	08 f0       	brcs	.+2      	; 0x28ea <__utoa_common+0x20>
    28e8:	a9 5d       	subi	r26, 0xD9	; 217
    28ea:	a1 93       	st	Z+, r26
    28ec:	00 97       	sbiw	r24, 0x00	; 0
    28ee:	79 f7       	brne	.-34     	; 0x28ce <__utoa_common+0x4>
    28f0:	b1 11       	cpse	r27, r1
    28f2:	b1 93       	st	Z+, r27
    28f4:	11 92       	st	Z+, r1
    28f6:	cb 01       	movw	r24, r22
    28f8:	00 c0       	rjmp	.+0      	; 0x28fa <strrev>

000028fa <strrev>:
    28fa:	dc 01       	movw	r26, r24
    28fc:	fc 01       	movw	r30, r24
    28fe:	67 2f       	mov	r22, r23
    2900:	71 91       	ld	r23, Z+
    2902:	77 23       	and	r23, r23
    2904:	e1 f7       	brne	.-8      	; 0x28fe <strrev+0x4>
    2906:	32 97       	sbiw	r30, 0x02	; 2
    2908:	04 c0       	rjmp	.+8      	; 0x2912 <strrev+0x18>
    290a:	7c 91       	ld	r23, X
    290c:	6d 93       	st	X+, r22
    290e:	70 83       	st	Z, r23
    2910:	62 91       	ld	r22, -Z
    2912:	ae 17       	cp	r26, r30
    2914:	bf 07       	cpc	r27, r31
    2916:	c8 f3       	brcs	.-14     	; 0x290a <strrev+0x10>
    2918:	08 95       	ret

0000291a <eeprom_read_byte>:
    291a:	f9 99       	sbic	0x1f, 1	; 31
    291c:	fe cf       	rjmp	.-4      	; 0x291a <eeprom_read_byte>
    291e:	92 bd       	out	0x22, r25	; 34
    2920:	81 bd       	out	0x21, r24	; 33
    2922:	f8 9a       	sbi	0x1f, 0	; 31
    2924:	99 27       	eor	r25, r25
    2926:	80 b5       	in	r24, 0x20	; 32
    2928:	08 95       	ret

0000292a <eeprom_update_byte>:
    292a:	26 2f       	mov	r18, r22

0000292c <eeprom_update_r18>:
    292c:	f9 99       	sbic	0x1f, 1	; 31
    292e:	fe cf       	rjmp	.-4      	; 0x292c <eeprom_update_r18>
    2930:	92 bd       	out	0x22, r25	; 34
    2932:	81 bd       	out	0x21, r24	; 33
    2934:	f8 9a       	sbi	0x1f, 0	; 31
    2936:	01 97       	sbiw	r24, 0x01	; 1
    2938:	00 b4       	in	r0, 0x20	; 32
    293a:	02 16       	cp	r0, r18
    293c:	39 f0       	breq	.+14     	; 0x294c <eeprom_update_r18+0x20>
    293e:	1f ba       	out	0x1f, r1	; 31
    2940:	20 bd       	out	0x20, r18	; 32
    2942:	0f b6       	in	r0, 0x3f	; 63
    2944:	f8 94       	cli
    2946:	fa 9a       	sbi	0x1f, 2	; 31
    2948:	f9 9a       	sbi	0x1f, 1	; 31
    294a:	0f be       	out	0x3f, r0	; 63
    294c:	08 95       	ret

0000294e <__divmodsi4>:
    294e:	05 2e       	mov	r0, r21
    2950:	97 fb       	bst	r25, 7
    2952:	16 f4       	brtc	.+4      	; 0x2958 <__divmodsi4+0xa>
    2954:	00 94       	com	r0
    2956:	0f d0       	rcall	.+30     	; 0x2976 <__negsi2>
    2958:	57 fd       	sbrc	r21, 7
    295a:	05 d0       	rcall	.+10     	; 0x2966 <__divmodsi4_neg2>
    295c:	24 d0       	rcall	.+72     	; 0x29a6 <__udivmodsi4>
    295e:	07 fc       	sbrc	r0, 7
    2960:	02 d0       	rcall	.+4      	; 0x2966 <__divmodsi4_neg2>
    2962:	46 f4       	brtc	.+16     	; 0x2974 <__divmodsi4_exit>
    2964:	08 c0       	rjmp	.+16     	; 0x2976 <__negsi2>

00002966 <__divmodsi4_neg2>:
    2966:	50 95       	com	r21
    2968:	40 95       	com	r20
    296a:	30 95       	com	r19
    296c:	21 95       	neg	r18
    296e:	3f 4f       	sbci	r19, 0xFF	; 255
    2970:	4f 4f       	sbci	r20, 0xFF	; 255
    2972:	5f 4f       	sbci	r21, 0xFF	; 255

00002974 <__divmodsi4_exit>:
    2974:	08 95       	ret

00002976 <__negsi2>:
    2976:	90 95       	com	r25
    2978:	80 95       	com	r24
    297a:	70 95       	com	r23
    297c:	61 95       	neg	r22
    297e:	7f 4f       	sbci	r23, 0xFF	; 255
    2980:	8f 4f       	sbci	r24, 0xFF	; 255
    2982:	9f 4f       	sbci	r25, 0xFF	; 255
    2984:	08 95       	ret

00002986 <__muluhisi3>:
    2986:	31 d0       	rcall	.+98     	; 0x29ea <__umulhisi3>
    2988:	a5 9f       	mul	r26, r21
    298a:	90 0d       	add	r25, r0
    298c:	b4 9f       	mul	r27, r20
    298e:	90 0d       	add	r25, r0
    2990:	a4 9f       	mul	r26, r20
    2992:	80 0d       	add	r24, r0
    2994:	91 1d       	adc	r25, r1
    2996:	11 24       	eor	r1, r1
    2998:	08 95       	ret

0000299a <__mulshisi3>:
    299a:	b7 ff       	sbrs	r27, 7
    299c:	f4 cf       	rjmp	.-24     	; 0x2986 <__muluhisi3>

0000299e <__mulohisi3>:
    299e:	f3 df       	rcall	.-26     	; 0x2986 <__muluhisi3>
    29a0:	82 1b       	sub	r24, r18
    29a2:	93 0b       	sbc	r25, r19
    29a4:	08 95       	ret

000029a6 <__udivmodsi4>:
    29a6:	a1 e2       	ldi	r26, 0x21	; 33
    29a8:	1a 2e       	mov	r1, r26
    29aa:	aa 1b       	sub	r26, r26
    29ac:	bb 1b       	sub	r27, r27
    29ae:	fd 01       	movw	r30, r26
    29b0:	0d c0       	rjmp	.+26     	; 0x29cc <__udivmodsi4_ep>

000029b2 <__udivmodsi4_loop>:
    29b2:	aa 1f       	adc	r26, r26
    29b4:	bb 1f       	adc	r27, r27
    29b6:	ee 1f       	adc	r30, r30
    29b8:	ff 1f       	adc	r31, r31
    29ba:	a2 17       	cp	r26, r18
    29bc:	b3 07       	cpc	r27, r19
    29be:	e4 07       	cpc	r30, r20
    29c0:	f5 07       	cpc	r31, r21
    29c2:	20 f0       	brcs	.+8      	; 0x29cc <__udivmodsi4_ep>
    29c4:	a2 1b       	sub	r26, r18
    29c6:	b3 0b       	sbc	r27, r19
    29c8:	e4 0b       	sbc	r30, r20
    29ca:	f5 0b       	sbc	r31, r21

000029cc <__udivmodsi4_ep>:
    29cc:	66 1f       	adc	r22, r22
    29ce:	77 1f       	adc	r23, r23
    29d0:	88 1f       	adc	r24, r24
    29d2:	99 1f       	adc	r25, r25
    29d4:	1a 94       	dec	r1
    29d6:	69 f7       	brne	.-38     	; 0x29b2 <__udivmodsi4_loop>
    29d8:	60 95       	com	r22
    29da:	70 95       	com	r23
    29dc:	80 95       	com	r24
    29de:	90 95       	com	r25
    29e0:	9b 01       	movw	r18, r22
    29e2:	ac 01       	movw	r20, r24
    29e4:	bd 01       	movw	r22, r26
    29e6:	cf 01       	movw	r24, r30
    29e8:	08 95       	ret

000029ea <__umulhisi3>:
    29ea:	a2 9f       	mul	r26, r18
    29ec:	b0 01       	movw	r22, r0
    29ee:	b3 9f       	mul	r27, r19
    29f0:	c0 01       	movw	r24, r0
    29f2:	a3 9f       	mul	r26, r19
    29f4:	70 0d       	add	r23, r0
    29f6:	81 1d       	adc	r24, r1
    29f8:	11 24       	eor	r1, r1
    29fa:	91 1d       	adc	r25, r1
    29fc:	b2 9f       	mul	r27, r18
    29fe:	70 0d       	add	r23, r0
    2a00:	81 1d       	adc	r24, r1
    2a02:	11 24       	eor	r1, r1
    2a04:	91 1d       	adc	r25, r1
    2a06:	08 95       	ret

00002a08 <_exit>:
    2a08:	f8 94       	cli

00002a0a <__stop_program>:
    2a0a:	ff cf       	rjmp	.-2      	; 0x2a0a <__stop_program>
